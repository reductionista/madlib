import sys
from os import path
import os
import time

lines = sys.stdin.readlines()
lines = [ line.rstrip() for line in lines ]
new_row = ''.join(lines)
new_mst_key, _ = new_row.split(',', 1)
fname_in = "/tmp/{0}{1}".format(sys.argv[1], new_mst_key)
fname_out = fname_in + '.tmp'
fd_out = open(fname_out, 'w')

start = time.time()

log_out = open('/tmp/update_or_replace.log', 'a')
log_out.write("INSERT called at {}\n".format(start))
log_out.write(new_row + '\n')
log_out.write('new_mst_key = ' + new_mst_key + '\n')

def write_row(row):
    global first_row
    global fd_out

    if first_row:
        first_row=False
    else:
        fd_out.write('\n')

    fd_out.write(row)

first_row = True
if path.exists(fname_in):
    fd_in = open(fname_in, 'r')

    for row in fd_in:
        mst_key, _ = row.split(',', 1)
        log_out.write('checking mst key "{}" = "{}"'.format(new_mst_key, mst_key))
        if mst_key == new_mst_key:
            write_row(new_row) # update row
            new_row = None
        else:
            write_row(row.rstrip())

    if new_row: # append after existing rows
        write_row(new_row)

    fd_in.close()
    os.remove(fname_in)
else:
    write_row(new_row)

fd_out.close()
os.rename(fname_out, fname_in)
finish = time.time()
log_out.write("END INSERT at {}, took {}s\n".format(finish, finish-start))
log_out.close()
