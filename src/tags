!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	modules/linear_systems/dense_linear_systems.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap A;$/;"	m	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState	file:
A	modules/stats/clustered_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble A;$/;"	m	class:madlib::modules::stats::CLABTransitionState	file:
A	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble A;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
AGG_CONTEXT_AGGREGATE	ports/greenplum/dbconnector/Compatibility.hpp	47;"	d
AGG_CONTEXT_AGGREGATE	ports/postgres/dbconnector/Compatibility.hpp	66;"	d
AGG_CONTEXT_WINDOW	ports/greenplum/dbconnector/Compatibility.hpp	48;"	d
AGG_CONTEXT_WINDOW	ports/postgres/dbconnector/Compatibility.hpp	67;"	d
ANCHOR_TEMPLATE	madpack/yaml/serializer.py	/^    ANCHOR_TEMPLATE = u'id%03d'$/;"	v	class:Serializer
Abs	ports/postgres/dbconnector/dbconnector.hpp	53;"	d
Action	madpack/argparse.py	/^class Action(_AttributeHolder):$/;"	c
AggCheckCallContext	ports/greenplum/dbconnector/Compatibility.hpp	/^AggCheckCallContext(FunctionCallInfo fcinfo, MemoryContext *aggcontext) {$/;"	f	namespace:madlib::dbconnector::postgres::__anon99
AggCheckCallContext	ports/postgres/dbconnector/Compatibility.hpp	/^AggCheckCallContext(FunctionCallInfo fcinfo, MemoryContext *aggcontext) {$/;"	f	namespace:madlib::dbconnector::postgres::__anon31
AggregateContext	dbal/dbal_proto.hpp	/^    AggregateContext$/;"	e	enum:madlib::dbal::MemoryContext
AlgoState	modules/convex/type/state.hpp	/^    struct AlgoState {$/;"	s	class:madlib::modules::convex::GLMCGState
AlgoState	modules/convex/type/state.hpp	/^    struct AlgoState {$/;"	s	class:madlib::modules::convex::GLMIGDState
AlgoState	modules/convex/type/state.hpp	/^    struct AlgoState {$/;"	s	class:madlib::modules::convex::GLMNewtonState
AlgoState	modules/convex/type/state.hpp	/^    struct AlgoState {$/;"	s	class:madlib::modules::convex::LMFIGDState
AlgoState	modules/convex/type/state.hpp	/^    struct AlgoState {$/;"	s	class:madlib::modules::convex::MLPIGDState
AliasEvent	madpack/yaml/events.py	/^class AliasEvent(NodeEvent):$/;"	c
AliasToken	madpack/yaml/tokens.py	/^class AliasToken(Token):$/;"	c
Allocator	ports/postgres/dbconnector/Allocator_proto.hpp	/^    Allocator() { }$/;"	f	class:madlib::dbconnector::postgres::Allocator
Allocator	ports/postgres/dbconnector/Allocator_proto.hpp	/^class Allocator {$/;"	c	namespace:madlib::dbconnector::postgres
AnchorToken	madpack/yaml/tokens.py	/^class AnchorToken(Token):$/;"	c
AnyType	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::AnyType()$/;"	f	class:madlib::dbconnector::postgres::AnyType
AnyType	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::AnyType(FunctionCallInfo inFnCallInfo)$/;"	f	class:madlib::dbconnector::postgres::AnyType
AnyType	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::AnyType(SystemInformation* inSysInfo, Datum inDatum,$/;"	f	class:madlib::dbconnector::postgres::AnyType
AnyType	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::AnyType(SystemInformation* inSysInfo,$/;"	f	class:madlib::dbconnector::postgres::AnyType
AnyType	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::AnyType(const T& inValue, bool inForceLazyConversionToDatum)$/;"	f	class:madlib::dbconnector::postgres::AnyType
AnyType	ports/postgres/dbconnector/AnyType_proto.hpp	/^class AnyType {$/;"	c	namespace:madlib::dbconnector::postgres
AnyType_cast	ports/postgres/dbconnector/AnyType_proto.hpp	/^AnyType_cast(T& inValue) {$/;"	f	namespace:madlib::dbconnector::postgres
AnyType_cast	ports/postgres/dbconnector/AnyType_proto.hpp	/^AnyType_cast(const AnyType& inValue) {$/;"	f	namespace:madlib::dbconnector::postgres
AnyType_cast	ports/postgres/dbconnector/AnyType_proto.hpp	/^AnyType_cast(const T& inValue) {$/;"	f	namespace:madlib::dbconnector::postgres
Argument	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::Argument::Argument(AnyType inValue)$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle::Argument
Argument	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::Argument::Argument(const T& inValue)$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle::Argument
Argument	ports/postgres/dbconnector/FunctionHandle_proto.hpp	/^    class Argument : public AnyType {$/;"	c	class:madlib::dbconnector::postgres::FunctionHandle
ArgumentDefaultsHelpFormatter	madpack/argparse.py	/^class ArgumentDefaultsHelpFormatter(HelpFormatter):$/;"	c
ArgumentError	madpack/argparse.py	/^class ArgumentError(Exception):$/;"	c
ArgumentParser	madpack/argparse.py	/^class ArgumentParser(_AttributeHolder, _ActionsContainer):$/;"	c
ArgumentTypeError	madpack/argparse.py	/^class ArgumentTypeError(Exception):$/;"	c
ArrayDeleter	utils/memory.hpp	/^struct ArrayDeleter {$/;"	s	namespace:madlib::utils::memory
ArrayElemCorrState	modules/stats/cox_prop_hazards.cpp	/^    ArrayElemCorrState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::ArrayElemCorrState
ArrayElemCorrState	modules/stats/cox_prop_hazards.cpp	/^class ArrayElemCorrState {$/;"	c	namespace:madlib::modules::stats	file:
ArrayHandle	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^ArrayHandle<T>::ArrayHandle(ArrayType *inArray): mArray(inArray) {$/;"	f	class:madlib::dbconnector::postgres::ArrayHandle
ArrayHandle	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^class ArrayHandle {$/;"	c	namespace:madlib::dbconnector::postgres
ArrayType	dbal/dbal_proto.hpp	/^    ArrayType,$/;"	e	enum:madlib::dbal::TypeClass
ArrayWithNullException	ports/postgres/dbconnector/ArrayWithNullException_proto.hpp	/^    ArrayWithNullException()$/;"	f	class:madlib::dbconnector::postgres::ArrayWithNullException
ArrayWithNullException	ports/postgres/dbconnector/ArrayWithNullException_proto.hpp	/^    ArrayWithNullException(size_t array_size)$/;"	f	class:madlib::dbconnector::postgres::ArrayWithNullException
ArrayWithNullException	ports/postgres/dbconnector/ArrayWithNullException_proto.hpp	/^class ArrayWithNullException : public std::runtime_error {$/;"	c	namespace:madlib::dbconnector::postgres
AvgVectorState	modules/linalg/average.cpp	/^    AvgVectorState(const AnyType &inArray)$/;"	f	class:madlib::modules::linalg::AvgVectorState
AvgVectorState	modules/linalg/average.cpp	/^class AvgVectorState {$/;"	c	namespace:madlib::modules::linalg	file:
B	libstemmer/runtime/api.h	/^    unsigned char * B;$/;"	m	struct:SN_env
B	modules/stats/clustered_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap B;$/;"	m	class:madlib::modules::stats::CLABTransitionState	file:
B	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap B;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
BOOST_ENABLE_ASSERT_HANDLER	dbal/BoostIntegration/BoostIntegration.hpp	22;"	d
Base	dbal/ByteStreamHandleBuf_proto.hpp	/^    typedef ByteStreamHandleBuf<Storage, CharType, Immutable> Base;$/;"	t	class:madlib::dbal::ByteStreamHandleBuf
Base	dbal/ByteStream_proto.hpp	/^    typedef ByteStream<StreamBuf, TypeTraits, Immutable> Base;$/;"	t	class:madlib::dbal::ByteStream
Base	dbal/DynamicStruct_proto.hpp	/^        DynamicStructRootContainer<Storage, TypeTraits>, Immutable> Base;$/;"	t	class:madlib::dbal::DynamicStructBase
Base	dbal/DynamicStruct_proto.hpp	/^    typedef DynamicStruct<Derived, Container, Immutable> Base;$/;"	t	class:madlib::dbal::DynamicStruct
Base	dbal/DynamicStruct_proto.hpp	/^    typedef DynamicStructBase<Derived, Container, Immutable> Base;$/;"	t	class:madlib::dbal::DynamicStructBase
Base	dbal/DynamicStruct_proto.hpp	/^    typedef DynamicStructBase<Derived, Container> Base;$/;"	t	class:madlib::dbal::DynamicStruct
Base	dbal/EigenIntegration/HandleMap_proto.hpp	/^    typedef Eigen::Map<EigenType, MapOptions> Base;$/;"	t	class:madlib::dbal::eigen_integration::HandleMap
Base	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp	/^    typedef Eigen::SelfAdjointEigenSolver<MatrixType> Base;$/;"	t	class:madlib::dbal::eigen_integration::SymmetricPositiveDefiniteEigenDecomposition
Base	dbal/OutputStreamBufferBase_proto.hpp	/^    typedef std::basic_streambuf<C> Base;$/;"	t	class:madlib::dbal::OutputStreamBufferBase
Base	dbal/Reference_proto.hpp	/^    typedef Ref<T, false> Base;$/;"	t	class:madlib::dbal::Ref
Base	modules/convex/newton.hpp	/^    typedef DynamicStruct<Newton,Container> Base;$/;"	t	class:madlib::modules::convex::Newton
Base	modules/glm/GLM_proto.hpp	/^    typedef DynamicStruct<GLMAccumulator,Container> Base;$/;"	t	class:madlib::modules::glm::GLMAccumulator
Base	modules/glm/MultiResponseGLM_proto.hpp	/^    typedef DynamicStruct<MultiResponseGLMAccumulator,Container> Base;$/;"	t	class:madlib::modules::glm::MultiResponseGLMAccumulator
Base	modules/glm/Ordinal_proto.hpp	/^    typedef DynamicStruct<OrdinalAccumulator,Container> Base;$/;"	t	class:madlib::modules::glm::OrdinalAccumulator
Base	modules/linear_systems/dense_linear_systems_states.hpp	/^    typedef DynamicStruct<ResidualState, Container> Base;$/;"	t	class:madlib::modules::linear_systems::ResidualState
Base	modules/linear_systems/sparse_linear_systems_states.hpp	/^    typedef DynamicStruct<ResidualState, Container> Base;$/;"	t	class:madlib::modules::linear_systems::ResidualState
Base	modules/prob/boost.hpp	/^    typedef IntegerDomainCheck<Distribution> Base;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Base	modules/prob/boost.hpp	/^    typedef IntegerDomainCheck<Distribution> Base;$/;"	t	struct:madlib::modules::prob::__anon12::NonNegativeIntegerDomainCheck
Base	modules/prob/boost.hpp	/^    typedef NonNegativeIntegerDomainCheck<Distribution> Base;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Base	modules/prob/boost.hpp	/^    typedef PositiveDomainCheck<Distribution> Base;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Base	modules/prob/boost.hpp	/^    typedef PositiveDomainCheck<Distribution> Base;$/;"	t	struct:madlib::modules::prob::__anon12::ZeroOneDomainCheck
Base	modules/prob/boost.hpp	/^    typedef RealDomainCheck<Distribution> Base;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Base	modules/prob/boost.hpp	/^    typedef RealDomainCheck<Distribution> Base;$/;"	t	struct:madlib::modules::prob::__anon12::IntegerDomainCheck
Base	modules/prob/boost.hpp	/^    typedef RealDomainCheck<Distribution> Base;$/;"	t	struct:madlib::modules::prob::__anon12::PositiveDomainCheck
Base	modules/prob/boost.hpp	/^    typedef ZeroOneDomainCheck<Distribution> Base;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Base	modules/recursive_partitioning/ConSplits.hpp	/^    typedef DynamicStruct<ConSplitsResult, Container> Base;$/;"	t	class:madlib::modules::recursive_partitioning::ConSplitsResult
Base	modules/recursive_partitioning/ConSplits.hpp	/^    typedef DynamicStruct<ConSplitsSample, Container> Base;$/;"	t	class:madlib::modules::recursive_partitioning::ConSplitsSample
Base	modules/recursive_partitioning/DT_proto.hpp	/^    typedef DynamicStruct<DecisionTree, Container> Base;$/;"	t	class:madlib::modules::recursive_partitioning::DecisionTree
Base	modules/recursive_partitioning/DT_proto.hpp	/^    typedef DynamicStruct<TreeAccumulator, Container> Base;$/;"	t	class:madlib::modules::recursive_partitioning::TreeAccumulator
Base	modules/regress/LinearRegression_proto.hpp	/^    typedef DynamicStruct<HeteroLinearRegressionAccumulator, Container> Base;$/;"	t	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
Base	modules/regress/LinearRegression_proto.hpp	/^    typedef DynamicStruct<LinearRegressionAccumulator, Container> Base;$/;"	t	class:madlib::modules::regress::LinearRegressionAccumulator
Base	modules/regress/LinearRegression_proto.hpp	/^    typedef DynamicStruct<RobustLinearRegressionAccumulator, Container> Base;$/;"	t	class:madlib::modules::regress::RobustLinearRegressionAccumulator
Base	modules/regress/clustered_errors_state.hpp	/^    typedef DynamicStruct<ClusteredState, Container> Base;$/;"	t	class:madlib::modules::regress::ClusteredState
Base	modules/sample/WeightedSample_proto.hpp	/^    typedef DynamicStruct<WeightedSampleAccumulator, Container> Base;$/;"	t	class:madlib::modules::sample::WeightedSampleAccumulator
Base	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^    typedef ArrayHandle<T> Base;$/;"	t	class:madlib::dbconnector::postgres::MutableArrayHandle
Base	ports/postgres/dbconnector/ByteString_proto.hpp	/^    typedef ByteString Base;$/;"	t	class:madlib::dbconnector::postgres::MutableByteString
Base	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^    typedef TransparentHandle<T, dbal::Immutable> Base;$/;"	t	class:madlib::dbconnector::postgres::TransparentHandle
Base	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^        TransparentHandle<double, IsMutable> > > Base;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
Base	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^        TransparentHandle<int, IsMutable> > > Base;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
Base	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^        TransparentHandle<std::complex<double>, IsMutable> > > Base;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
Base	utils/Reference.hpp	/^    typedef Reference<T, U> Base;$/;"	t	class:madlib::utils::MutableReference
BaseConstructor	madpack/yaml/constructor.py	/^class BaseConstructor(object):$/;"	c
BaseDumper	madpack/yaml/dumper.py	/^class BaseDumper(Emitter, Serializer, BaseRepresenter, BaseResolver):$/;"	c
BaseLoader	madpack/yaml/loader.py	/^class BaseLoader(Reader, Scanner, Parser, Composer, BaseConstructor, BaseResolver):$/;"	c
BaseRepresenter	madpack/yaml/representer.py	/^class BaseRepresenter(object):$/;"	c
BaseResolver	madpack/yaml/resolver.py	/^class BaseResolver(object):$/;"	c
Binomial	modules/glm/family.hpp	/^class Binomial {$/;"	c	namespace:madlib::modules::glm
BinomialFista	modules/elastic_net/elastic_net_binomial_fista.cpp	/^class BinomialFista$/;"	c	namespace:madlib::modules::elastic_net	file:
BinomialIgd	modules/elastic_net/elastic_net_binomial_igd.cpp	/^class BinomialIgd$/;"	c	namespace:madlib::modules::elastic_net	file:
BlockEndToken	madpack/yaml/tokens.py	/^class BlockEndToken(Token):$/;"	c
BlockEntryToken	madpack/yaml/tokens.py	/^class BlockEntryToken(Token):$/;"	c
BlockMappingStartToken	madpack/yaml/tokens.py	/^class BlockMappingStartToken(Token):$/;"	c
BlockSequenceStartToken	madpack/yaml/tokens.py	/^class BlockSequenceStartToken(Token):$/;"	c
ByteStream	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::ByteStream($/;"	f	class:madlib::dbal::ByteStream
ByteStream	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, Mutable>::ByteStream($/;"	f	class:madlib::dbal::ByteStream
ByteStream	dbal/ByteStream_proto.hpp	/^class ByteStream {$/;"	c	namespace:madlib::dbal
ByteStream	dbal/ByteStream_proto.hpp	/^class ByteStream<StreamBuf, TypeTraits, Mutable>$/;"	c	namespace:madlib::dbal
ByteStreamDefaultTypeTraits	dbal/ByteStream_proto.hpp	/^struct ByteStreamDefaultTypeTraits {$/;"	s	namespace:madlib::dbal
ByteStreamDefaultTypeTraits	dbal/ByteStream_proto.hpp	/^struct ByteStreamDefaultTypeTraits<ByteStreamMaximumAlignmentType> {$/;"	s	namespace:madlib::dbal
ByteStreamHandleBuf	dbal/ByteStreamHandleBuf_impl.hpp	/^ByteStreamHandleBuf<Storage, CharType, IsMutable>::ByteStreamHandleBuf($/;"	f	class:madlib::dbal::ByteStreamHandleBuf
ByteStreamHandleBuf	dbal/ByteStreamHandleBuf_impl.hpp	/^ByteStreamHandleBuf<Storage, CharType, Mutable>::ByteStreamHandleBuf($/;"	f	class:madlib::dbal::ByteStreamHandleBuf
ByteStreamHandleBuf	dbal/ByteStreamHandleBuf_proto.hpp	/^class ByteStreamHandleBuf {$/;"	c	namespace:madlib::dbal
ByteStreamHandleBuf	dbal/ByteStreamHandleBuf_proto.hpp	/^class ByteStreamHandleBuf<Storage, CharType, Mutable>$/;"	c	namespace:madlib::dbal
ByteStreamMaximumAlignmentType	dbal/ByteStream_proto.hpp	/^struct ByteStreamMaximumAlignmentType {$/;"	s	namespace:madlib::dbal
ByteStream_type	dbal/DynamicStruct_proto.hpp	/^    typedef ByteStream<StreamBuf_type, TypeTraits> ByteStream_type;$/;"	t	class:madlib::dbal::DynamicStructRootContainer
ByteStream_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename Base::ByteStream_type ByteStream_type;$/;"	t	class:madlib::dbal::DynamicStruct
ByteStream_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename Container_type::ByteStream_type ByteStream_type;$/;"	t	class:madlib::dbal::DynamicStructBase
ByteString	ports/postgres/dbconnector/ByteString_impl.hpp	/^ByteString::ByteString(const bytea* inByteString)$/;"	f	class:madlib::dbconnector::postgres::ByteString
ByteString	ports/postgres/dbconnector/ByteString_proto.hpp	/^class ByteString {$/;"	c	namespace:madlib::dbconnector::postgres
CAPACITY	libstemmer/runtime/header.h	13;"	d
CBaseDumper	madpack/yaml/cyaml.py	/^class CBaseDumper(CEmitter, BaseRepresenter, BaseResolver):$/;"	c
CBaseLoader	madpack/yaml/cyaml.py	/^class CBaseLoader(CParser, BaseConstructor, BaseResolver):$/;"	c
CDumper	madpack/yaml/cyaml.py	/^class CDumper(CEmitter, Serializer, Representer, Resolver):$/;"	c
CEmitter	madpack/yaml/cyaml.py	/^from _yaml import CParser, CEmitter$/;"	i
CLABTransitionState	modules/stats/clustered_variance_coxph.cpp	/^    CLABTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::CLABTransitionState
CLABTransitionState	modules/stats/clustered_variance_coxph.cpp	/^class CLABTransitionState {$/;"	c	namespace:madlib::modules::stats	file:
CLoader	madpack/yaml/cyaml.py	/^class CLoader(CParser, Constructor, Resolver):$/;"	c
COMPLETED	modules/regress/logistic.cpp	/^enum { IN_PROCESS, COMPLETED, TERMINATED, NULL_EMPTY };$/;"	e	enum:madlib::modules::regress::__anon16	file:
CParser	madpack/yaml/cyaml.py	/^from _yaml import CParser, CEmitter$/;"	i
CREATE_SIZE	libstemmer/runtime/utilities.c	10;"	d	file:
CSafeDumper	madpack/yaml/cyaml.py	/^class CSafeDumper(CEmitter, SafeRepresenter, Resolver):$/;"	c
CSafeLoader	madpack/yaml/cyaml.py	/^class CSafeLoader(CParser, SafeConstructor, Resolver):$/;"	c
CVector	modules/elastic_net/share/shared_utils.hpp	/^typedef HandleTraits<MutableArrayHandle<double> >::ColumnVectorTransparentHandleMap CVector;$/;"	t	namespace:madlib::modules::elastic_net
ChangeHandler	madpack/upgrade_util.py	/^class ChangeHandler(UpgradeBase):$/;"	c
Chi2TestTransitionState	modules/stats/chi_squared_test.cpp	/^    Chi2TestTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::Chi2TestTransitionState
Chi2TestTransitionState	modules/stats/chi_squared_test.cpp	/^class Chi2TestTransitionState {$/;"	c	namespace:madlib::modules::stats	file:
ClusteredState	modules/regress/clustered_errors_state.hpp	/^class ClusteredState: public DynamicStruct<ClusteredState<Container>, Container>$/;"	c	namespace:madlib::modules::regress
ClusteredState	modules/regress/clustered_errors_state.hpp	/^inline ClusteredState<Container>::ClusteredState (Init_type& inInitialization) :$/;"	f	class:madlib::modules::regress::ClusteredState
CollectionEndEvent	madpack/yaml/events.py	/^class CollectionEndEvent(Event):$/;"	c
CollectionNode	madpack/yaml/nodes.py	/^class CollectionNode(Node):$/;"	c
CollectionStartEvent	madpack/yaml/events.py	/^class CollectionStartEvent(NodeEvent):$/;"	c
ColumnVector	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::VectorXd ColumnVector;$/;"	t	namespace:madlib::dbal::eigen_integration
ColumnVector	modules/shared/HandleTraits.hpp	/^    typedef dbal::eigen_integration::ColumnVector ColumnVector;$/;"	t	struct:madlib::modules::HandleTraits
ColumnVectorTransparentHandleMap	modules/shared/HandleTraits.hpp	/^            ColumnVectorTransparentHandleMap;$/;"	t	struct:madlib::modules::HandleTraits
ColumnVectorTransparentHandleMap	modules/shared/HandleTraits.hpp	/^        ColumnVectorTransparentHandleMap;$/;"	t	struct:madlib::modules::HandleTraits
ComplexMatrix	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::MatrixXcd ComplexMatrix;$/;"	t	namespace:madlib::dbal::eigen_integration
Composer	madpack/yaml/composer.py	/^class Composer(object):$/;"	c
ComposerError	madpack/yaml/composer.py	/^class ComposerError(MarkedYAMLError):$/;"	c
CompositeType	dbal/dbal_proto.hpp	/^    CompositeType$/;"	e	enum:madlib::dbal::TypeClass
ComputeEigenvectors	dbal/EigenIntegration/EigenIntegration.hpp	/^    ComputeEigenvectors = Eigen::ComputeEigenvectors,$/;"	e	enum:madlib::dbal::eigen_integration::DecompositionOptions
ComputeFullU	dbal/EigenIntegration/EigenIntegration.hpp	/^    ComputeFullU = Eigen::ComputeFullU,$/;"	e	enum:madlib::dbal::eigen_integration::DecompositionOptions
ComputeFullV	dbal/EigenIntegration/EigenIntegration.hpp	/^    ComputeFullV = Eigen::ComputeFullV$/;"	e	enum:madlib::dbal::eigen_integration::DecompositionOptions
ComputePseudoInverse	dbal/EigenIntegration/EigenIntegration.hpp	/^    ComputePseudoInverse = 0x01$/;"	e	enum:madlib::dbal::eigen_integration::SPDDecompositionExtras
ConSplitsResult	modules/recursive_partitioning/ConSplits.hpp	/^    ConSplitsResult(Init_type& inInitialization): Base(inInitialization) {$/;"	f	class:madlib::modules::recursive_partitioning::ConSplitsResult
ConSplitsResult	modules/recursive_partitioning/ConSplits.hpp	/^class ConSplitsResult$/;"	c	namespace:madlib::modules::recursive_partitioning
ConSplitsSample	modules/recursive_partitioning/ConSplits.hpp	/^    ConSplitsSample(Init_type& inInitialization): Base(inInitialization) {$/;"	f	class:madlib::modules::recursive_partitioning::ConSplitsSample
ConSplitsSample	modules/recursive_partitioning/ConSplits.hpp	/^class ConSplitsSample$/;"	c	namespace:madlib::modules::recursive_partitioning
Constructor	madpack/yaml/constructor.py	/^class Constructor(SafeConstructor):$/;"	c
ConstructorError	madpack/yaml/constructor.py	/^class ConstructorError(MarkedYAMLError):$/;"	c
Container_type	dbal/DynamicStruct_proto.hpp	/^    typedef Container Container_type;$/;"	t	class:madlib::dbal::DynamicStructBase
Container_type	dbal/DynamicStruct_proto.hpp	/^    typedef DynamicStructRootContainer<Storage, TypeTraits> Container_type;$/;"	t	class:madlib::dbal::DynamicStructBase
Container_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename Base::Container_type Container_type;$/;"	t	class:madlib::dbal::DynamicStruct
Container_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename Base::Container_type Container_type;$/;"	t	class:madlib::dbal::DynamicStructBase
ContentType	ports/postgres/dbconnector/AnyType_proto.hpp	/^    enum ContentType {$/;"	g	class:madlib::dbconnector::postgres::AnyType
CoxPHState	modules/stats/CoxPHState.hpp	/^    CoxPHState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::CoxPHState
CoxPHState	modules/stats/CoxPHState.hpp	/^class CoxPHState {$/;"	c	namespace:madlib::modules::stats
DB_CREATE_OBJECTS	madpack/madpack.py	/^DB_CREATE_OBJECTS = "db_create_objects"$/;"	v
DECLARE_SR_UDF	ports/postgres/dbconnector/dbconnector.hpp	310;"	d
DECLARE_SR_UDF	ports/postgres/dbconnector/main.cpp	58;"	d	file:
DECLARE_SR_UDF	ports/postgres/dbconnector/main.cpp	60;"	d	file:
DECLARE_UDF	ports/postgres/dbconnector/dbconnector.hpp	296;"	d
DECLARE_UDF	ports/postgres/dbconnector/main.cpp	57;"	d	file:
DECLARE_UDF	ports/postgres/dbconnector/main.cpp	59;"	d	file:
DECLARE_UDF_EXTERNAL	ports/postgres/dbconnector/dbconnector.hpp	324;"	d
DEFAULT_MAPPING_TAG	madpack/yaml/resolver.py	/^    DEFAULT_MAPPING_TAG = u'tag:yaml.org,2002:map'$/;"	v	class:BaseResolver
DEFAULT_SCALAR_TAG	madpack/yaml/resolver.py	/^    DEFAULT_SCALAR_TAG = u'tag:yaml.org,2002:str'$/;"	v	class:BaseResolver
DEFAULT_SEQUENCE_TAG	madpack/yaml/resolver.py	/^    DEFAULT_SEQUENCE_TAG = u'tag:yaml.org,2002:seq'$/;"	v	class:BaseResolver
DEFAULT_TAGS	madpack/yaml/parser.py	/^    DEFAULT_TAGS = {$/;"	v	class:Parser
DEFAULT_TAG_PREFIXES	madpack/yaml/emitter.py	/^    DEFAULT_TAG_PREFIXES = {$/;"	v	class:Emitter
DEFINE_BOOST_COMPLEMENT_WRAPPER	modules/prob/boost.hpp	1339;"	d
DEFINE_BOOST_PROBABILITY_DISTR	modules/prob/boost.hpp	1360;"	d
DEFINE_BOOST_WRAPPER	modules/prob/boost.hpp	1320;"	d
DEFINE_BOOST_WRAPPER	modules/prob/boost.hpp	1381;"	d
DEFINE_CONTINUOUS_PROB_DISTR_1	modules/prob/boost.cpp	80;"	d	file:
DEFINE_CONTINUOUS_PROB_DISTR_2	modules/prob/boost.cpp	83;"	d	file:
DEFINE_CONTINUOUS_PROB_DISTR_3	modules/prob/boost.cpp	86;"	d	file:
DEFINE_DISCRETE_PROB_DISTR_1	modules/prob/boost.cpp	89;"	d	file:
DEFINE_DISCRETE_PROB_DISTR_2	modules/prob/boost.cpp	92;"	d	file:
DEFINE_DISCRETE_PROB_DISTR_3	modules/prob/boost.cpp	95;"	d	file:
DEFINE_GLM_TRANSITION	modules/glm/glm.cpp	27;"	d	file:
DEFINE_PROBABILITY_DISTR	modules/prob/boost.hpp	1380;"	d
DEFINE_PROBABILITY_DISTR_1	modules/prob/boost.cpp	57;"	d	file:
DEFINE_PROBABILITY_DISTR_2	modules/prob/boost.cpp	62;"	d	file:
DEFINE_PROBABILITY_DISTR_3	modules/prob/boost.cpp	71;"	d	file:
DEFINE_PROBABILITY_FUNCTION_1	modules/prob/boost.cpp	19;"	d	file:
DEFINE_PROBABILITY_FUNCTION_2	modules/prob/boost.cpp	30;"	d	file:
DEFINE_PROBABILITY_FUNCTION_3	modules/prob/boost.cpp	43;"	d	file:
DOMAIN_CHECK_OVERRIDE	modules/prob/boost.hpp	1286;"	d
DOMAIN_CHECK_OVERRIDE	modules/prob/boost.hpp	1316;"	d
DecisionTree	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::DecisionTree($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
DecisionTree	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::DecisionTree():$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
DecisionTree	modules/recursive_partitioning/DT_proto.hpp	/^class DecisionTree: public DynamicStruct<DecisionTree<Container>, Container> {$/;"	c	namespace:madlib::modules::recursive_partitioning
DecompositionOptions	dbal/EigenIntegration/EigenIntegration.hpp	/^enum DecompositionOptions {$/;"	g	namespace:madlib::dbal::eigen_integration
Deconstruct2DArrayContext	modules/linalg/dim_conversion.cpp	/^struct Deconstruct2DArrayContext {$/;"	s	namespace:madlib::modules::linalg::__anon14	file:
DenseDirectLinearSystemTransitionState	modules/linear_systems/dense_linear_systems.cpp	/^    DenseDirectLinearSystemTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState
DenseDirectLinearSystemTransitionState	modules/linear_systems/dense_linear_systems.cpp	/^class DenseDirectLinearSystemTransitionState {$/;"	c	namespace:madlib::modules::linear_systems	file:
DirectiveToken	madpack/yaml/tokens.py	/^class DirectiveToken(Token):$/;"	c
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::bernoulli_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::binomial_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::exponential_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::extreme_value_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::fisher_f_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::gamma_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::geometric_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::hypergeometric_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::inverse_gamma_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::lognormal_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::negative_binomial_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::non_central_beta_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::non_central_chi_squared_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::non_central_f_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::pareto_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::poisson_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::rayleigh_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
Distribution	modules/prob/boost.hpp	/^    typedef boost::math::weibull_distribution<RealType, Policy> Distribution;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
DoNotZero	dbal/dbal_proto.hpp	/^    DoNotZero$/;"	e	enum:madlib::dbal::ZeroMemory
DoZero	dbal/dbal_proto.hpp	/^    DoZero,$/;"	e	enum:madlib::dbal::ZeroMemory
DocumentEndEvent	madpack/yaml/events.py	/^class DocumentEndEvent(Event):$/;"	c
DocumentEndToken	madpack/yaml/tokens.py	/^class DocumentEndToken(Token):$/;"	c
DocumentStartEvent	madpack/yaml/events.py	/^class DocumentStartEvent(Event):$/;"	c
DocumentStartToken	madpack/yaml/tokens.py	/^class DocumentStartToken(Token):$/;"	c
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck {$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::bernoulli_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::binomial_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::exponential_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::extreme_value_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::fisher_f_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::gamma_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::geometric_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::hypergeometric_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::inverse_gamma_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::lognormal_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::negative_binomial_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::non_central_beta_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::non_central_chi_squared_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::non_central_f_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::pareto_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::poisson_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::rayleigh_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DomainCheck	modules/prob/boost.hpp	/^struct DomainCheck<boost::math::weibull_distribution<RealType, Policy> >$/;"	s	namespace:madlib::modules::prob::__anon12
DoublePtr	modules/shared/HandleTraits.hpp	/^    typedef const double* DoublePtr;$/;"	t	struct:madlib::modules::HandleTraits
DoublePtr	modules/shared/HandleTraits.hpp	/^    typedef double* DoublePtr;$/;"	t	struct:madlib::modules::HandleTraits
DryRun	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::DryRun::DryRun($/;"	f	class:madlib::dbal::ByteStream::DryRun
DryRun	dbal/ByteStream_proto.hpp	/^    class DryRun {$/;"	c	class:madlib::dbal::ByteStream
Dumper	madpack/yaml/dumper.py	/^class Dumper(Emitter, Serializer, Representer, Resolver):$/;"	c
DynamicStruct	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, IsMutable>::DynamicStruct(Init_type& inInitialization)$/;"	f	class:madlib::dbal::DynamicStruct
DynamicStruct	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, Mutable>::DynamicStruct($/;"	f	class:madlib::dbal::DynamicStruct
DynamicStruct	dbal/DynamicStruct_proto.hpp	/^class DynamicStruct$/;"	c	namespace:madlib::dbal
DynamicStruct	dbal/DynamicStruct_proto.hpp	/^class DynamicStruct<Derived, Container, Mutable>$/;"	c	namespace:madlib::dbal
DynamicStructBase	dbal/DynamicStruct_impl.hpp	/^    ::DynamicStructBase(Init_type& inStorage)$/;"	f	class:madlib::dbal::DynamicStructBase
DynamicStructBase	dbal/DynamicStruct_impl.hpp	/^DynamicStructBase<Derived, Container, IsMutable>::DynamicStructBase($/;"	f	class:madlib::dbal::DynamicStructBase
DynamicStructBase	dbal/DynamicStruct_proto.hpp	/^    DynamicStructBase(Init_type& inStorage) : Base(inStorage) { }$/;"	f	class:madlib::dbal::DynamicStructBase
DynamicStructBase	dbal/DynamicStruct_proto.hpp	/^class DynamicStructBase {$/;"	c	namespace:madlib::dbal
DynamicStructBase	dbal/DynamicStruct_proto.hpp	/^class DynamicStructBase<Derived, Container, Mutable>$/;"	c	namespace:madlib::dbal
DynamicStructBase	dbal/DynamicStruct_proto.hpp	/^class DynamicStructBase<Derived,$/;"	c	namespace:madlib::dbal
DynamicStructRootContainer	dbal/DynamicStruct_impl.hpp	/^DynamicStructRootContainer<Storage, TypeTraits>::DynamicStructRootContainer($/;"	f	class:madlib::dbal::DynamicStructRootContainer
DynamicStructRootContainer	dbal/DynamicStruct_proto.hpp	/^class DynamicStructRootContainer {$/;"	c	namespace:madlib::dbal
DynamicStructType	dbal/DynamicStruct_impl.hpp	/^struct DynamicStructType {$/;"	s	namespace:madlib::dbal
DynamicStructType	dbal/DynamicStruct_impl.hpp	/^struct DynamicStructType<eigen_integration::ColumnVector, IsMutable> {$/;"	s	namespace:madlib::dbal
DynamicStructType	dbal/DynamicStruct_impl.hpp	/^struct DynamicStructType<eigen_integration::IntegerVector, IsMutable> {$/;"	s	namespace:madlib::dbal
DynamicStructType	dbal/DynamicStruct_impl.hpp	/^struct DynamicStructType<eigen_integration::Matrix, IsMutable> {$/;"	s	namespace:madlib::dbal
DynamicStructType	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^struct DynamicStructType<eigen_integration::MappedColumnVector, IsMutable> {$/;"	s	namespace:madlib::dbal
EIGEN_DISABLE_UNALIGNED_ARRAY_ASSERT	ports/greenplum/dbconnector/dbconnector.hpp	49;"	d
EIGEN_DONT_VECTORIZE	ports/greenplum/dbconnector/dbconnector.hpp	48;"	d
EIGEN_MATRIXBASE_PLUGIN	dbal/EigenIntegration/EigenIntegration.hpp	11;"	d
EIGEN_YES_I_KNOW_SPARSE_MODULE_IS_NOT_STABLE_YET	dbal/EigenIntegration/EigenIntegration.hpp	14;"	d
ELASTIC_NET_SHARED_UTILS_	modules/elastic_net/share/shared_utils.hpp	9;"	d
ENC_ISO_8859_1	libstemmer/libstemmer/modules.h	/^  ENC_ISO_8859_1,$/;"	e	enum:__anon11
ENC_ISO_8859_2	libstemmer/libstemmer/modules.h	/^  ENC_ISO_8859_2,$/;"	e	enum:__anon11
ENC_KOI8_R	libstemmer/libstemmer/modules.h	/^  ENC_KOI8_R,$/;"	e	enum:__anon11
ENC_UNKNOWN	libstemmer/libstemmer/modules.h	/^  ENC_UNKNOWN=0,$/;"	e	enum:__anon11
ENC_UTF_8	libstemmer/libstemmer/modules.h	/^  ENC_UTF_8$/;"	e	enum:__anon11
ENTROPY	modules/recursive_partitioning/DT_proto.hpp	/^    enum { MSE, MISCLASS, ENTROPY, GINI };$/;"	e	enum:madlib::modules::recursive_partitioning::DecisionTree::__anon23
ESCAPE_CODES	madpack/yaml/scanner.py	/^    ESCAPE_CODES = {$/;"	v	class:Scanner
ESCAPE_REPLACEMENTS	madpack/yaml/emitter.py	/^    ESCAPE_REPLACEMENTS = {$/;"	v	class:Emitter
ESCAPE_REPLACEMENTS	madpack/yaml/scanner.py	/^    ESCAPE_REPLACEMENTS = {$/;"	v	class:Scanner
EigenvaluesOnly	dbal/EigenIntegration/EigenIntegration.hpp	/^    EigenvaluesOnly = Eigen::EigenvaluesOnly,$/;"	e	enum:madlib::dbal::eigen_integration::DecompositionOptions
Emitter	madpack/yaml/emitter.py	/^class Emitter(object):$/;"	c
EmitterError	madpack/yaml/emitter.py	/^class EmitterError(YAMLError):$/;"	c
Event	madpack/yaml/events.py	/^class Event(object):$/;"	c
ExampleTuple	modules/convex/type/tuple.hpp	/^    ExampleTuple() { id = 0; weight = 1;}$/;"	f	struct:madlib::modules::convex::ExampleTuple
ExampleTuple	modules/convex/type/tuple.hpp	/^    ExampleTuple(const ExampleTuple &rhs) {$/;"	f	struct:madlib::modules::convex::ExampleTuple
ExampleTuple	modules/convex/type/tuple.hpp	/^struct ExampleTuple {$/;"	s	namespace:madlib::modules::convex
FINISHED	modules/recursive_partitioning/decision_tree.cpp	/^enum { NOT_FINISHED=0, FINISHED, TERMINATED };$/;"	e	enum:madlib::modules::recursive_partitioning::__anon21	file:
FINISHED_LEAF	modules/recursive_partitioning/DT_proto.hpp	/^    enum { IN_PROCESS_LEAF=-1, FINISHED_LEAF=-2, NODE_NON_EXISTING=-3 };$/;"	e	enum:madlib::modules::recursive_partitioning::DecisionTree::__anon24
FLOAT8ARRAYOID	ports/postgres/dbconnector/Compatibility.hpp	30;"	d
FileType	madpack/argparse.py	/^class FileType(object):$/;"	c
Fista	modules/elastic_net/elastic_net_optimizer_fista.hpp	/^class Fista$/;"	c	namespace:madlib::modules::elastic_net
FistaState	modules/elastic_net/state/fista.hpp	/^    FistaState (const AnyType& inArray):$/;"	f	class:madlib::modules::elastic_net::FistaState
FistaState	modules/elastic_net/state/fista.hpp	/^class FistaState$/;"	c	namespace:madlib::modules::elastic_net
FlowEntryToken	madpack/yaml/tokens.py	/^class FlowEntryToken(Token):$/;"	c
FlowMappingEndToken	madpack/yaml/tokens.py	/^class FlowMappingEndToken(Token):$/;"	c
FlowMappingStartToken	madpack/yaml/tokens.py	/^class FlowMappingStartToken(Token):$/;"	c
FlowSequenceEndToken	madpack/yaml/tokens.py	/^class FlowSequenceEndToken(Token):$/;"	c
FlowSequenceStartToken	madpack/yaml/tokens.py	/^class FlowSequenceStartToken(Token):$/;"	c
FullPivLU	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::FullPivLU<Eigen::MatrixXd> FullPivLU;$/;"	t	namespace:madlib::dbal::eigen_integration
FunctionCallOption	ports/postgres/dbconnector/FunctionHandle_proto.hpp	/^    enum FunctionCallOption {$/;"	g	class:madlib::dbconnector::postgres::FunctionHandle
FunctionComposite	ports/postgres/dbconnector/AnyType_proto.hpp	/^        FunctionComposite,$/;"	e	enum:madlib::dbconnector::postgres::AnyType::ContentType
FunctionContext	dbal/dbal_proto.hpp	/^    FunctionContext,$/;"	e	enum:madlib::dbal::MemoryContext
FunctionHandle	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::FunctionHandle(SystemInformation* inSysInfo, Oid inFuncID)$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle
FunctionHandle	ports/postgres/dbconnector/FunctionHandle_proto.hpp	/^class FunctionHandle {$/;"	c	namespace:madlib::dbconnector::postgres
FunctionInformation	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^struct FunctionInformation {$/;"	s	namespace:madlib::dbconnector::postgres
GCC_VERSION	utils/libstdcxx-compatibility.cpp	38;"	d	file:
GINI	modules/recursive_partitioning/DT_proto.hpp	/^    enum { MSE, MISCLASS, ENTROPY, GINI };$/;"	e	enum:madlib::modules::recursive_partitioning::DecisionTree::__anon23
GLMAccumulator	modules/glm/GLM_impl.hpp	/^GLMAccumulator<Container,Family,Link>::GLMAccumulator($/;"	f	class:madlib::modules::glm::GLMAccumulator
GLMAccumulator	modules/glm/GLM_proto.hpp	/^class GLMAccumulator$/;"	c	namespace:madlib::modules::glm
GLMCGState	modules/convex/type/state.hpp	/^    GLMCGState(const AnyType &inArray) : mStorage(inArray.getAs<Handle>()) {$/;"	f	class:madlib::modules::convex::GLMCGState
GLMCGState	modules/convex/type/state.hpp	/^class GLMCGState {$/;"	c	namespace:madlib::modules::convex
GLMHessian	modules/convex/type/hessian.hpp	/^    GLMHessian;$/;"	t	namespace:madlib::modules::convex
GLMIGDState	modules/convex/type/state.hpp	/^    GLMIGDState(const AnyType &inArray) : mStorage(inArray.getAs<Handle>()) {$/;"	f	class:madlib::modules::convex::GLMIGDState
GLMIGDState	modules/convex/type/state.hpp	/^class GLMIGDState {$/;"	c	namespace:madlib::modules::convex
GLMModel	modules/convex/type/model.hpp	/^    GLMModel;$/;"	t	namespace:madlib::modules::convex
GLMNewtonState	modules/convex/type/state.hpp	/^    GLMNewtonState(const AnyType &inArray) : mStorage(inArray.getAs<Handle>()) {$/;"	f	class:madlib::modules::convex::GLMNewtonState
GLMNewtonState	modules/convex/type/state.hpp	/^class GLMNewtonState {$/;"	c	namespace:madlib::modules::convex
GLMResult	modules/glm/GLM_impl.hpp	/^GLMResult::GLMResult(const GLMAccumulator<Container>& state) {$/;"	f	class:madlib::modules::glm::GLMResult
GLMResult	modules/glm/GLM_proto.hpp	/^class GLMResult {$/;"	c	namespace:madlib::modules::glm
GLMState	modules/glm/glm.cpp	/^typedef GLMAccumulator<RootContainer> GLMState;$/;"	t	namespace:madlib::modules::glm	file:
GLMTuple	modules/convex/type/tuple.hpp	/^typedef ExampleTuple<MappedColumnVector, double> GLMTuple;$/;"	t	namespace:madlib::modules::convex
Gamma	modules/glm/family.hpp	/^class Gamma {$/;"	c	namespace:madlib::modules::glm
GarbageCollectionAfterCall	ports/postgres/dbconnector/FunctionHandle_proto.hpp	/^        GarbageCollectionAfterCall = 0x01$/;"	e	enum:madlib::dbconnector::postgres::FunctionHandle::FunctionCallOption
Gaussian	modules/glm/family.hpp	/^class Gaussian {$/;"	c	namespace:madlib::modules::glm
GaussianFista	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^class GaussianFista$/;"	c	namespace:madlib::modules::elastic_net	file:
GaussianIgd	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^class GaussianIgd$/;"	c	namespace:madlib::modules::elastic_net	file:
GleasonsNormalApproxForStudentsT	modules/prob/student.hpp	/^GleasonsNormalApproxForStudentsT(const RealType& t, const RealType& nu) {$/;"	f	namespace:madlib::modules::prob::__anon13
Gradient	modules/convex/algo/gradient.hpp	/^class Gradient {$/;"	c	namespace:madlib::modules::convex
Gradient	modules/convex/algo/gradient_norm.hpp	/^class Gradient {$/;"	c	namespace:madlib::modules::convex
H	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap H;$/;"	m	class:madlib::modules::stats::CoxPHState
H	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap H;$/;"	m	class:madlib::modules::stats::RBHSTransitionState	file:
HEAD	libstemmer/runtime/header.h	9;"	d
HandleMap	dbal/EigenIntegration/HandleMap_proto.hpp	/^    HandleMap(const Eigen::MapBase<Derived>& inMappedData,$/;"	f	class:madlib::dbal::eigen_integration::HandleMap
HandleMap	dbal/EigenIntegration/HandleMap_proto.hpp	/^    HandleMap(const Handle &inHandle, Index inNumElem)$/;"	f	class:madlib::dbal::eigen_integration::HandleMap
HandleMap	dbal/EigenIntegration/HandleMap_proto.hpp	/^    HandleMap(const Handle &inHandle, Index inNumRows, Index inNumCols)$/;"	f	class:madlib::dbal::eigen_integration::HandleMap
HandleMap	dbal/EigenIntegration/HandleMap_proto.hpp	/^    inline HandleMap()$/;"	f	class:madlib::dbal::eigen_integration::HandleMap
HandleMap	dbal/EigenIntegration/HandleMap_proto.hpp	/^    inline HandleMap(const Handle &inHandle)$/;"	f	class:madlib::dbal::eigen_integration::HandleMap
HandleMap	dbal/EigenIntegration/HandleMap_proto.hpp	/^class HandleMap : public Eigen::Map<EigenType, MapOptions> {$/;"	c	namespace:madlib::dbal::eigen_integration
HandleMap	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<ColumnVector, MutableArrayHandle<double> >::HandleMap($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
HandleMap	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<IntegerVector, MutableArrayHandle<int> >::HandleMap($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
HandleMap	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<Matrix, MutableArrayHandle<double> >::HandleMap($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
HandleMap	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<const ColumnVector, ArrayHandle<double> >::HandleMap($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
HandleMap	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<const IntegerVector, ArrayHandle<int> >::HandleMap($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
HandleMap	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<const Matrix, ArrayHandle<double> >::HandleMap($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
HandleTraits	modules/shared/HandleTraits.hpp	/^struct HandleTraits<ArrayHandle<double> > {$/;"	s	namespace:madlib::modules
HandleTraits	modules/shared/HandleTraits.hpp	/^struct HandleTraits<MutableArrayHandle<double> > {$/;"	s	namespace:madlib::modules
HelpFormatter	madpack/argparse.py	/^class HelpFormatter(object):$/;"	c
HeteroLinRegrState	modules/regress/linear.cpp	/^typedef HeteroLinearRegressionAccumulator<RootContainer> HeteroLinRegrState;$/;"	t	namespace:madlib::modules::regress	file:
HeteroLinearRegression	modules/regress/LinearRegression_impl.hpp	/^HeteroLinearRegression::HeteroLinearRegression($/;"	f	class:madlib::modules::regress::HeteroLinearRegression
HeteroLinearRegression	modules/regress/LinearRegression_proto.hpp	/^class HeteroLinearRegression$/;"	c	namespace:madlib::modules::regress
HeteroLinearRegressionAccumulator	modules/regress/LinearRegression_impl.hpp	/^HeteroLinearRegressionAccumulator<Container>::HeteroLinearRegressionAccumulator($/;"	f	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
HeteroLinearRegressionAccumulator	modules/regress/LinearRegression_proto.hpp	/^class HeteroLinearRegressionAccumulator$/;"	c	namespace:madlib::modules::regress
HouseholderQR	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::HouseholderQR<Eigen::MatrixXd> HouseholderQR;$/;"	t	namespace:madlib::dbal::eigen_integration
I	libstemmer/runtime/api.h	/^    int * I;$/;"	m	struct:SN_env
IClusteredState	modules/regress/clustered_errors.cpp	/^typedef ClusteredState<RootContainer> IClusteredState;$/;"	t	namespace:madlib::modules::regress	file:
IGD	modules/convex/algo/igd.hpp	/^class IGD {$/;"	c	namespace:madlib::modules::convex
INSTALL_DEV_CHECK	madpack/madpack.py	/^INSTALL_DEV_CHECK = "install_dev_check"$/;"	v
INT8ARRAYOID	ports/postgres/dbconnector/Compatibility.hpp	34;"	d
IN_PROCESS	modules/regress/logistic.cpp	/^enum { IN_PROCESS, COMPLETED, TERMINATED, NULL_EMPTY };$/;"	e	enum:madlib::modules::regress::__anon16	file:
IN_PROCESS_LEAF	modules/recursive_partitioning/DT_proto.hpp	/^    enum { IN_PROCESS_LEAF=-1, FINISHED_LEAF=-2, NODE_NON_EXISTING=-3 };$/;"	e	enum:madlib::modules::recursive_partitioning::DecisionTree::__anon24
IResidualState	modules/linear_systems/dense_linear_systems.cpp	/^typedef ResidualState<RootContainer> IResidualState;$/;"	t	namespace:madlib::modules::linear_systems	file:
Identity	modules/glm/link.hpp	/^class Identity {$/;"	c	namespace:madlib::modules::glm
Igd	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^class Igd$/;"	c	namespace:madlib::modules::elastic_net
IgdState	modules/elastic_net/state/igd.hpp	/^    IgdState (const AnyType& inArray):$/;"	f	class:madlib::modules::elastic_net::IgdState
IgdState	modules/elastic_net/state/igd.hpp	/^class IgdState$/;"	c	namespace:madlib::modules::elastic_net
Immutable	dbal/dbal_proto.hpp	/^    Immutable = 0,$/;"	e	enum:madlib::dbal::Mutability
Index	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef EIGEN_DEFAULT_DENSE_INDEX_TYPE Index;$/;"	t	namespace:madlib::dbal::eigen_integration
Index	dbal/EigenIntegration/HandleMap_proto.hpp	/^    typedef typename Base::Index Index;$/;"	t	class:madlib::dbal::eigen_integration::HandleMap
Init_type	dbal/DynamicStruct_proto.hpp	/^    typedef Container_type Init_type;$/;"	t	class:madlib::dbal::DynamicStructBase
Init_type	dbal/DynamicStruct_proto.hpp	/^    typedef const Storage_type Init_type;$/;"	t	class:madlib::dbal::DynamicStructBase
Init_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename Base::Init_type Init_type;$/;"	t	class:madlib::dbal::DynamicStruct
Init_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename Base::Init_type Init_type;$/;"	t	class:madlib::dbal::DynamicStructBase
IntegerDomainCheck	modules/prob/boost.hpp	/^struct IntegerDomainCheck : public RealDomainCheck<Distribution> {$/;"	s	namespace:madlib::modules::prob::__anon12
IntegerVector	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::VectorXi IntegerVector;$/;"	t	namespace:madlib::dbal::eigen_integration
Inverse	modules/glm/link.hpp	/^class Inverse {$/;"	c	namespace:madlib::modules::glm
InverseGaussian	modules/glm/family.hpp	/^class InverseGaussian {$/;"	c	namespace:madlib::modules::glm
Iterable	madpack/upgrade_util.py	/^from collections import defaultdict, Iterable$/;"	i
JacobiSVD	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::JacobiSVD<Eigen::MatrixXd> JacobiSVD;$/;"	t	namespace:madlib::dbal::eigen_integration
KSTestTransitionState	modules/stats/kolmogorov_smirnov_test.cpp	/^    KSTestTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::KSTestTransitionState
KSTestTransitionState	modules/stats/kolmogorov_smirnov_test.cpp	/^class KSTestTransitionState {$/;"	c	namespace:madlib::modules::stats	file:
KeyToken	madpack/yaml/tokens.py	/^class KeyToken(Token):$/;"	c
KolmogorovProb	modules/prob/kolmogorov.cpp	/^double KolmogorovProb(double x) {$/;"	f	namespace:madlib::modules::prob
L1	modules/convex/task/l1.hpp	/^class L1 {$/;"	c	namespace:madlib::modules::convex
L2	modules/convex/task/l2.hpp	/^class L2 {$/;"	c	namespace:madlib::modules::convex
LBFGS	modules/crf/linear_crf.cpp	/^LBFGS::LBFGS(LinCrfLBFGSTransitionState<MutableArrayHandle<double> >& state) {$/;"	f	class:madlib::modules::crf::LBFGS
LBFGS	modules/crf/linear_crf.cpp	/^class LBFGS {$/;"	c	namespace:madlib::modules::crf	file:
LIST_CONTINUOUS_PROB_DISTR	modules/prob/boost.hpp	1382;"	d
LIST_CONTINUOUS_PROB_DISTR	modules/prob/boost.hpp	7;"	d
LIST_DISCRETE_PROB_DISTR	modules/prob/boost.hpp	36;"	d
LMF	modules/convex/task/lmf.hpp	/^class LMF {$/;"	c	namespace:madlib::modules::convex
LMFIGDAlgorithm	modules/convex/lmf_igd.cpp	/^        LMF<LMFModel<MutableArrayHandle<double> >, LMFTuple > > LMFIGDAlgorithm;$/;"	t	namespace:madlib::modules::convex	file:
LMFIGDState	modules/convex/type/state.hpp	/^    LMFIGDState(const AnyType &inArray) : mStorage(inArray.getAs<Handle>()) {$/;"	f	class:madlib::modules::convex::LMFIGDState
LMFIGDState	modules/convex/type/state.hpp	/^class LMFIGDState {$/;"	c	namespace:madlib::modules::convex
LMFLossAlgorithm	modules/convex/lmf_igd.cpp	/^        LMF<LMFModel<MutableArrayHandle<double> >, LMFTuple > > LMFLossAlgorithm;$/;"	t	namespace:madlib::modules::convex	file:
LMFModel	modules/convex/type/model.hpp	/^struct LMFModel {$/;"	s	namespace:madlib::modules::convex
LMFTuple	modules/convex/type/tuple.hpp	/^typedef ExampleTuple<MatrixIndex, double> LMFTuple;$/;"	t	namespace:madlib::modules::convex
LazyConversionToDatumOverride	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::LazyConversionToDatumOverride::LazyConversionToDatumOverride($/;"	f	class:madlib::dbconnector::postgres::AnyType::LazyConversionToDatumOverride
LazyConversionToDatumOverride	ports/postgres/dbconnector/AnyType_proto.hpp	/^    class LazyConversionToDatumOverride {$/;"	c	class:madlib::dbconnector::postgres::AnyType
LegacySparseVectorToSparseColumnVector	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^LegacySparseVectorToSparseColumnVector(SvecType* inVec) {$/;"	f	namespace:madlib::dbconnector::postgres
LevelState	modules/recursive_partitioning/decision_tree.cpp	/^typedef TreeAccumulator<RootContainer, Tree> LevelState;$/;"	t	namespace:madlib::modules::recursive_partitioning	file:
LinCrfLBFGSTransitionState	modules/crf/linear_crf.cpp	/^    LinCrfLBFGSTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::crf::LinCrfLBFGSTransitionState
LinCrfLBFGSTransitionState	modules/crf/linear_crf.cpp	/^class LinCrfLBFGSTransitionState {$/;"	c	namespace:madlib::modules::crf	file:
LinRegrState	modules/regress/linear.cpp	/^typedef LinearRegressionAccumulator<RootContainer> LinRegrState;$/;"	t	namespace:madlib::modules::regress	file:
LinearRegression	modules/regress/LinearRegression_impl.hpp	/^LinearRegression::LinearRegression($/;"	f	class:madlib::modules::regress::LinearRegression
LinearRegression	modules/regress/LinearRegression_proto.hpp	/^class LinearRegression {$/;"	c	namespace:madlib::modules::regress
LinearRegressionAccumulator	modules/regress/LinearRegression_impl.hpp	/^LinearRegressionAccumulator<Container>::LinearRegressionAccumulator($/;"	f	class:madlib::modules::regress::LinearRegressionAccumulator
LinearRegressionAccumulator	modules/regress/LinearRegression_proto.hpp	/^class LinearRegressionAccumulator$/;"	c	namespace:madlib::modules::regress
LinearSVM	modules/convex/task/linear_svm.hpp	/^class LinearSVM {$/;"	c	namespace:madlib::modules::convex
LinearSVMGradientAlgorithm	modules/convex/linear_svm_igd.cpp	/^        LinearSVM<GLMModel, GLMTuple > > LinearSVMGradientAlgorithm;$/;"	t	namespace:madlib::modules::convex	file:
LinearSVMIGDAlgorithm	modules/convex/linear_svm_igd.cpp	/^        LinearSVM<GLMModel, GLMTuple > > LinearSVMIGDAlgorithm;$/;"	t	namespace:madlib::modules::convex	file:
LinearSVMLossAlgorithm	modules/convex/linear_svm_igd.cpp	/^        LinearSVM<GLMModel, GLMTuple > > LinearSVMLossAlgorithm;$/;"	t	namespace:madlib::modules::convex	file:
Loader	madpack/yaml/loader.py	/^class Loader(Reader, Scanner, Parser, Composer, Constructor, Resolver):$/;"	c
Log	modules/glm/link.hpp	/^class Log {$/;"	c	namespace:madlib::modules::glm
LogRegrCGTransitionState	modules/regress/logistic.cpp	/^    LogRegrCGTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::regress::LogRegrCGTransitionState
LogRegrCGTransitionState	modules/regress/logistic.cpp	/^class LogRegrCGTransitionState {$/;"	c	namespace:madlib::modules::regress	file:
LogRegrIGDTransitionState	modules/regress/logistic.cpp	/^    LogRegrIGDTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::regress::LogRegrIGDTransitionState
LogRegrIGDTransitionState	modules/regress/logistic.cpp	/^class LogRegrIGDTransitionState {$/;"	c	namespace:madlib::modules::regress	file:
LogRegrIRLSTransitionState	modules/regress/logistic.cpp	/^    LogRegrIRLSTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::regress::LogRegrIRLSTransitionState
LogRegrIRLSTransitionState	modules/regress/logistic.cpp	/^class LogRegrIRLSTransitionState {$/;"	c	namespace:madlib::modules::regress	file:
Logit	modules/glm/link.hpp	/^class Logit {$/;"	c	namespace:madlib::modules::glm
Loss	modules/convex/algo/loss.hpp	/^class Loss {$/;"	c	namespace:madlib::modules::convex
Lower	dbal/EigenIntegration/EigenIntegration.hpp	/^    Lower = Eigen::Lower,$/;"	e	enum:madlib::dbal::eigen_integration::ViewMode
M	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap M; \/\/ meat$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
MADLIB_ALLOCATE_ARRAY_DECL	ports/postgres/dbconnector/Allocator_proto.hpp	47;"	d
MADLIB_ALLOCATE_ARRAY_DECL	ports/postgres/dbconnector/Allocator_proto.hpp	60;"	d
MADLIB_ALLOCATE_ARRAY_DEF	ports/postgres/dbconnector/Allocator_impl.hpp	101;"	d
MADLIB_ALLOCATE_ARRAY_DEF	ports/postgres/dbconnector/Allocator_impl.hpp	71;"	d
MADLIB_APPEND_ARG	ports/postgres/dbconnector/FunctionHandle_impl.hpp	182;"	d
MADLIB_APPEND_ARG	ports/postgres/dbconnector/FunctionHandle_impl.hpp	197;"	d
MADLIB_CLUSTERED_ERRORS_	modules/regress/clustered_errors_state.hpp	3;"	d
MADLIB_DBAL_BOOST_INTEGRATION_HPP	dbal/BoostIntegration/BoostIntegration.hpp	19;"	d
MADLIB_DBAL_BOOST_INTEGRATION_MATH_TOOLKIT_IMPL_HPP	dbal/BoostIntegration/MathToolkit_impl.hpp	10;"	d
MADLIB_DBAL_BYTESTREAMHANDLEBUF_IMPL_HPP	dbal/ByteStreamHandleBuf_impl.hpp	8;"	d
MADLIB_DBAL_BYTESTREAMHANDLEBUF_PROTO_HPP	dbal/ByteStreamHandleBuf_proto.hpp	8;"	d
MADLIB_DBAL_BYTESTREAM_IMPL_HPP	dbal/ByteStream_impl.hpp	8;"	d
MADLIB_DBAL_BYTESTREAM_PROTO_HPP	dbal/ByteStream_proto.hpp	8;"	d
MADLIB_DBAL_DYNAMICSTRUCT_PROTO_HPP	dbal/DynamicStruct_proto.hpp	8;"	d
MADLIB_DBAL_EIGEN_HANDLEMAP_IMPL_HPP	dbal/EigenIntegration/HandleMap_impl.hpp	8;"	d
MADLIB_DBAL_EIGEN_HANDLEMAP_PROTO_HPP	dbal/EigenIntegration/HandleMap_proto.hpp	8;"	d
MADLIB_DBAL_EIGEN_INTEGRATION_HPP	dbal/EigenIntegration/EigenIntegration.hpp	8;"	d
MADLIB_DBAL_EIGEN_INTEGRATION_SPDEIGENDECOMPOSITION_IMPL_HPP	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp	8;"	d
MADLIB_DBAL_EIGEN_INTEGRATION_SPDEIGENDECOMPOSITION_PROTO_HPP	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp	8;"	d
MADLIB_DBAL_HPP	dbal/dbal_proto.hpp	11;"	d
MADLIB_DBAL_IMPL_HPP	dbal/dbal_impl.hpp	8;"	d
MADLIB_DBAL_NOSOLUTIONFOUNDEXCEPTION_PROTO_HPP	dbal/Exceptions/NoSolutionFoundException_proto.hpp	8;"	d
MADLIB_DBAL_OUTPUTSTREAMBUFFERBASE_IMPL_HPP	dbal/OutputStreamBufferBase_impl.hpp	8;"	d
MADLIB_DBAL_OUTPUTSTREAMBUFFERBASE_PROTO_HPP	dbal/OutputStreamBufferBase_proto.hpp	8;"	d
MADLIB_DBAL_REFERENCE_IMPL_HPP	dbal/Reference_impl.hpp	8;"	d
MADLIB_DBAL_REFERENCE_PROTO_HPP	dbal/Reference_proto.hpp	8;"	d
MADLIB_DEFAULT_EXCEPTION	dbal/dbal_proto.hpp	13;"	d
MADLIB_DENSE_LINEAR_SYSTEMS_STATES_	modules/linear_systems/dense_linear_systems_states.hpp	3;"	d
MADLIB_DENSE_LINEAR_SYSTEMS_STATES_	modules/linear_systems/sparse_linear_systems_states.hpp	3;"	d
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	dbal/DynamicStruct_proto.hpp	209;"	d
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/convex/newton.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::convex::Newton
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/glm/GLM_proto.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::glm::GLMAccumulator
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/glm/MultiResponseGLM_proto.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::glm::MultiResponseGLMAccumulator
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/glm/Ordinal_proto.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::glm::OrdinalAccumulator
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/linear_systems/dense_linear_systems_states.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::linear_systems::ResidualState
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/linear_systems/sparse_linear_systems_states.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::linear_systems::ResidualState
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/recursive_partitioning/ConSplits.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::recursive_partitioning::ConSplitsResult
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/recursive_partitioning/ConSplits.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::recursive_partitioning::ConSplitsSample
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/recursive_partitioning/DT_proto.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/recursive_partitioning/DT_proto.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/regress/LinearRegression_proto.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/regress/LinearRegression_proto.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::regress::LinearRegressionAccumulator
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/regress/LinearRegression_proto.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::regress::RobustLinearRegressionAccumulator
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/regress/clustered_errors_state.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::regress::ClusteredState
MADLIB_DYNAMIC_STRUCT_TYPEDEFS	modules/sample/WeightedSample_proto.hpp	/^    MADLIB_DYNAMIC_STRUCT_TYPEDEFS;$/;"	m	class:madlib::modules::sample::WeightedSampleAccumulator
MADLIB_FUNC_MAX_ARGS	ports/postgres/dbconnector/dbconnector.hpp	191;"	d
MADLIB_GREENPLUM_COMPATIBILITY_HPP	ports/greenplum/dbconnector/Compatibility.hpp	8;"	d
MADLIB_GREENPLUM_DBCONNECTOR_HPP	ports/greenplum/dbconnector/dbconnector.hpp	10;"	d
MADLIB_HANDLE_STANDARD_EXCEPTION	ports/postgres/dbconnector/UDF_impl.hpp	16;"	d
MADLIB_HANDLE_STANDARD_EXCEPTION	ports/postgres/dbconnector/UDF_impl.hpp	216;"	d
MADLIB_ITEM	modules/prob/boost.hpp	1371;"	d
MADLIB_ITEM	modules/prob/boost.hpp	1379;"	d
MADLIB_ITEM	modules/prob/boost.hpp	45;"	d
MADLIB_ITEM	modules/prob/boost.hpp	52;"	d
MADLIB_ITEM	modules/prob/boost.hpp	54;"	d
MADLIB_ITEM	modules/prob/boost.hpp	61;"	d
MADLIB_MALLOC_ALLOCATOR_HPP	utils/MallocAllocator.hpp	8;"	d
MADLIB_MATH_HPP	utils/Math.hpp	8;"	d
MADLIB_MAX_ARRAY_DIMS	ports/postgres/dbconnector/dbconnector.hpp	196;"	d
MADLIB_MEMORY_HPP	utils/memory.hpp	8;"	d
MADLIB_MODULES_CONVEX_ALGO_GRADIENT_HPP_	modules/convex/algo/gradient.hpp	14;"	d
MADLIB_MODULES_CONVEX_ALGO_GRADIENT_HPP_	modules/convex/algo/gradient_norm.hpp	14;"	d
MADLIB_MODULES_CONVEX_ALGO_IGD_HPP_	modules/convex/algo/igd.hpp	14;"	d
MADLIB_MODULES_CONVEX_ALGO_LOSS_HPP_	modules/convex/algo/loss.hpp	14;"	d
MADLIB_MODULES_CONVEX_ALGO_NEWTON_HPP_	modules/convex/algo/newton.hpp	14;"	d
MADLIB_MODULES_CONVEX_NEWTON_HPP	modules/convex/newton.hpp	12;"	d
MADLIB_MODULES_CONVEX_TASK_L1_HPP_	modules/convex/task/l1.hpp	8;"	d
MADLIB_MODULES_CONVEX_TASK_L2_HPP_	modules/convex/task/l2.hpp	8;"	d
MADLIB_MODULES_CONVEX_TASK_LINEAR_SVM_HPP_	modules/convex/task/linear_svm.hpp	8;"	d
MADLIB_MODULES_CONVEX_TASK_LMF_HPP_	modules/convex/task/lmf.hpp	11;"	d
MADLIB_MODULES_CONVEX_TASK_MLP_HPP_	modules/convex/task/mlp.hpp	27;"	d
MADLIB_MODULES_CONVEX_TASK_OLS_HPP_	modules/convex/task/ols.hpp	8;"	d
MADLIB_MODULES_CONVEX_TYPE_DEPENDENT_VARIABLE_HPP_	modules/convex/type/dependent_variable.hpp	12;"	d
MADLIB_MODULES_CONVEX_TYPE_HESSIAN_HPP_	modules/convex/type/hessian.hpp	13;"	d
MADLIB_MODULES_CONVEX_TYPE_INDEPENDENT_VARIABLES_HPP_	modules/convex/type/independent_variables.hpp	12;"	d
MADLIB_MODULES_CONVEX_TYPE_MODEL_HPP_	modules/convex/type/model.hpp	13;"	d
MADLIB_MODULES_CONVEX_TYPE_STATE_HPP_	modules/convex/type/state.hpp	10;"	d
MADLIB_MODULES_CONVEX_TYPE_TUPLE_HPP_	modules/convex/type/tuple.hpp	11;"	d
MADLIB_MODULES_ELASIC_NET_STATE_FISTA_	modules/elastic_net/state/fista.hpp	10;"	d
MADLIB_MODULES_ELASIC_NET_STATE_IGD_	modules/elastic_net/state/igd.hpp	9;"	d
MADLIB_MODULES_GLM_FAMILY_HPP	modules/glm/family.hpp	8;"	d
MADLIB_MODULES_GLM_GLM_IMPL_HPP	modules/glm/GLM_impl.hpp	8;"	d
MADLIB_MODULES_GLM_GLM_PROTO_HPP	modules/glm/GLM_proto.hpp	8;"	d
MADLIB_MODULES_GLM_LINK_HPP	modules/glm/link.hpp	9;"	d
MADLIB_MODULES_GLM_MULTIRESPONSEGLM_IMPL_HPP	modules/glm/MultiResponseGLM_impl.hpp	8;"	d
MADLIB_MODULES_GLM_MULTIRESPONSEGLM_PROTO_HPP	modules/glm/MultiResponseGLM_proto.hpp	8;"	d
MADLIB_MODULES_GLM_ORDINAL_IMPL_HPP	modules/glm/Ordinal_impl.hpp	8;"	d
MADLIB_MODULES_GLM_ORDINAL_PROTO_HPP	modules/glm/Ordinal_proto.hpp	8;"	d
MADLIB_MODULES_LINALG_LINALG_HPP	modules/linalg/metric.hpp	70;"	d
MADLIB_MODULES_PROB_BOOST_HPP	modules/prob/boost.hpp	65;"	d
MADLIB_MODULES_PROB_KOLMOGOROV_HPP	modules/prob/kolmogorov.hpp	14;"	d
MADLIB_MODULES_PROB_STUDENT_T_HPP	modules/prob/student.hpp	67;"	d
MADLIB_MODULES_REGRESS_LINEAR_REGRESSION_IMPL_HPP	modules/regress/LinearRegression_impl.hpp	8;"	d
MADLIB_MODULES_REGRESS_LINEAR_REGRESSION_PROTO_HPP	modules/regress/LinearRegression_proto.hpp	8;"	d
MADLIB_MODULES_RP_CON_SPLITS_HPP	modules/recursive_partitioning/ConSplits.hpp	2;"	d
MADLIB_MODULES_RP_DT_IMPL_HPP	modules/recursive_partitioning/DT_impl.hpp	8;"	d
MADLIB_MODULES_RP_DT_PROTO_HPP	modules/recursive_partitioning/DT_proto.hpp	8;"	d
MADLIB_MODULES_SAMPLE_WEIGHTED_SAMPLE_IMPL_HPP	modules/sample/WeightedSample_impl.hpp	8;"	d
MADLIB_MODULES_SAMPLE_WEIGHTED_SAMPLE_PROTO_HPP	modules/sample/WeightedSample_proto.hpp	8;"	d
MADLIB_OPERATOR_DECL	ports/postgres/dbconnector/FunctionHandle_proto.hpp	56;"	d
MADLIB_OPERATOR_DECL	ports/postgres/dbconnector/FunctionHandle_proto.hpp	61;"	d
MADLIB_OPERATOR_DEF	ports/postgres/dbconnector/FunctionHandle_impl.hpp	184;"	d
MADLIB_OPERATOR_DEF	ports/postgres/dbconnector/FunctionHandle_impl.hpp	196;"	d
MADLIB_PG_CATCH	ports/postgres/dbconnector/dbconnector.hpp	141;"	d
MADLIB_PG_DEFAULT_CATCH_AND_END_TRY	ports/postgres/dbconnector/dbconnector.hpp	158;"	d
MADLIB_PG_END_TRY	ports/postgres/dbconnector/dbconnector.hpp	149;"	d
MADLIB_PG_ERROR_DATA	ports/postgres/dbconnector/dbconnector.hpp	155;"	d
MADLIB_PG_RE_THROW	ports/postgres/dbconnector/dbconnector.hpp	152;"	d
MADLIB_PG_TRY	ports/postgres/dbconnector/dbconnector.hpp	132;"	d
MADLIB_POSTGRES_ALLOCATOR_IMPL_HPP	ports/postgres/dbconnector/Allocator_impl.hpp	8;"	d
MADLIB_POSTGRES_ALLOCATOR_PROTO_HPP	ports/postgres/dbconnector/Allocator_proto.hpp	8;"	d
MADLIB_POSTGRES_ANYTYPE_IMPL_HPP	ports/postgres/dbconnector/AnyType_impl.hpp	8;"	d
MADLIB_POSTGRES_ANYTYPE_PROTO_HPP	ports/postgres/dbconnector/AnyType_proto.hpp	8;"	d
MADLIB_POSTGRES_ARRAYHANDLE_IMPL_HPP	ports/postgres/dbconnector/ArrayHandle_impl.hpp	8;"	d
MADLIB_POSTGRES_ARRAYHANDLE_PROTO_HPP	ports/postgres/dbconnector/ArrayHandle_proto.hpp	8;"	d
MADLIB_POSTGRES_ARRAYWITHNULLEXCEPTION_PROTO_HPP	ports/postgres/dbconnector/ArrayWithNullException_proto.hpp	8;"	d
MADLIB_POSTGRES_BACKEND_HPP	ports/postgres/dbconnector/Backend.hpp	8;"	d
MADLIB_POSTGRES_BYTESTRING_IMPL_HPP	ports/postgres/dbconnector/ByteString_impl.hpp	8;"	d
MADLIB_POSTGRES_BYTESTRING_PROTO_HPP	ports/postgres/dbconnector/ByteString_proto.hpp	8;"	d
MADLIB_POSTGRES_COMPATIBILITY_HPP	ports/postgres/dbconnector/Compatibility.hpp	8;"	d
MADLIB_POSTGRES_DBCONNECTOR_HPP	ports/postgres/dbconnector/dbconnector.hpp	10;"	d
MADLIB_POSTGRES_DYNAMICSTRUCT_IMPL_HPP	dbal/DynamicStruct_impl.hpp	8;"	d
MADLIB_POSTGRES_EIGEN_INTEGRATION_IMPL_HPP	ports/postgres/dbconnector/EigenIntegration_impl.hpp	10;"	d
MADLIB_POSTGRES_EIGEN_INTEGRATION_PROTO_HPP	ports/postgres/dbconnector/EigenIntegration_proto.hpp	8;"	d
MADLIB_POSTGRES_FUNCTIONHANDLE_IMPL_HPP	ports/postgres/dbconnector/FunctionHandle_impl.hpp	8;"	d
MADLIB_POSTGRES_FUNCTIONHANDLE_PROTO_HPP	ports/postgres/dbconnector/FunctionHandle_proto.hpp	8;"	d
MADLIB_POSTGRES_HEADERS	ports/greenplum/dbconnector/dbconnector.hpp	13;"	d
MADLIB_POSTGRES_HEADERS	ports/postgres/dbconnector/dbconnector.hpp	15;"	d
MADLIB_POSTGRES_NATIVERANDOMNUMBERGENERATOR_IMPL_HPP	ports/postgres/dbconnector/NativeRandomNumberGenerator_impl.hpp	8;"	d
MADLIB_POSTGRES_NATIVERANDOMNUMBERGENERATOR_PROTO_HPP	ports/postgres/dbconnector/NativeRandomNumberGenerator_proto.hpp	8;"	d
MADLIB_POSTGRES_OUTPUTSTREAMBUFFER_IMPL_HPP	ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp	8;"	d
MADLIB_POSTGRES_OUTPUTSTREAMBUFFER_PROTO_HPP	ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp	8;"	d
MADLIB_POSTGRES_PGEXCEPTION_PROTO_HPP	ports/postgres/dbconnector/PGException_proto.hpp	8;"	d
MADLIB_POSTGRES_SYSTEMINFORMATION_IMPL_HPP	ports/postgres/dbconnector/SystemInformation_impl.hpp	8;"	d
MADLIB_POSTGRES_SYSTEMINFORMATION_PROTO_HPP	ports/postgres/dbconnector/SystemInformation_proto.hpp	8;"	d
MADLIB_POSTGRES_TRANSPARENTHANDLE_IMPL_HPP	ports/postgres/dbconnector/TransparentHandle_impl.hpp	8;"	d
MADLIB_POSTGRES_TRANSPARENTHANDLE_PROTO_HPP	ports/postgres/dbconnector/TransparentHandle_proto.hpp	8;"	d
MADLIB_POSTGRES_TYPETRAITS_IMPL_HPP	ports/postgres/dbconnector/TypeTraits_impl.hpp	8;"	d
MADLIB_POSTGRES_TYPETRAITS_PROTO_HPP	ports/postgres/dbconnector/TypeTraits_proto.hpp	8;"	d
MADLIB_POSTGRES_UDF_IMPL_HPP	ports/postgres/dbconnector/UDF_impl.hpp	8;"	d
MADLIB_POSTGRES_UDF_PROTO_HPP	ports/postgres/dbconnector/UDF_proto.hpp	8;"	d
MADLIB_REFERENCE_HPP	utils/Reference.hpp	8;"	d
MADLIB_SHAPETOEXTENTS_HPP	utils/shapeToExtents.hpp	10;"	d
MADLIB_SHARED_HANDLE_TRAITS_HPP_	modules/shared/HandleTraits.hpp	8;"	d
MADLIB_SRF_FIRSTCALL_INIT	ports/postgres/dbconnector/UDF_impl.hpp	23;"	d
MADLIB_SRF_IS_FIRSTCALL	ports/postgres/dbconnector/UDF_impl.hpp	22;"	d
MADLIB_SRF_PERCALL_SETUP	ports/postgres/dbconnector/UDF_impl.hpp	24;"	d
MADLIB_SRF_RETURN_DONE	ports/postgres/dbconnector/UDF_impl.hpp	26;"	d
MADLIB_SRF_RETURN_NEXT	ports/postgres/dbconnector/UDF_impl.hpp	25;"	d
MADLIB_WRAP_PG_FUNC	ports/postgres/dbconnector/dbconnector.hpp	163;"	d
MADLIB_WRAP_VOID_PG_FUNC	ports/postgres/dbconnector/dbconnector.hpp	174;"	d
MAXINT	libstemmer/runtime/header.h	6;"	d
MAX_LANCZOS_STEPS	modules/linalg/svd.cpp	/^const size_t MAX_LANCZOS_STEPS = 5000;$/;"	m	namespace:madlib::modules::linalg	file:
MAX_RANK	madpack/sort-module.py	/^MAX_RANK = len(module_order) + 1$/;"	v
MININT	libstemmer/runtime/header.h	7;"	d
MISCLASS	modules/recursive_partitioning/DT_proto.hpp	/^    enum { MSE, MISCLASS, ENTROPY, GINI };$/;"	e	enum:madlib::modules::recursive_partitioning::DecisionTree::__anon23
MLP	modules/convex/task/mlp.hpp	/^class MLP {$/;"	c	namespace:madlib::modules::convex
MLPIGDAlgorithm	modules/convex/mlp_igd.cpp	/^        MLP<MLPModel<MutableArrayHandle<double> >, MLPTuple > > MLPIGDAlgorithm;$/;"	t	namespace:madlib::modules::convex	file:
MLPIGDState	modules/convex/type/state.hpp	/^    MLPIGDState(const AnyType &inArray) : mStorage(inArray.getAs<Handle>()) {$/;"	f	class:madlib::modules::convex::MLPIGDState
MLPIGDState	modules/convex/type/state.hpp	/^class MLPIGDState {$/;"	c	namespace:madlib::modules::convex
MLPLossAlgorithm	modules/convex/mlp_igd.cpp	/^        MLP<MLPModel<MutableArrayHandle<double> >, MLPTuple > > MLPLossAlgorithm;$/;"	t	namespace:madlib::modules::convex	file:
MLPMiniBatchAlgorithm	modules/convex/mlp_igd.cpp	/^        MLP<MLPModel<MutableArrayHandle<double> >, MiniBatchTuple > > MLPMiniBatchAlgorithm;$/;"	t	namespace:madlib::modules::convex	file:
MLPMiniBatchState	modules/convex/type/state.hpp	/^    MLPMiniBatchState(const AnyType &inArray) : mStorage(inArray.getAs<Handle>()) {$/;"	f	class:madlib::modules::convex::MLPMiniBatchState
MLPMiniBatchState	modules/convex/type/state.hpp	/^class MLPMiniBatchState {$/;"	c	namespace:madlib::modules::convex
MLPModel	modules/convex/type/model.hpp	/^struct MLPModel {$/;"	s	namespace:madlib::modules::convex
MLPModelType	modules/convex/mlp_igd.cpp	/^typedef MLPModel<MutableArrayHandle<double> > MLPModelType;$/;"	t	namespace:madlib::modules::convex	file:
MLPTask	modules/convex/mlp_igd.cpp	/^typedef MLP<MLPModel<MutableArrayHandle<double> >,MLPTuple> MLPTask;$/;"	t	namespace:madlib::modules::convex	file:
MLPTuple	modules/convex/type/tuple.hpp	/^typedef ExampleTuple<ColumnVector, ColumnVector> MLPTuple;$/;"	t	namespace:madlib::modules::convex
MLogRegrIRLSTransitionState	modules/regress/multilogistic.cpp	/^    MLogRegrIRLSTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::regress::MLogRegrIRLSTransitionState
MLogRegrIRLSTransitionState	modules/regress/multilogistic.cpp	/^class MLogRegrIRLSTransitionState {$/;"	c	namespace:madlib::modules::regress	file:
MLogRegrRobustTransitionState	modules/regress/multilogistic.cpp	/^    MLogRegrRobustTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::regress::MLogRegrRobustTransitionState
MLogRegrRobustTransitionState	modules/regress/multilogistic.cpp	/^class MLogRegrRobustTransitionState {$/;"	c	namespace:madlib::modules::regress	file:
MLrobuststateToResult	modules/regress/multilogistic.cpp	/^AnyType MLrobuststateToResult($/;"	f	namespace:madlib::modules::regress
MSE	modules/recursive_partitioning/DT_proto.hpp	/^    enum { MSE, MISCLASS, ENTROPY, GINI };$/;"	e	enum:madlib::modules::recursive_partitioning::DecisionTree::__anon23
MWTestTransitionState	modules/stats/mann_whitney_test.cpp	/^    MWTestTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::MWTestTransitionState
MWTestTransitionState	modules/stats/mann_whitney_test.cpp	/^class MWTestTransitionState {$/;"	c	namespace:madlib::modules::stats	file:
MadPackConfigError	madpack/configyml.py	/^class MadPackConfigError(Exception):$/;"	c
MallocAllocator	utils/MallocAllocator.hpp	/^    MallocAllocator() throw () { }$/;"	f	class:madlib::utils::MallocAllocator
MallocAllocator	utils/MallocAllocator.hpp	/^    MallocAllocator(const MallocAllocator &) throw () { }$/;"	f	class:madlib::utils::MallocAllocator
MallocAllocator	utils/MallocAllocator.hpp	/^    template <class U> MallocAllocator(const MallocAllocator<U>&) throw () { }$/;"	f	class:madlib::utils::MallocAllocator
MallocAllocator	utils/MallocAllocator.hpp	/^class MallocAllocator {$/;"	c	namespace:madlib::utils
MallocAllocator	utils/MallocAllocator.hpp	/^class MallocAllocator<void> {$/;"	c	namespace:madlib::utils
MappedColumnVector	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^typedef HandleMap<const ColumnVector, TransparentHandle<double> > MappedColumnVector;$/;"	t	namespace:madlib::dbal::eigen_integration
MappedIntegerVector	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^typedef HandleMap<const IntegerVector, TransparentHandle<int> > MappedIntegerVector;$/;"	t	namespace:madlib::dbal::eigen_integration
MappedMatrix	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^typedef HandleMap<const Matrix, TransparentHandle<double> > MappedMatrix;$/;"	t	namespace:madlib::dbal::eigen_integration
MappedVectorXcd	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^    MappedVectorXcd;$/;"	t	namespace:madlib::dbal::eigen_integration
MappingEndEvent	madpack/yaml/events.py	/^class MappingEndEvent(CollectionEndEvent):$/;"	c
MappingNode	madpack/yaml/nodes.py	/^class MappingNode(CollectionNode):$/;"	c
MappingStartEvent	madpack/yaml/events.py	/^class MappingStartEvent(CollectionStartEvent):$/;"	c
MarginalLogRegrTransitionState	modules/regress/logistic.cpp	/^    MarginalLogRegrTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::regress::MarginalLogRegrTransitionState
MarginalLogRegrTransitionState	modules/regress/logistic.cpp	/^class MarginalLogRegrTransitionState {$/;"	c	namespace:madlib::modules::regress	file:
MarginsCoxPropHazardState	modules/stats/marginal_cox.cpp	/^    MarginsCoxPropHazardState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::MarginsCoxPropHazardState
MarginsCoxPropHazardState	modules/stats/marginal_cox.cpp	/^class MarginsCoxPropHazardState {$/;"	c	namespace:madlib::modules::stats	file:
MarginsLinregrInteractionState	modules/regress/marginal.cpp	/^    MarginsLinregrInteractionState(const AnyType &inArray)$/;"	f	class:madlib::modules::regress::MarginsLinregrInteractionState
MarginsLinregrInteractionState	modules/regress/marginal.cpp	/^class MarginsLinregrInteractionState {$/;"	c	namespace:madlib::modules::regress	file:
MarginsLogregrInteractionState	modules/regress/marginal.cpp	/^    MarginsLogregrInteractionState(const AnyType &inArray)$/;"	f	class:madlib::modules::regress::MarginsLogregrInteractionState
MarginsLogregrInteractionState	modules/regress/marginal.cpp	/^class MarginsLogregrInteractionState {$/;"	c	namespace:madlib::modules::regress	file:
MarginsMLogregrInteractionState	modules/regress/marginal.cpp	/^    MarginsMLogregrInteractionState(const AnyType &inArray)$/;"	f	class:madlib::modules::regress::MarginsMLogregrInteractionState
MarginsMLogregrInteractionState	modules/regress/marginal.cpp	/^class MarginsMLogregrInteractionState {$/;"	c	namespace:madlib::modules::regress	file:
Mark	madpack/yaml/error.py	/^class Mark(object):$/;"	c
Mark	madpack/yaml/reader.py	/^from error import YAMLError, Mark$/;"	i
MarkedYAMLError	madpack/yaml/composer.py	/^from error import MarkedYAMLError$/;"	i
MarkedYAMLError	madpack/yaml/error.py	/^class MarkedYAMLError(YAMLError):$/;"	c
MarkedYAMLError	madpack/yaml/parser.py	/^from error import MarkedYAMLError$/;"	i
MarkedYAMLError	madpack/yaml/scanner.py	/^from error import MarkedYAMLError$/;"	i
Matrix	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::MatrixXd Matrix;$/;"	t	namespace:madlib::dbal::eigen_integration
Matrix	modules/shared/HandleTraits.hpp	/^    typedef dbal::eigen_integration::Matrix Matrix;$/;"	t	struct:madlib::modules::HandleTraits
MatrixAggState	modules/linalg/matrix_agg.cpp	/^    MatrixAggState(const AnyType &inArray)$/;"	f	class:madlib::modules::linalg::MatrixAggState
MatrixAggState	modules/linalg/matrix_agg.cpp	/^class MatrixAggState {$/;"	c	namespace:madlib::modules::linalg	file:
MatrixComposeState	modules/linalg/matrix_decomp.cpp	/^    MatrixComposeState(const AnyType &inArray)$/;"	f	class:madlib::modules::linalg::MatrixComposeState
MatrixComposeState	modules/linalg/matrix_decomp.cpp	/^class MatrixComposeState {$/;"	c	namespace:madlib::modules::linalg	file:
MatrixIndex	modules/convex/type/independent_variables.hpp	/^struct MatrixIndex {$/;"	s	namespace:madlib::modules::convex
MatrixLDLT	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::LDLT<Eigen::MatrixXd> MatrixLDLT;$/;"	t	namespace:madlib::dbal::eigen_integration
MatrixToNativeArray	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^MatrixToNativeArray(const Eigen::MatrixBase<Derived>& inMatrix) {$/;"	f	namespace:madlib::dbconnector::postgres
MatrixTransparentHandleMap	modules/shared/HandleTraits.hpp	/^        TransparentHandle<double, dbal::Immutable> > MatrixTransparentHandleMap;$/;"	t	struct:madlib::modules::HandleTraits
MatrixTransparentHandleMap	modules/shared/HandleTraits.hpp	/^        TransparentHandle<double, dbal::Mutable> > MatrixTransparentHandleMap;$/;"	t	struct:madlib::modules::HandleTraits
Max	ports/postgres/dbconnector/dbconnector.hpp	57;"	d
MemoryContext	dbal/dbal_proto.hpp	/^enum MemoryContext {$/;"	g	namespace:madlib::dbal
Min	ports/postgres/dbconnector/dbconnector.hpp	61;"	d
MiniBatchTuple	modules/convex/type/tuple.hpp	/^typedef ExampleTuple<Matrix, Matrix> MiniBatchTuple;$/;"	t	namespace:madlib::modules::convex
MultiLogit	modules/glm/link.hpp	/^class MultiLogit {$/;"	c	namespace:madlib::modules::glm
MultiResponseGLMAccumulator	modules/glm/MultiResponseGLM_impl.hpp	/^MultiResponseGLMAccumulator<Container,Family,Link>::MultiResponseGLMAccumulator($/;"	f	class:madlib::modules::glm::MultiResponseGLMAccumulator
MultiResponseGLMAccumulator	modules/glm/MultiResponseGLM_proto.hpp	/^class MultiResponseGLMAccumulator$/;"	c	namespace:madlib::modules::glm
MultiResponseGLMResult	modules/glm/MultiResponseGLM_impl.hpp	/^MultiResponseGLMResult::MultiResponseGLMResult(const MultiResponseGLMAccumulator<Container>& state) {$/;"	f	class:madlib::modules::glm::MultiResponseGLMResult
MultiResponseGLMResult	modules/glm/MultiResponseGLM_proto.hpp	/^class MultiResponseGLMResult {$/;"	c	namespace:madlib::modules::glm
MultiResponseGLMState	modules/glm/multi_response_glm.cpp	/^typedef MultiResponseGLMAccumulator<RootContainer> MultiResponseGLMState;$/;"	t	namespace:madlib::modules::glm	file:
Multinomial	modules/glm/family.hpp	/^class Multinomial {$/;"	c	namespace:madlib::modules::glm
Mutability	dbal/dbal_proto.hpp	/^enum Mutability {$/;"	g	namespace:madlib::dbal
Mutable	dbal/dbal_proto.hpp	/^    Mutable$/;"	e	enum:madlib::dbal::Mutability
MutableArrayHandle	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^    MutableArrayHandle(ArrayType *inArray)$/;"	f	class:madlib::dbconnector::postgres::MutableArrayHandle
MutableArrayHandle	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^class MutableArrayHandle : public ArrayHandle<T> {$/;"	c	namespace:madlib::dbconnector::postgres
MutableByteString	ports/postgres/dbconnector/ByteString_impl.hpp	/^MutableByteString::MutableByteString(bytea* inByteString)$/;"	f	class:madlib::dbconnector::postgres::MutableByteString
MutableByteString	ports/postgres/dbconnector/ByteString_proto.hpp	/^class MutableByteString : public ByteString {$/;"	c	namespace:madlib::dbconnector::postgres
MutableClusteredState	modules/regress/clustered_errors.cpp	/^typedef ClusteredState<MutableRootContainer> MutableClusteredState;$/;"	t	namespace:madlib::modules::regress	file:
MutableGLMBinomialLogitState	modules/glm/glm.cpp	/^    MutableGLMBinomialLogitState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMBinomialProbitState	modules/glm/glm.cpp	/^    MutableGLMBinomialProbitState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMGammaIdentityState	modules/glm/glm.cpp	/^    MutableGLMGammaIdentityState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMGammaInverseState	modules/glm/glm.cpp	/^    MutableGLMGammaInverseState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMGammaLogState	modules/glm/glm.cpp	/^    MutableGLMGammaLogState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMGaussianIdentityState	modules/glm/glm.cpp	/^    MutableGLMGaussianIdentityState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMGaussianInverseState	modules/glm/glm.cpp	/^    MutableGLMGaussianInverseState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMGaussianLogState	modules/glm/glm.cpp	/^    MutableGLMGaussianLogState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMInverseGaussianIdentityState	modules/glm/glm.cpp	/^    MutableGLMInverseGaussianIdentityState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMInverseGaussianInverseState	modules/glm/glm.cpp	/^    MutableGLMInverseGaussianInverseState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMInverseGaussianLogState	modules/glm/glm.cpp	/^    MutableGLMInverseGaussianLogState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMInverseGaussianSqrInverseState	modules/glm/glm.cpp	/^    MutableGLMInverseGaussianSqrInverseState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMPoissonIdentityState	modules/glm/glm.cpp	/^    MutableGLMPoissonIdentityState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMPoissonLogState	modules/glm/glm.cpp	/^    MutableGLMPoissonLogState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMPoissonSqrtState	modules/glm/glm.cpp	/^    MutableGLMPoissonSqrtState;$/;"	t	namespace:madlib::modules::glm	file:
MutableGLMState	modules/glm/glm.cpp	/^typedef GLMAccumulator<MutableRootContainer> MutableGLMState;$/;"	t	namespace:madlib::modules::glm	file:
MutableHeteroLinRegrState	modules/regress/linear.cpp	/^                                                    MutableHeteroLinRegrState;$/;"	t	namespace:madlib::modules::regress	file:
MutableLevelState	modules/recursive_partitioning/decision_tree.cpp	/^typedef TreeAccumulator<MutableRootContainer, Tree> MutableLevelState;$/;"	t	namespace:madlib::modules::recursive_partitioning	file:
MutableLinRegrState	modules/regress/linear.cpp	/^typedef LinearRegressionAccumulator<MutableRootContainer> MutableLinRegrState;$/;"	t	namespace:madlib::modules::regress	file:
MutableMappedColumnVector	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^    MutableMappedColumnVector;$/;"	t	namespace:madlib::dbal::eigen_integration
MutableMappedIntegerVector	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^    MutableMappedIntegerVector;$/;"	t	namespace:madlib::dbal::eigen_integration
MutableMappedMatrix	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^typedef HandleMap<Matrix, TransparentHandle<double, Mutable> > MutableMappedMatrix;$/;"	t	namespace:madlib::dbal::eigen_integration
MutableMappedVectorXcd	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^    MutableMappedVectorXcd;$/;"	t	namespace:madlib::dbal::eigen_integration
MutableMultiResponseGLMState	modules/glm/multi_response_glm.cpp	/^typedef MultiResponseGLMAccumulator<MutableRootContainer> MutableMultiResponseGLMState;$/;"	t	namespace:madlib::modules::glm	file:
MutableNativeColumnVector	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^    MutableNativeColumnVector;$/;"	t	namespace:madlib::dbal::eigen_integration
MutableNativeIntegerVector	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^    MutableNativeIntegerVector;$/;"	t	namespace:madlib::dbal::eigen_integration
MutableNativeMatrix	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^typedef HandleMap<Matrix, MutableArrayHandle<double> > MutableNativeMatrix;$/;"	t	namespace:madlib::dbal::eigen_integration
MutableOrdinalLogitState	modules/glm/ordinal.cpp	/^    MutableOrdinalLogitState;$/;"	t	namespace:madlib::modules::glm	file:
MutableOrdinalProbitState	modules/glm/ordinal.cpp	/^    MutableOrdinalProbitState;$/;"	t	namespace:madlib::modules::glm	file:
MutableReference	utils/Reference.hpp	/^    MutableReference() { }$/;"	f	class:madlib::utils::MutableReference
MutableReference	utils/Reference.hpp	/^    MutableReference(T *inPtr) : Base(inPtr) { }$/;"	f	class:madlib::utils::MutableReference
MutableReference	utils/Reference.hpp	/^class MutableReference : public Reference<T, U> {$/;"	c	namespace:madlib::utils
MutableResidualState	modules/linear_systems/dense_linear_systems.cpp	/^typedef ResidualState<MutableRootContainer> MutableResidualState;$/;"	t	namespace:madlib::modules::linear_systems	file:
MutableRobustLinRegrState	modules/regress/linear.cpp	/^typedef RobustLinearRegressionAccumulator<MutableRootContainer> MutableRobustLinRegrState;$/;"	t	namespace:madlib::modules::regress	file:
MutableRootContainer	ports/postgres/dbconnector/dbconnector.hpp	/^    MutableByteString, dbconnector::postgres::TypeTraits> MutableRootContainer;$/;"	t	namespace:madlib
MutableTree	modules/recursive_partitioning/decision_tree.cpp	/^typedef DecisionTree<MutableRootContainer> MutableTree;$/;"	t	namespace:madlib::modules::recursive_partitioning	file:
MutableWeightedSampleColVecState	modules/sample/weighted_sample.cpp	/^    MutableWeightedSampleColVecState;$/;"	t	namespace:madlib::modules::sample	file:
MutableWeightedSampleInt64State	modules/sample/weighted_sample.cpp	/^    MutableWeightedSampleInt64State;$/;"	t	namespace:madlib::modules::sample	file:
NNZA	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 NNZA;$/;"	m	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
NNZA	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 NNZA;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
NODE_NON_EXISTING	modules/recursive_partitioning/DT_proto.hpp	/^    enum { IN_PROCESS_LEAF=-1, FINISHED_LEAF=-2, NODE_NON_EXISTING=-3 };$/;"	e	enum:madlib::modules::recursive_partitioning::DecisionTree::__anon24
NON_PRINTABLE	madpack/yaml/reader.py	/^    NON_PRINTABLE = re.compile(u'[^\\x09\\x0A\\x0D\\x20-\\x7E\\x85\\xA0-\\uD7FF\\uE000-\\uFFFD]')$/;"	v	class:Reader
NOT_FINISHED	modules/recursive_partitioning/decision_tree.cpp	/^enum { NOT_FINISHED=0, FINISHED, TERMINATED };$/;"	e	enum:madlib::modules::recursive_partitioning::__anon21	file:
NULL_EMPTY	modules/regress/logistic.cpp	/^enum { IN_PROCESS, COMPLETED, TERMINATED, NULL_EMPTY };$/;"	e	enum:madlib::modules::regress::__anon16	file:
Namespace	madpack/argparse.py	/^class Namespace(_AttributeHolder):$/;"	c
NativeArrayToMappedMatrix	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^NativeArrayToMappedMatrix(Datum inDatum, bool inNeedMutableClone) {$/;"	f	namespace:madlib::dbconnector::postgres
NativeArrayToMappedVector	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^NativeArrayToMappedVector(Datum inDatum, bool inNeedMutableClone) {$/;"	f	namespace:madlib::dbconnector::postgres
NativeArrayToMappedVectorXcd	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^NativeArrayToMappedVectorXcd(Datum inDatum, bool inNeedMutableClone) {$/;"	f	namespace:madlib::dbconnector::postgres
NativeColumnVector	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^typedef HandleMap<const ColumnVector, ArrayHandle<double> > NativeColumnVector;$/;"	t	namespace:madlib::dbal::eigen_integration
NativeComposite	ports/postgres/dbconnector/AnyType_proto.hpp	/^        NativeComposite,$/;"	e	enum:madlib::dbconnector::postgres::AnyType::ContentType
NativeIntegerVector	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^typedef HandleMap<const IntegerVector, ArrayHandle<int> > NativeIntegerVector;$/;"	t	namespace:madlib::dbal::eigen_integration
NativeMatrix	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^typedef HandleMap<const Matrix, ArrayHandle<double> > NativeMatrix;$/;"	t	namespace:madlib::dbal::eigen_integration
NativeRandomNumberGenerator	ports/postgres/dbconnector/NativeRandomNumberGenerator_impl.hpp	/^NativeRandomNumberGenerator::NativeRandomNumberGenerator() { }$/;"	f	class:madlib::dbconnector::postgres::NativeRandomNumberGenerator
NativeRandomNumberGenerator	ports/postgres/dbconnector/NativeRandomNumberGenerator_proto.hpp	/^class NativeRandomNumberGenerator {$/;"	c	namespace:madlib::dbconnector::postgres
NewAllocation	ports/postgres/dbconnector/Allocator_proto.hpp	/^        NewAllocation,$/;"	e	enum:madlib::dbconnector::postgres::Allocator::ReallocateMemory
Newton	modules/convex/algo/newton.hpp	/^class Newton {$/;"	c	namespace:madlib::modules::convex
Newton	modules/convex/newton.hpp	/^    Newton(Init_type& inInitialization) : Base(inInitialization) {$/;"	f	class:madlib::modules::convex::Newton
Newton	modules/convex/newton.hpp	/^class Newton : public DynamicStruct<Newton<Container, Accumulator>,Container> {$/;"	c	namespace:madlib::modules::convex
NoDeleter	utils/memory.hpp	/^struct NoDeleter {$/;"	s	namespace:madlib::utils::memory
NoSolutionFoundException	dbal/Exceptions/NoSolutionFoundException_proto.hpp	/^    NoSolutionFoundException()$/;"	f	class:madlib::dbal::NoSolutionFoundException
NoSolutionFoundException	dbal/Exceptions/NoSolutionFoundException_proto.hpp	/^    NoSolutionFoundException(const std::string& inMsg)$/;"	f	class:madlib::dbal::NoSolutionFoundException
NoSolutionFoundException	dbal/Exceptions/NoSolutionFoundException_proto.hpp	/^class NoSolutionFoundException$/;"	c	namespace:madlib::dbal
Node	madpack/yaml/nodes.py	/^class Node(object):$/;"	c
NodeEvent	madpack/yaml/events.py	/^class NodeEvent(Event):$/;"	c
NonNegativeIntegerDomainCheck	modules/prob/boost.hpp	/^struct NonNegativeIntegerDomainCheck : public IntegerDomainCheck<Distribution> {$/;"	s	namespace:madlib::modules::prob::__anon12
Null	ports/postgres/dbconnector/AnyType_impl.hpp	/^Null() {$/;"	f	namespace:madlib::dbconnector::postgres
Null	ports/postgres/dbconnector/AnyType_proto.hpp	/^        Null,$/;"	e	enum:madlib::dbconnector::postgres::AnyType::ContentType
OLS	modules/convex/task/ols.hpp	/^class OLS {$/;"	c	namespace:madlib::modules::convex
ONE_OR_MORE	madpack/argparse.py	/^ONE_OR_MORE = '+'$/;"	v
OPTIONAL	madpack/argparse.py	/^OPTIONAL = '?'$/;"	v
OWATransitionState	modules/stats/one_way_anova.cpp	/^    OWATransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::OWATransitionState
OWATransitionState	modules/stats/one_way_anova.cpp	/^class OWATransitionState {$/;"	c	namespace:madlib::modules::stats	file:
OnMemoryAllocationFailure	dbal/dbal_proto.hpp	/^enum OnMemoryAllocationFailure {$/;"	g	namespace:madlib::dbal
OrdinalAccumulator	modules/glm/Ordinal_impl.hpp	/^OrdinalAccumulator<Container,Family,Link>::OrdinalAccumulator($/;"	f	class:madlib::modules::glm::OrdinalAccumulator
OrdinalAccumulator	modules/glm/Ordinal_proto.hpp	/^class OrdinalAccumulator$/;"	c	namespace:madlib::modules::glm
OrdinalLogit	modules/glm/link.hpp	/^class OrdinalLogit {$/;"	c	namespace:madlib::modules::glm
OrdinalMutableState	modules/glm/ordinal.cpp	/^typedef OrdinalAccumulator<MutableRootContainer> OrdinalMutableState;$/;"	t	namespace:madlib::modules::glm	file:
OrdinalProbit	modules/glm/link.hpp	/^class OrdinalProbit {$/;"	c	namespace:madlib::modules::glm
OrdinalResult	modules/glm/Ordinal_impl.hpp	/^OrdinalResult::OrdinalResult(const OrdinalAccumulator<Container>& state) {$/;"	f	class:madlib::modules::glm::OrdinalResult
OrdinalResult	modules/glm/Ordinal_proto.hpp	/^class OrdinalResult {$/;"	c	namespace:madlib::modules::glm
OrdinalState	modules/glm/ordinal.cpp	/^typedef OrdinalAccumulator<RootContainer> OrdinalState;$/;"	t	namespace:madlib::modules::glm	file:
OutputStreamBuffer	ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp	/^class OutputStreamBuffer$/;"	c	namespace:madlib::dbconnector::postgres
OutputStreamBufferBase	dbal/OutputStreamBufferBase_impl.hpp	/^OutputStreamBufferBase<Derived, C, Allocator>::OutputStreamBufferBase()$/;"	f	class:madlib::dbal::OutputStreamBufferBase
OutputStreamBufferBase	dbal/OutputStreamBufferBase_proto.hpp	/^class OutputStreamBufferBase : public std::basic_streambuf<C> {$/;"	c	namespace:madlib::dbal
PARSER	madpack/argparse.py	/^PARSER = 'A...'$/;"	v
PGException	ports/postgres/dbconnector/PGException_proto.hpp	/^    PGException()$/;"	f	class:madlib::dbconnector::postgres::PGException
PGException	ports/postgres/dbconnector/PGException_proto.hpp	/^    PGException(ErrorData* \/* inErrorData *\/)$/;"	f	class:madlib::dbconnector::postgres::PGException
PGException	ports/postgres/dbconnector/PGException_proto.hpp	/^class PGException : public std::runtime_error {$/;"	c	namespace:madlib::dbconnector::postgres
PG_GET_COLLATION	ports/greenplum/dbconnector/Compatibility.hpp	21;"	d
PG_GET_COLLATION	ports/postgres/dbconnector/Compatibility.hpp	39;"	d
PG_PORT_H	ports/postgres/dbconnector/dbconnector.hpp	21;"	d
Parser	madpack/yaml/parser.py	/^class Parser(object):$/;"	c
ParserError	madpack/yaml/parser.py	/^class ParserError(MarkedYAMLError):$/;"	c
PermutationMatrix	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::PermutationMatrix<Eigen::Dynamic, Eigen::Dynamic, Index> PermutationMatrix;$/;"	t	namespace:madlib::dbal::eigen_integration
Pointer	ports/postgres/dbconnector/UDF_proto.hpp	/^    typedef AnyType (*Pointer)(AnyType&);$/;"	t	class:madlib::dbconnector::postgres::UDF
Poisson	modules/glm/family.hpp	/^class Poisson {$/;"	c	namespace:madlib::modules::glm
PositiveDomainCheck	modules/prob/boost.hpp	/^struct PositiveDomainCheck : public RealDomainCheck<Distribution> {$/;"	s	namespace:madlib::modules::prob::__anon12
ProbFnOverride	modules/prob/boost.hpp	/^enum ProbFnOverride {$/;"	g	namespace:madlib::modules::prob::__anon12
Probit	modules/glm/link.hpp	/^class Probit$/;"	c	namespace:madlib::modules::glm
Qfn	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble Qfn; \/\/ the Q function value in backtracking$/;"	m	class:madlib::modules::elastic_net::FistaState
RBCoxPHTransitionState	modules/stats/robust_variance_coxph.cpp	/^    RBCoxPHTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::RBCoxPHTransitionState
RBCoxPHTransitionState	modules/stats/robust_variance_coxph.cpp	/^class RBCoxPHTransitionState {$/;"	c	namespace:madlib::modules::stats	file:
RBHSTransitionState	modules/stats/robust_variance_coxph.cpp	/^    RBHSTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::RBHSTransitionState
RBHSTransitionState	modules/stats/robust_variance_coxph.cpp	/^class RBHSTransitionState {$/;"	c	namespace:madlib::modules::stats	file:
REGRESS_N_STATS	modules/recursive_partitioning/DT_proto.hpp	/^const uint16_t REGRESS_N_STATS = 4u;$/;"	m	namespace:madlib::modules::recursive_partitioning
RELU	modules/convex/task/mlp.hpp	/^    const static int RELU = 0;$/;"	m	class:madlib::modules::convex::MLP
REMAINDER	madpack/argparse.py	/^REMAINDER = '...'$/;"	v
RMSE	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToDouble RMSE;$/;"	m	struct:madlib::modules::convex::LMFIGDState::TaskState
RawDescriptionHelpFormatter	madpack/argparse.py	/^class RawDescriptionHelpFormatter(HelpFormatter):$/;"	c
RawTextHelpFormatter	madpack/argparse.py	/^class RawTextHelpFormatter(RawDescriptionHelpFormatter):$/;"	c
Reader	madpack/yaml/reader.py	/^class Reader(object):$/;"	c
ReaderError	madpack/yaml/reader.py	/^class ReaderError(YAMLError):$/;"	c
RealDomainCheck	modules/prob/boost.hpp	/^struct RealDomainCheck {$/;"	s	namespace:madlib::modules::prob::__anon12
RealType	modules/prob/boost.hpp	/^    typedef typename Base::RealType RealType;$/;"	t	struct:madlib::modules::prob::__anon12::IntegerDomainCheck
RealType	modules/prob/boost.hpp	/^    typedef typename Base::RealType RealType;$/;"	t	struct:madlib::modules::prob::__anon12::NonNegativeIntegerDomainCheck
RealType	modules/prob/boost.hpp	/^    typedef typename Base::RealType RealType;$/;"	t	struct:madlib::modules::prob::__anon12::PositiveDomainCheck
RealType	modules/prob/boost.hpp	/^    typedef typename Base::RealType RealType;$/;"	t	struct:madlib::modules::prob::__anon12::ZeroOneDomainCheck
RealType	modules/prob/boost.hpp	/^    typedef typename Distribution::value_type RealType;$/;"	t	struct:madlib::modules::prob::__anon12::DomainCheck
RealType	modules/prob/boost.hpp	/^    typedef typename Distribution::value_type RealType;$/;"	t	struct:madlib::modules::prob::__anon12::RealDomainCheck
RealVectorType	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp	/^    typedef typename Base::RealVectorType RealVectorType;$/;"	t	class:madlib::dbal::eigen_integration::SymmetricPositiveDefiniteEigenDecomposition
ReallocateMemory	ports/postgres/dbconnector/Allocator_proto.hpp	/^    enum ReallocateMemory {$/;"	g	class:madlib::dbconnector::postgres::Allocator
Reallocation	ports/postgres/dbconnector/Allocator_proto.hpp	/^        Reallocation$/;"	e	enum:madlib::dbconnector::postgres::Allocator::ReallocateMemory
Ref	dbal/Reference_impl.hpp	/^Ref<T, IsMutable>::Ref()$/;"	f	class:madlib::dbal::Ref
Ref	dbal/Reference_impl.hpp	/^Ref<T, IsMutable>::Ref(val_type* inPtr)$/;"	f	class:madlib::dbal::Ref
Ref	dbal/Reference_impl.hpp	/^Ref<T, true>::Ref() : Base() { }$/;"	f	class:madlib::dbal::Ref
Ref	dbal/Reference_impl.hpp	/^Ref<T, true>::Ref(val_type* inPtr) : Base(inPtr) { }$/;"	f	class:madlib::dbal::Ref
Ref	dbal/Reference_proto.hpp	/^class Ref {$/;"	c	namespace:madlib::dbal
Ref	dbal/Reference_proto.hpp	/^class Ref<T, true \/* IsMutable *\/>$/;"	c	namespace:madlib::dbal
Reference	utils/Reference.hpp	/^    Reference() : mPtr(NULL) { }$/;"	f	class:madlib::utils::Reference
Reference	utils/Reference.hpp	/^    Reference(const T *inPtr) : mPtr(const_cast<T*>(inPtr)) { }$/;"	f	class:madlib::utils::Reference
Reference	utils/Reference.hpp	/^class Reference {$/;"	c	namespace:madlib::utils
ReferenceToBool	modules/shared/HandleTraits.hpp	/^    typedef utils::MutableReference<double, bool> ReferenceToBool;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToBool	modules/shared/HandleTraits.hpp	/^    typedef utils::Reference<double, bool> ReferenceToBool;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToDouble	modules/shared/HandleTraits.hpp	/^    typedef utils::MutableReference<double> ReferenceToDouble;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToDouble	modules/shared/HandleTraits.hpp	/^    typedef utils::Reference<double> ReferenceToDouble;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToInt32	modules/shared/HandleTraits.hpp	/^    typedef utils::MutableReference<double, int32_t> ReferenceToInt32;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToInt32	modules/shared/HandleTraits.hpp	/^    typedef utils::Reference<double, int32_t> ReferenceToInt32;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToInt64	modules/shared/HandleTraits.hpp	/^    typedef utils::MutableReference<double, int64_t> ReferenceToInt64;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToInt64	modules/shared/HandleTraits.hpp	/^    typedef utils::Reference<double, int64_t> ReferenceToInt64;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToUInt16	modules/shared/HandleTraits.hpp	/^    typedef utils::MutableReference<double, uint16_t> ReferenceToUInt16;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToUInt16	modules/shared/HandleTraits.hpp	/^    typedef utils::Reference<double, uint16_t> ReferenceToUInt16;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToUInt32	modules/shared/HandleTraits.hpp	/^    typedef utils::MutableReference<double, uint32_t> ReferenceToUInt32;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToUInt32	modules/shared/HandleTraits.hpp	/^    typedef utils::Reference<double, uint32_t> ReferenceToUInt32;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToUInt64	modules/shared/HandleTraits.hpp	/^    typedef utils::MutableReference<double, uint64_t> ReferenceToUInt64;$/;"	t	struct:madlib::modules::HandleTraits
ReferenceToUInt64	modules/shared/HandleTraits.hpp	/^    typedef utils::Reference<double, uint64_t> ReferenceToUInt64;$/;"	t	struct:madlib::modules::HandleTraits
Representer	madpack/yaml/representer.py	/^class Representer(SafeRepresenter):$/;"	c
RepresenterError	madpack/yaml/representer.py	/^class RepresenterError(YAMLError):$/;"	c
ResidualState	modules/linear_systems/dense_linear_systems_states.hpp	/^class ResidualState: public DynamicStruct<ResidualState<Container>, Container>{$/;"	c	namespace:madlib::modules::linear_systems
ResidualState	modules/linear_systems/dense_linear_systems_states.hpp	/^inline ResidualState<Container>::ResidualState (Init_type& inInitialization) :$/;"	f	class:madlib::modules::linear_systems::ResidualState
ResidualState	modules/linear_systems/sparse_linear_systems_states.hpp	/^class ResidualState: public DynamicStruct<ResidualState<Container>, Container>{$/;"	c	namespace:madlib::modules::linear_systems
ResidualState	modules/linear_systems/sparse_linear_systems_states.hpp	/^inline ResidualState<Container>::ResidualState (Init_type& inInitialization) :$/;"	f	class:madlib::modules::linear_systems::ResidualState
Resolver	madpack/yaml/resolver.py	/^class Resolver(BaseResolver):$/;"	c
ResolverError	madpack/yaml/resolver.py	/^class ResolverError(YAMLError):$/;"	c
ReturnComposite	ports/postgres/dbconnector/AnyType_proto.hpp	/^        ReturnComposite$/;"	e	enum:madlib::dbconnector::postgres::AnyType::ContentType
ReturnNULL	dbal/dbal_proto.hpp	/^    ReturnNULL,$/;"	e	enum:madlib::dbal::OnMemoryAllocationFailure
RevTest	madpack/utilities.py	/^class RevTest(unittest.TestCase):$/;"	c
ReverseLexicographicComparator	modules/linalg/metric.cpp	/^struct ReverseLexicographicComparator {$/;"	s	namespace:madlib::modules::linalg::__anon15	file:
RobustLinRegrState	modules/regress/linear.cpp	/^typedef RobustLinearRegressionAccumulator<RootContainer> RobustLinRegrState;$/;"	t	namespace:madlib::modules::regress	file:
RobustLinearRegression	modules/regress/LinearRegression_impl.hpp	/^RobustLinearRegression::RobustLinearRegression($/;"	f	class:madlib::modules::regress::RobustLinearRegression
RobustLinearRegression	modules/regress/LinearRegression_proto.hpp	/^class RobustLinearRegression {$/;"	c	namespace:madlib::modules::regress
RobustLinearRegressionAccumulator	modules/regress/LinearRegression_impl.hpp	/^RobustLinearRegressionAccumulator<Container>::RobustLinearRegressionAccumulator($/;"	f	class:madlib::modules::regress::RobustLinearRegressionAccumulator
RobustLinearRegressionAccumulator	modules/regress/LinearRegression_proto.hpp	/^class RobustLinearRegressionAccumulator$/;"	c	namespace:madlib::modules::regress
RobustLogRegrTransitionState	modules/regress/logistic.cpp	/^    RobustLogRegrTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::regress::RobustLogRegrTransitionState
RobustLogRegrTransitionState	modules/regress/logistic.cpp	/^class RobustLogRegrTransitionState {$/;"	c	namespace:madlib::modules::regress	file:
RootContainer	ports/postgres/dbconnector/dbconnector.hpp	/^    ByteString, dbconnector::postgres::TypeTraits> RootContainer;$/;"	t	namespace:madlib
RootContainer_type	dbal/DynamicStruct_proto.hpp	/^    typedef Derived RootContainer_type;$/;"	t	class:madlib::dbal::DynamicStructBase
RootContainer_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename Base::RootContainer_type RootContainer_type;$/;"	t	class:madlib::dbal::DynamicStruct
RootContainer_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename Container_type::RootContainer_type RootContainer_type;$/;"	t	class:madlib::dbal::DynamicStructBase
RowVector	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::RowVectorXd RowVector;$/;"	t	namespace:madlib::dbal::eigen_integration
S	libstemmer/runtime/api.h	/^    symbol * * S;$/;"	m	struct:SN_env
S	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble S;$/;"	m	class:madlib::modules::stats::CoxPHState
S	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble S;$/;"	m	class:madlib::modules::stats::RBHSTransitionState	file:
SET_SIZE	libstemmer/runtime/header.h	12;"	d
SIGMOID	modules/convex/task/mlp.hpp	/^    const static int SIGMOID = 1;$/;"	m	class:madlib::modules::convex::MLP
SIZE	libstemmer/runtime/header.h	11;"	d
SN_close_env	libstemmer/runtime/api.c	/^extern void SN_close_env(struct SN_env * z, int S_size)$/;"	f
SN_create_env	libstemmer/runtime/api.c	/^extern struct SN_env * SN_create_env(int S_size, int I_size, int B_size)$/;"	f
SN_env	libstemmer/runtime/api.h	/^struct SN_env {$/;"	s
SN_set_current	libstemmer/runtime/api.c	/^extern int SN_set_current(struct SN_env * z, int size, const symbol * s)$/;"	f
SPDDecompositionExtras	dbal/EigenIntegration/EigenIntegration.hpp	/^enum SPDDecompositionExtras {$/;"	g	namespace:madlib::dbal::eigen_integration
SRF_init	modules/assoc_rules/assoc_rules.cpp	/^gen_rules_from_cfp::SRF_init(AnyType &args) {$/;"	f	class:madlib::modules::assoc_rules::gen_rules_from_cfp
SRF_init	modules/lda/lda.cpp	/^void * lda_unnest::SRF_init(AnyType &args)$/;"	f	class:madlib::modules::lda::lda_unnest
SRF_init	modules/lda/lda.cpp	/^void * lda_unnest_transpose::SRF_init(AnyType &args)$/;"	f	class:madlib::modules::lda::lda_unnest_transpose
SRF_init	modules/linalg/dim_conversion.cpp	/^deconstruct_2d_array::SRF_init(AnyType &args) {$/;"	f	class:madlib::modules::linalg::deconstruct_2d_array
SRF_init	modules/linalg/dim_conversion.cpp	/^deconstruct_lower_triangle::SRF_init(AnyType &args) {$/;"	f	class:madlib::modules::linalg::deconstruct_lower_triangle
SRF_init	modules/linalg/matrix_ops.cpp	/^void * row_split::SRF_init(AnyType &args)$/;"	f	class:madlib::modules::linalg::row_split
SRF_init	modules/linalg/matrix_ops.cpp	/^void * unnest_block::SRF_init(AnyType &args)$/;"	f	class:madlib::modules::linalg::unnest_block
SRF_init	modules/linalg/svd.cpp	/^void * svd_vec_trans_mult_matrix::SRF_init(AnyType &args){$/;"	f	class:madlib::modules::linalg::svd_vec_trans_mult_matrix
SRF_init	modules/regress/multilogistic.cpp	/^__mlogregr_format::SRF_init(AnyType &args) {$/;"	f	class:madlib::modules::regress::__mlogregr_format
SRF_invoke	ports/postgres/dbconnector/UDF_impl.hpp	/^UDF::SRF_invoke(FunctionCallInfo fcinfo) {$/;"	f	class:madlib::dbconnector::postgres::UDF
SRF_is_firstcall	ports/postgres/dbconnector/UDF_impl.hpp	/^UDF::SRF_is_firstcall(FunctionCallInfo fcinfo){$/;"	f	class:madlib::dbconnector::postgres::UDF
SRF_next	modules/assoc_rules/assoc_rules.cpp	/^gen_rules_from_cfp::SRF_next(void *user_fctx, bool *is_last_call) {$/;"	f	class:madlib::modules::assoc_rules::gen_rules_from_cfp
SRF_next	modules/lda/lda.cpp	/^AnyType lda_unnest::SRF_next(void *user_fctx, bool *is_last_call)$/;"	f	class:madlib::modules::lda::lda_unnest
SRF_next	modules/lda/lda.cpp	/^AnyType lda_unnest_transpose::SRF_next(void *user_fctx, bool *is_last_call)$/;"	f	class:madlib::modules::lda::lda_unnest_transpose
SRF_next	modules/linalg/dim_conversion.cpp	/^deconstruct_2d_array::SRF_next(void *user_fctx, bool *is_last_call) {$/;"	f	class:madlib::modules::linalg::deconstruct_2d_array
SRF_next	modules/linalg/dim_conversion.cpp	/^deconstruct_lower_triangle::SRF_next(void *user_fctx, bool *is_last_call) {$/;"	f	class:madlib::modules::linalg::deconstruct_lower_triangle
SRF_next	modules/linalg/matrix_ops.cpp	/^AnyType row_split::SRF_next(void *user_fctx, bool *is_last_call)$/;"	f	class:madlib::modules::linalg::row_split
SRF_next	modules/linalg/matrix_ops.cpp	/^AnyType unnest_block::SRF_next(void *user_fctx, bool *is_last_call)$/;"	f	class:madlib::modules::linalg::unnest_block
SRF_next	modules/linalg/svd.cpp	/^AnyType svd_vec_trans_mult_matrix::SRF_next(void *user_fctx, bool *is_last_call){$/;"	f	class:madlib::modules::linalg::svd_vec_trans_mult_matrix
SRF_next	modules/regress/multilogistic.cpp	/^__mlogregr_format::SRF_next(void * user_fctx, bool * is_last_call) {$/;"	f	class:madlib::modules::regress::__mlogregr_format
SRF_percall_setup	ports/postgres/dbconnector/UDF_impl.hpp	/^UDF::SRF_percall_setup(FunctionCallInfo fcinfo){$/;"	f	class:madlib::dbconnector::postgres::UDF
SUPPORTED_PORTS	madpack/madpack.py	/^SUPPORTED_PORTS = ('postgres', 'greenplum')$/;"	v
SURR_IS_MAJORITY	modules/recursive_partitioning/DT_proto.hpp	/^    enum { SURR_IS_MAJORITY=-1, SURR_NON_EXISTING=-2 };$/;"	e	enum:madlib::modules::recursive_partitioning::DecisionTree::__anon25
SURR_NON_EXISTING	modules/recursive_partitioning/DT_proto.hpp	/^    enum { SURR_IS_MAJORITY=-1, SURR_NON_EXISTING=-2 };$/;"	e	enum:madlib::modules::recursive_partitioning::DecisionTree::__anon25
SVMModel	modules/convex/type/model.hpp	/^    SVMModel;$/;"	t	namespace:madlib::modules::convex
SafeConstructor	madpack/yaml/constructor.py	/^class SafeConstructor(BaseConstructor):$/;"	c
SafeDumper	madpack/yaml/dumper.py	/^class SafeDumper(Emitter, Serializer, SafeRepresenter, Resolver):$/;"	c
SafeLoader	madpack/yaml/loader.py	/^class SafeLoader(Reader, Scanner, Parser, Composer, SafeConstructor, Resolver):$/;"	c
SafeRepresenter	madpack/yaml/representer.py	/^class SafeRepresenter(BaseRepresenter):$/;"	c
Scalar	dbal/EigenIntegration/HandleMap_proto.hpp	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:madlib::dbal::eigen_integration::HandleMap
Scalar	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:madlib::dbal::eigen_integration::SymmetricPositiveDefiniteEigenDecomposition
Scalar	ports/postgres/dbconnector/AnyType_proto.hpp	/^        Scalar,$/;"	e	enum:madlib::dbconnector::postgres::AnyType::ContentType
ScalarAnalysis	madpack/yaml/emitter.py	/^class ScalarAnalysis(object):$/;"	c
ScalarEvent	madpack/yaml/events.py	/^class ScalarEvent(NodeEvent):$/;"	c
ScalarNode	madpack/yaml/nodes.py	/^class ScalarNode(Node):$/;"	c
ScalarToken	madpack/yaml/tokens.py	/^class ScalarToken(Token):$/;"	c
ScalesState	modules/convex/utils_regularization.cpp	/^    ScalesState (const AnyType& inArray):$/;"	f	class:madlib::modules::convex::ScalesState
ScalesState	modules/convex/utils_regularization.cpp	/^class ScalesState$/;"	c	namespace:madlib::modules::convex	file:
Scanner	madpack/yaml/scanner.py	/^class Scanner(object):$/;"	c
ScannerError	madpack/yaml/scanner.py	/^class ScannerError(MarkedYAMLError):$/;"	c
ScriptCleaner	madpack/upgrade_util.py	/^class ScriptCleaner(UpgradeBase):$/;"	c
SearchSysCache1	ports/greenplum/dbconnector/Compatibility.hpp	26;"	d
SearchSysCache1	ports/postgres/dbconnector/Compatibility.hpp	44;"	d
SequenceEndEvent	madpack/yaml/events.py	/^class SequenceEndEvent(CollectionEndEvent):$/;"	c
SequenceNode	madpack/yaml/nodes.py	/^class SequenceNode(CollectionNode):$/;"	c
SequenceStartEvent	madpack/yaml/events.py	/^class SequenceStartEvent(CollectionStartEvent):$/;"	c
Serializer	madpack/yaml/serializer.py	/^class Serializer(object):$/;"	c
SerializerError	madpack/yaml/serializer.py	/^class SerializerError(YAMLError):$/;"	c
SimpleKey	madpack/yaml/scanner.py	/^class SimpleKey(object):$/;"	c
SimpleType	dbal/dbal_proto.hpp	/^    SimpleType,$/;"	e	enum:madlib::dbal::TypeClass
SparseColumnVector	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::SparseVector<double> SparseColumnVector;$/;"	t	namespace:madlib::dbal::eigen_integration
SparseColumnVectorToLegacySparseVector	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^SparseColumnVectorToLegacySparseVector($/;"	f	namespace:madlib::dbconnector::postgres
SparseDirectLinearSystemTransitionState	modules/linear_systems/sparse_linear_systems.cpp	/^    SparseDirectLinearSystemTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState
SparseDirectLinearSystemTransitionState	modules/linear_systems/sparse_linear_systems.cpp	/^class SparseDirectLinearSystemTransitionState {$/;"	c	namespace:madlib::modules::linear_systems	file:
SparseInMemIterativeLinearSystemTransitionState	modules/linear_systems/sparse_linear_systems.cpp	/^    SparseInMemIterativeLinearSystemTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState
SparseInMemIterativeLinearSystemTransitionState	modules/linear_systems/sparse_linear_systems.cpp	/^class SparseInMemIterativeLinearSystemTransitionState {$/;"	c	namespace:madlib::modules::linear_systems	file:
SparseMatrix	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::SparseMatrix<double> SparseMatrix;$/;"	t	namespace:madlib::dbal::eigen_integration
SqrInverse	modules/glm/link.hpp	/^class SqrInverse {$/;"	c	namespace:madlib::modules::glm
Sqrt	modules/glm/link.hpp	/^class Sqrt {$/;"	c	namespace:madlib::modules::glm
Storage_type	dbal/ByteStreamHandleBuf_proto.hpp	/^    typedef Storage Storage_type;$/;"	t	class:madlib::dbal::ByteStreamHandleBuf
Storage_type	dbal/ByteStreamHandleBuf_proto.hpp	/^    typedef typename Base::Storage_type Storage_type;$/;"	t	class:madlib::dbal::ByteStreamHandleBuf
Storage_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename Base::Storage_type Storage_type;$/;"	t	class:madlib::dbal::DynamicStruct
Storage_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename Container_type::Storage_type Storage_type;$/;"	t	class:madlib::dbal::DynamicStructBase
Storage_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename StreamBuf_type::Storage_type Storage_type;$/;"	t	class:madlib::dbal::DynamicStructRootContainer
StreamBuf_type	dbal/ByteStream_proto.hpp	/^    typedef StreamBuf StreamBuf_type;$/;"	t	class:madlib::dbal::ByteStream
StreamBuf_type	dbal/ByteStream_proto.hpp	/^    typedef typename Base::StreamBuf_type StreamBuf_type;$/;"	t	class:madlib::dbal::ByteStream
StreamBuf_type	dbal/DynamicStruct_proto.hpp	/^    typedef ByteStreamHandleBuf<Storage> StreamBuf_type;$/;"	t	class:madlib::dbal::DynamicStructRootContainer
StreamEndEvent	madpack/yaml/events.py	/^class StreamEndEvent(Event):$/;"	c
StreamEndToken	madpack/yaml/tokens.py	/^class StreamEndToken(Token):$/;"	c
StreamStartEvent	madpack/yaml/events.py	/^class StreamStartEvent(Event):$/;"	c
StreamStartToken	madpack/yaml/tokens.py	/^class StreamStartToken(Token):$/;"	c
StrictlyLower	dbal/EigenIntegration/EigenIntegration.hpp	/^    StrictlyLower = Eigen::StrictlyLower$/;"	e	enum:madlib::dbal::eigen_integration::ViewMode
StringIO	madpack/yaml/__init__.py	/^            from StringIO import StringIO$/;"	i
StringIO	madpack/yaml/__init__.py	/^            from cStringIO import StringIO$/;"	i
SubTreeInfo	modules/recursive_partitioning/decision_tree.cpp	/^    SubTreeInfo(int i, int n, double r, double s, double c):$/;"	f	struct:madlib::modules::recursive_partitioning::SubTreeInfo
SubTreeInfo	modules/recursive_partitioning/decision_tree.cpp	/^struct SubTreeInfo {$/;"	s	namespace:madlib::modules::recursive_partitioning	file:
SymmetricPositiveDefiniteEigenDecomposition	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp	/^    ::SymmetricPositiveDefiniteEigenDecomposition($/;"	f	class:madlib::dbal::eigen_integration::SymmetricPositiveDefiniteEigenDecomposition
SymmetricPositiveDefiniteEigenDecomposition	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp	/^class SymmetricPositiveDefiniteEigenDecomposition$/;"	c	namespace:madlib::dbal::eigen_integration
SystemInformation	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^struct SystemInformation {$/;"	s	namespace:madlib::dbconnector::postgres
TANH	modules/convex/task/mlp.hpp	/^    const static int TANH = 2;$/;"	m	class:madlib::modules::convex::MLP
TERMINATED	modules/recursive_partitioning/decision_tree.cpp	/^enum { NOT_FINISHED=0, FINISHED, TERMINATED };$/;"	e	enum:madlib::modules::recursive_partitioning::__anon21	file:
TERMINATED	modules/regress/logistic.cpp	/^enum { IN_PROCESS, COMPLETED, TERMINATED, NULL_EMPTY };$/;"	e	enum:madlib::modules::regress::__anon16	file:
TTestTransitionState	modules/stats/t_test.cpp	/^    TTestTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::TTestTransitionState
TTestTransitionState	modules/stats/t_test.cpp	/^class TTestTransitionState {$/;"	c	namespace:madlib::modules::stats	file:
TableDependency	madpack/upgrade_util.py	/^class TableDependency(UpgradeBase):$/;"	c
TagToken	madpack/yaml/tokens.py	/^class TagToken(Token):$/;"	c
TaskState	modules/convex/type/state.hpp	/^    struct TaskState {$/;"	s	class:madlib::modules::convex::GLMCGState
TaskState	modules/convex/type/state.hpp	/^    struct TaskState {$/;"	s	class:madlib::modules::convex::GLMIGDState
TaskState	modules/convex/type/state.hpp	/^    struct TaskState {$/;"	s	class:madlib::modules::convex::GLMNewtonState
TaskState	modules/convex/type/state.hpp	/^    struct TaskState {$/;"	s	class:madlib::modules::convex::LMFIGDState
TaskState	modules/convex/type/state.hpp	/^    struct TaskState {$/;"	s	class:madlib::modules::convex::MLPIGDState
TestChangeHandler	madpack/upgrade_util.py	/^class TestChangeHandler(unittest.TestCase):$/;"	c
ThrowBadAlloc	dbal/dbal_proto.hpp	/^    ThrowBadAlloc$/;"	e	enum:madlib::dbal::OnMemoryAllocationFailure
Token	madpack/yaml/tokens.py	/^class Token(object):$/;"	c
TransparentColumnVector	modules/convex/type/state.hpp	/^        TransparentColumnVector;$/;"	t	class:madlib::modules::convex::GLMCGState
TransparentHandle	ports/postgres/dbconnector/TransparentHandle_impl.hpp	/^TransparentHandle<T, IsMutable>::TransparentHandle(val_type* inPtr)$/;"	f	class:madlib::dbconnector::postgres::TransparentHandle
TransparentHandle	ports/postgres/dbconnector/TransparentHandle_impl.hpp	/^TransparentHandle<T, dbal::Mutable>::TransparentHandle(val_type* inPtr)$/;"	f	class:madlib::dbconnector::postgres::TransparentHandle
TransparentHandle	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^class TransparentHandle {$/;"	c	namespace:madlib::dbconnector::postgres
TransparentHandle	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^class TransparentHandle<T, dbal::Mutable>$/;"	c	namespace:madlib::dbconnector::postgres
Tree	modules/recursive_partitioning/decision_tree.cpp	/^typedef DecisionTree<RootContainer> Tree;$/;"	t	namespace:madlib::modules::recursive_partitioning	file:
Tree	modules/recursive_partitioning/random_forest.cpp	/^typedef DecisionTree<RootContainer> Tree;$/;"	t	namespace:madlib::modules::recursive_partitioning	file:
TreeAccumulator	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::TreeAccumulator($/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
TreeAccumulator	modules/recursive_partitioning/DT_proto.hpp	/^class TreeAccumulator$/;"	c	namespace:madlib::modules::recursive_partitioning
TypeClass	dbal/dbal_proto.hpp	/^enum TypeClass {$/;"	g	namespace:madlib::dbal
TypeInformation	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^struct TypeInformation {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<ArrayHandle<double> > {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<ArrayHandle<int32_t> >$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<ArrayHandle<int64_t> >$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<ArrayHandle<text*> > {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<ByteString> : public TypeTraitsBase<ByteString> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<Eigen::MatrixBase<Derived> > {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<FunctionHandle> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<MutableArrayHandle<double> > {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<MutableArrayHandle<int32_t> >$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<MutableArrayHandle<int64_t> >$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<MutableByteString> : public TypeTraitsBase<MutableByteString> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<bool> : public TypeTraitsBase<bool> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<char*> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<dbal::ByteStreamMaximumAlignmentType>$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<dbal::eigen_integration::ColumnVector>$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<dbal::eigen_integration::IntegerVector>$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<dbal::eigen_integration::Matrix>$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<dbal::eigen_integration::SparseColumnVector> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<double> : public TypeTraitsBase<double> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<float>{$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<int16_t> : public TypeTraitsBase<int16_t> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<int32_t> : public TypeTraitsBase<int32_t> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<int64_t> : public TypeTraitsBase<int64_t> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<std::string> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<uint16_t> : public TypeTraitsBase<uint16_t> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<uint32_t> : public TypeTraitsBase<uint32_t> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraits	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraits<uint64_t> : public TypeTraitsBase<uint64_t> {$/;"	s	namespace:madlib::dbconnector::postgres
TypeTraitsBase	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^struct TypeTraitsBase {$/;"	s	namespace:madlib::dbconnector::postgres
UDF	ports/postgres/dbconnector/UDF_proto.hpp	/^    UDF() { }$/;"	f	class:madlib::dbconnector::postgres::UDF
UDF	ports/postgres/dbconnector/UDF_proto.hpp	/^class UDF : public Allocator {$/;"	c	namespace:madlib::dbconnector::postgres
UNIT_TEST	madpack/madpack.py	/^UNIT_TEST = "unit_test"$/;"	v
UpgradeBase	madpack/upgrade_util.py	/^class UpgradeBase:$/;"	c
Upper	dbal/EigenIntegration/EigenIntegration.hpp	/^    Upper = Eigen::Upper,$/;"	e	enum:madlib::dbal::eigen_integration::ViewMode
V	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap V;$/;"	m	class:madlib::modules::stats::CoxPHState
VARHDRSZ	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^                                       VARSIZE_ANY(value) - VARHDRSZ));$/;"	m	struct:madlib::dbconnector::postgres::TypeTraits
ValueToken	madpack/yaml/tokens.py	/^class ValueToken(Token):$/;"	c
VectorToNativeArray	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^VectorToNativeArray(const Eigen::MatrixBase<Derived>& inVector) {$/;"	f	namespace:madlib::dbconnector::postgres
VectorXcd	dbal/EigenIntegration/EigenIntegration.hpp	/^typedef Eigen::VectorXcd VectorXcd;$/;"	t	namespace:madlib::dbal::eigen_integration
VectorXcdToNativeArray	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^VectorXcdToNativeArray(const Eigen::MatrixBase<Derived>& inMatrix) {$/;"	f	namespace:madlib::dbconnector::postgres
ViewDependency	madpack/upgrade_util.py	/^class ViewDependency(UpgradeBase):$/;"	c
ViewMode	dbal/EigenIntegration/EigenIntegration.hpp	/^enum ViewMode {$/;"	g	namespace:madlib::dbal::eigen_integration
WITHOUT_OID	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    WITHOUT_OID;$/;"	m	struct:madlib::dbconnector::postgres::TypeTraits
WITHOUT_OID	ports/postgres/dbconnector/TypeTraits_impl.hpp	54;"	d
WITHOUT_OID	ports/postgres/dbconnector/TypeTraits_impl.hpp	763;"	d
WITHOUT_SYSINFO	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    WITHOUT_SYSINFO;$/;"	m	struct:madlib::dbconnector::postgres::TypeTraits
WITHOUT_SYSINFO	ports/postgres/dbconnector/TypeTraits_impl.hpp	768;"	d
WITHOUT_SYSINFO	ports/postgres/dbconnector/TypeTraits_impl.hpp	78;"	d
WITHOUT_TYPE_NAME	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    WITHOUT_TYPE_NAME;$/;"	m	struct:madlib::dbconnector::postgres::TypeTraits
WITHOUT_TYPE_NAME	ports/postgres/dbconnector/TypeTraits_impl.hpp	67;"	d
WITHOUT_TYPE_NAME	ports/postgres/dbconnector/TypeTraits_impl.hpp	766;"	d
WITH_BIND_TO_STREAM	ports/postgres/dbconnector/TypeTraits_impl.hpp	103;"	d
WITH_DEFAULT_EXTENDED_TRAITS	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    WITH_DEFAULT_EXTENDED_TRAITS;$/;"	m	struct:madlib::dbconnector::postgres::TypeTraits
WITH_DEFAULT_EXTENDED_TRAITS	ports/postgres/dbconnector/TypeTraits_impl.hpp	769;"	d
WITH_DEFAULT_EXTENDED_TRAITS	ports/postgres/dbconnector/TypeTraits_impl.hpp	82;"	d
WITH_MUTABILITY	ports/postgres/dbconnector/TypeTraits_impl.hpp	767;"	d
WITH_MUTABILITY	ports/postgres/dbconnector/TypeTraits_impl.hpp	76;"	d
WITH_OID	ports/postgres/dbconnector/TypeTraits_impl.hpp	47;"	d
WITH_OID	ports/postgres/dbconnector/TypeTraits_impl.hpp	762;"	d
WITH_SYS_INFO_CONVERSION	ports/postgres/dbconnector/TypeTraits_impl.hpp	770;"	d
WITH_SYS_INFO_CONVERSION	ports/postgres/dbconnector/TypeTraits_impl.hpp	85;"	d
WITH_TO_CXX_CONVERSION	ports/postgres/dbconnector/TypeTraits_impl.hpp	772;"	d
WITH_TO_CXX_CONVERSION	ports/postgres/dbconnector/TypeTraits_impl.hpp	94;"	d
WITH_TO_PG_CONVERSION	ports/postgres/dbconnector/TypeTraits_impl.hpp	771;"	d
WITH_TO_PG_CONVERSION	ports/postgres/dbconnector/TypeTraits_impl.hpp	90;"	d
WITH_TYPE_CLASS	ports/postgres/dbconnector/TypeTraits_impl.hpp	56;"	d
WITH_TYPE_CLASS	ports/postgres/dbconnector/TypeTraits_impl.hpp	764;"	d
WITH_TYPE_NAME	ports/postgres/dbconnector/TypeTraits_impl.hpp	58;"	d
WITH_TYPE_NAME	ports/postgres/dbconnector/TypeTraits_impl.hpp	765;"	d
WSRTestTransitionState	modules/stats/wilcoxon_signed_rank_test.cpp	/^    WSRTestTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::stats::WSRTestTransitionState
WSRTestTransitionState	modules/stats/wilcoxon_signed_rank_test.cpp	/^class WSRTestTransitionState {$/;"	c	namespace:madlib::modules::stats	file:
WeightedSampleAccumulator	modules/sample/WeightedSample_impl.hpp	/^WeightedSampleAccumulator<Container, T>::WeightedSampleAccumulator($/;"	f	class:madlib::modules::sample::WeightedSampleAccumulator
WeightedSampleAccumulator	modules/sample/WeightedSample_proto.hpp	/^class WeightedSampleAccumulator$/;"	c	namespace:madlib::modules::sample
WeightedSampleColVecState	modules/sample/weighted_sample.cpp	/^    WeightedSampleColVecState;$/;"	t	namespace:madlib::modules::sample	file:
WeightedSampleHeader	modules/sample/WeightedSample_proto.hpp	/^struct WeightedSampleHeader { };$/;"	s	namespace:madlib::modules::sample
WeightedSampleHeader	modules/sample/WeightedSample_proto.hpp	/^struct WeightedSampleHeader<MappedColumnVector, IsMutable> {$/;"	s	namespace:madlib::modules::sample
WeightedSampleInt64State	modules/sample/weighted_sample.cpp	/^    WeightedSampleInt64State;$/;"	t	namespace:madlib::modules::sample	file:
X_bar	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap X_bar;$/;"	m	class:madlib::modules::regress::MarginalLogRegrTransitionState	file:
X_bar	modules/regress/mlogr_margins.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap X_bar;$/;"	m	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
X_transp_A	modules/regress/LinearRegression_proto.hpp	/^    ColumnVector_type X_transp_A;$/;"	m	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
X_transp_AX	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap X_transp_AX;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
X_transp_AX	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap X_transp_AX;$/;"	m	class:madlib::modules::regress::LogRegrIGDTransitionState	file:
X_transp_AX	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap X_transp_AX;$/;"	m	class:madlib::modules::regress::LogRegrIRLSTransitionState	file:
X_transp_AX	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap X_transp_AX;$/;"	m	class:madlib::modules::regress::MarginalLogRegrTransitionState	file:
X_transp_AX	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap X_transp_AX;$/;"	m	class:madlib::modules::regress::RobustLogRegrTransitionState	file:
X_transp_AX	modules/regress/mlogr_margins.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap X_transp_AX;$/;"	m	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
X_transp_AX	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap X_transp_AX;$/;"	m	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
X_transp_AX	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap X_transp_AX;$/;"	m	class:madlib::modules::regress::MLogRegrRobustTransitionState	file:
X_transp_Az	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap X_transp_Az;$/;"	m	class:madlib::modules::regress::LogRegrIRLSTransitionState	file:
X_transp_X	modules/regress/LinearRegression_proto.hpp	/^    Matrix_type X_transp_X;$/;"	m	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
X_transp_X	modules/regress/LinearRegression_proto.hpp	/^    Matrix_type X_transp_X;$/;"	m	class:madlib::modules::regress::LinearRegressionAccumulator
X_transp_X	modules/regress/LinearRegression_proto.hpp	/^    Matrix_type X_transp_X;$/;"	m	class:madlib::modules::regress::RobustLinearRegressionAccumulator
X_transp_Y	modules/regress/LinearRegression_proto.hpp	/^    ColumnVector_type X_transp_Y;$/;"	m	class:madlib::modules::regress::LinearRegressionAccumulator
X_transp_r2_X	modules/regress/LinearRegression_proto.hpp	/^    Matrix_type X_transp_r2_X;$/;"	m	class:madlib::modules::regress::RobustLinearRegressionAccumulator
YAMLError	madpack/yaml/emitter.py	/^from error import YAMLError$/;"	i
YAMLError	madpack/yaml/error.py	/^class YAMLError(Exception):$/;"	c
YAMLError	madpack/yaml/reader.py	/^from error import YAMLError, Mark$/;"	i
YAMLError	madpack/yaml/serializer.py	/^from error import YAMLError$/;"	i
YAMLObject	madpack/yaml/__init__.py	/^class YAMLObject(object):$/;"	c
YAMLObjectMetaclass	madpack/yaml/__init__.py	/^class YAMLObjectMetaclass(type):$/;"	c
ZERO_OR_MORE	madpack/argparse.py	/^ZERO_OR_MORE = '*'$/;"	v
ZERO_THRESHOLD	modules/linalg/svd.cpp	/^const double ZERO_THRESHOLD = 1e-8;$/;"	m	namespace:madlib::modules::linalg	file:
ZeroMemory	dbal/dbal_proto.hpp	/^enum ZeroMemory {$/;"	g	namespace:madlib::dbal
ZeroOneDomainCheck	modules/prob/boost.hpp	/^struct ZeroOneDomainCheck : public PositiveDomainCheck<Distribution> {$/;"	s	namespace:madlib::modules::prob::__anon12
_	madpack/argparse.py	/^from gettext import gettext as _$/;"	i
_ActionsContainer	madpack/argparse.py	/^class _ActionsContainer(object):$/;"	c
_AppendAction	madpack/argparse.py	/^class _AppendAction(Action):$/;"	c
_AppendConstAction	madpack/argparse.py	/^class _AppendConstAction(Action):$/;"	c
_ArgumentGroup	madpack/argparse.py	/^class _ArgumentGroup(_ActionsContainer):$/;"	c
_AttributeHolder	madpack/argparse.py	/^class _AttributeHolder(object):$/;"	c
_ChoicesPseudoAction	madpack/argparse.py	/^    class _ChoicesPseudoAction(Action):$/;"	c	class:_SubParsersAction
_CountAction	madpack/argparse.py	/^class _CountAction(Action):$/;"	c
_GLIBCXX_USE_NOEXCEPT	utils/libstdcxx-compatibility.cpp	35;"	d	file:
_HelpAction	madpack/argparse.py	/^class _HelpAction(Action):$/;"	c
_M_widen_init	utils/libstdcxx-compatibility.cpp	/^ctype<char>::_M_widen_init() const {$/;"	f	class:std::ctype
_MutuallyExclusiveGroup	madpack/argparse.py	/^class _MutuallyExclusiveGroup(_ArgumentGroup):$/;"	c
_Section	madpack/argparse.py	/^    class _Section(object):$/;"	c	class:HelpFormatter
_StoreAction	madpack/argparse.py	/^class _StoreAction(Action):$/;"	c
_StoreConstAction	madpack/argparse.py	/^class _StoreConstAction(Action):$/;"	c
_StoreFalseAction	madpack/argparse.py	/^class _StoreFalseAction(_StoreConstAction):$/;"	c
_StoreTrueAction	madpack/argparse.py	/^class _StoreTrueAction(_StoreConstAction):$/;"	c
_SubParsersAction	madpack/argparse.py	/^class _SubParsersAction(Action):$/;"	c
_UNRECOGNIZED_ARGS_ATTR	madpack/argparse.py	/^_UNRECOGNIZED_ARGS_ATTR = '_unrecognized_args'$/;"	v
_VersionAction	madpack/argparse.py	/^class _VersionAction(Action):$/;"	c
__all__	madpack/argparse.py	/^__all__ = [$/;"	v
__all__	madpack/yaml/composer.py	/^__all__ = ['Composer', 'ComposerError']$/;"	v
__all__	madpack/yaml/constructor.py	/^__all__ = ['BaseConstructor', 'SafeConstructor', 'Constructor',$/;"	v
__all__	madpack/yaml/cyaml.py	/^__all__ = ['CBaseLoader', 'CSafeLoader', 'CLoader',$/;"	v
__all__	madpack/yaml/dumper.py	/^__all__ = ['BaseDumper', 'SafeDumper', 'Dumper']$/;"	v
__all__	madpack/yaml/emitter.py	/^__all__ = ['Emitter', 'EmitterError']$/;"	v
__all__	madpack/yaml/error.py	/^__all__ = ['Mark', 'YAMLError', 'MarkedYAMLError']$/;"	v
__all__	madpack/yaml/loader.py	/^__all__ = ['BaseLoader', 'SafeLoader', 'Loader']$/;"	v
__all__	madpack/yaml/parser.py	/^__all__ = ['Parser', 'ParserError']$/;"	v
__all__	madpack/yaml/reader.py	/^__all__ = ['Reader', 'ReaderError']$/;"	v
__all__	madpack/yaml/representer.py	/^__all__ = ['BaseRepresenter', 'SafeRepresenter', 'Representer',$/;"	v
__all__	madpack/yaml/resolver.py	/^__all__ = ['BaseResolver', 'Resolver']$/;"	v
__all__	madpack/yaml/scanner.py	/^__all__ = ['Scanner', 'ScannerError']$/;"	v
__all__	madpack/yaml/serializer.py	/^__all__ = ['Serializer', 'SerializerError']$/;"	v
__call__	madpack/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:Action	file:
__call__	madpack/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_AppendAction	file:
__call__	madpack/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_AppendConstAction	file:
__call__	madpack/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_CountAction	file:
__call__	madpack/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_HelpAction	file:
__call__	madpack/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_StoreAction	file:
__call__	madpack/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_StoreConstAction	file:
__call__	madpack/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_SubParsersAction	file:
__call__	madpack/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_VersionAction	file:
__call__	madpack/argparse.py	/^    def __call__(self, string):$/;"	m	class:FileType	file:
__clustered_common_final	modules/regress/clustered_errors.cpp	/^AnyType __clustered_common_final (AnyType& args)$/;"	f	namespace:madlib::modules::regress
__clustered_common_merge	modules/regress/clustered_errors.cpp	/^AnyType __clustered_common_merge (AnyType& args)$/;"	f	namespace:madlib::modules::regress
__clustered_common_transition	modules/regress/clustered_errors.cpp	/^AnyType __clustered_common_transition (AnyType& args, string regressionType,$/;"	f	namespace:madlib::modules::regress
__compute_t_stats	modules/regress/clustered_errors.cpp	/^void __compute_t_stats (MutableNativeColumnVector& pValues,$/;"	f	namespace:madlib::modules::regress
__compute_z_stats	modules/regress/clustered_errors.cpp	/^void __compute_z_stats (MutableNativeColumnVector& pValues,$/;"	f	namespace:madlib::modules::regress
__contains__	madpack/argparse.py	/^    def __contains__(self, key):$/;"	m	class:Namespace	file:
__cxxabiv1	utils/libstdcxx-compatibility.cpp	/^namespace __cxxabiv1 {$/;"	n	file:
__eq__	madpack/argparse.py	/^    def __eq__(self, other):$/;"	m	class:Namespace	file:
__hash__	madpack/argparse.py	/^    __hash__ = None$/;"	v	class:Namespace
__init__	madpack/argparse.py	/^        def __init__(self, formatter, parent, heading=None):$/;"	m	class:HelpFormatter._Section
__init__	madpack/argparse.py	/^        def __init__(self, name, help):$/;"	m	class:_SubParsersAction._ChoicesPseudoAction
__init__	madpack/argparse.py	/^    def __init__(self, **kwargs):$/;"	m	class:Namespace
__init__	madpack/argparse.py	/^    def __init__(self, argument, message):$/;"	m	class:ArgumentError
__init__	madpack/argparse.py	/^    def __init__(self, container, required=False):$/;"	m	class:_MutuallyExclusiveGroup
__init__	madpack/argparse.py	/^    def __init__(self, container, title=None, description=None, **kwargs):$/;"	m	class:_ArgumentGroup
__init__	madpack/argparse.py	/^    def __init__(self, mode='r', bufsize=None):$/;"	m	class:FileType
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:Action
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:ArgumentParser
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:HelpFormatter
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:_ActionsContainer
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:_AppendAction
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:_AppendConstAction
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:_CountAction
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:_HelpAction
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreAction
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreConstAction
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreFalseAction
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreTrueAction
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:_SubParsersAction
__init__	madpack/argparse.py	/^    def __init__(self,$/;"	m	class:_VersionAction
__init__	madpack/configyml.py	/^     def __init__(self, value):$/;"	m	class:MadPackConfigError
__init__	madpack/upgrade_util.py	/^    def __init__(self, schema, portid, con_args):$/;"	m	class:TableDependency
__init__	madpack/upgrade_util.py	/^    def __init__(self, schema, portid, con_args):$/;"	m	class:UpgradeBase
__init__	madpack/upgrade_util.py	/^    def __init__(self, schema, portid, con_args):$/;"	m	class:ViewDependency
__init__	madpack/upgrade_util.py	/^    def __init__(self, schema, portid, con_args, change_handler):$/;"	m	class:ScriptCleaner
__init__	madpack/upgrade_util.py	/^    def __init__(self, schema, portid, con_args, maddir, mad_dbrev,$/;"	m	class:ChangeHandler
__init__	madpack/yaml/__init__.py	/^    def __init__(cls, name, bases, kwds):$/;"	m	class:YAMLObjectMetaclass
__init__	madpack/yaml/composer.py	/^    def __init__(self):$/;"	m	class:Composer
__init__	madpack/yaml/constructor.py	/^    def __init__(self):$/;"	m	class:BaseConstructor
__init__	madpack/yaml/cyaml.py	/^    def __init__(self, stream):$/;"	m	class:CBaseLoader
__init__	madpack/yaml/cyaml.py	/^    def __init__(self, stream):$/;"	m	class:CLoader
__init__	madpack/yaml/cyaml.py	/^    def __init__(self, stream):$/;"	m	class:CSafeLoader
__init__	madpack/yaml/cyaml.py	/^    def __init__(self, stream,$/;"	m	class:CBaseDumper
__init__	madpack/yaml/cyaml.py	/^    def __init__(self, stream,$/;"	m	class:CDumper
__init__	madpack/yaml/cyaml.py	/^    def __init__(self, stream,$/;"	m	class:CSafeDumper
__init__	madpack/yaml/dumper.py	/^    def __init__(self, stream,$/;"	m	class:BaseDumper
__init__	madpack/yaml/dumper.py	/^    def __init__(self, stream,$/;"	m	class:Dumper
__init__	madpack/yaml/dumper.py	/^    def __init__(self, stream,$/;"	m	class:SafeDumper
__init__	madpack/yaml/emitter.py	/^    def __init__(self, scalar, empty, multiline,$/;"	m	class:ScalarAnalysis
__init__	madpack/yaml/emitter.py	/^    def __init__(self, stream, canonical=None, indent=None, width=None,$/;"	m	class:Emitter
__init__	madpack/yaml/error.py	/^    def __init__(self, context=None, context_mark=None,$/;"	m	class:MarkedYAMLError
__init__	madpack/yaml/error.py	/^    def __init__(self, name, index, line, column, buffer, pointer):$/;"	m	class:Mark
__init__	madpack/yaml/events.py	/^    def __init__(self, anchor, start_mark=None, end_mark=None):$/;"	m	class:NodeEvent
__init__	madpack/yaml/events.py	/^    def __init__(self, anchor, tag, implicit, start_mark=None, end_mark=None,$/;"	m	class:CollectionStartEvent
__init__	madpack/yaml/events.py	/^    def __init__(self, anchor, tag, implicit, value,$/;"	m	class:ScalarEvent
__init__	madpack/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None):$/;"	m	class:Event
__init__	madpack/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None, encoding=None):$/;"	m	class:StreamStartEvent
__init__	madpack/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None,$/;"	m	class:DocumentEndEvent
__init__	madpack/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None,$/;"	m	class:DocumentStartEvent
__init__	madpack/yaml/loader.py	/^    def __init__(self, stream):$/;"	m	class:BaseLoader
__init__	madpack/yaml/loader.py	/^    def __init__(self, stream):$/;"	m	class:Loader
__init__	madpack/yaml/loader.py	/^    def __init__(self, stream):$/;"	m	class:SafeLoader
__init__	madpack/yaml/nodes.py	/^    def __init__(self, tag, value, start_mark, end_mark):$/;"	m	class:Node
__init__	madpack/yaml/nodes.py	/^    def __init__(self, tag, value,$/;"	m	class:CollectionNode
__init__	madpack/yaml/nodes.py	/^    def __init__(self, tag, value,$/;"	m	class:ScalarNode
__init__	madpack/yaml/parser.py	/^    def __init__(self):$/;"	m	class:Parser
__init__	madpack/yaml/reader.py	/^    def __init__(self, name, position, character, encoding, reason):$/;"	m	class:ReaderError
__init__	madpack/yaml/reader.py	/^    def __init__(self, stream):$/;"	m	class:Reader
__init__	madpack/yaml/representer.py	/^    def __init__(self, default_style=None, default_flow_style=None):$/;"	m	class:BaseRepresenter
__init__	madpack/yaml/resolver.py	/^    def __init__(self):$/;"	m	class:BaseResolver
__init__	madpack/yaml/scanner.py	/^    def __init__(self):$/;"	m	class:Scanner
__init__	madpack/yaml/scanner.py	/^    def __init__(self, token_number, required, index, line, column, mark):$/;"	m	class:SimpleKey
__init__	madpack/yaml/serializer.py	/^    def __init__(self, encoding=None,$/;"	m	class:Serializer
__init__	madpack/yaml/tokens.py	/^    def __init__(self, name, value, start_mark, end_mark):$/;"	m	class:DirectiveToken
__init__	madpack/yaml/tokens.py	/^    def __init__(self, start_mark, end_mark):$/;"	m	class:Token
__init__	madpack/yaml/tokens.py	/^    def __init__(self, start_mark=None, end_mark=None,$/;"	m	class:StreamStartToken
__init__	madpack/yaml/tokens.py	/^    def __init__(self, value, plain, start_mark, end_mark, style=None):$/;"	m	class:ScalarToken
__init__	madpack/yaml/tokens.py	/^    def __init__(self, value, start_mark, end_mark):$/;"	m	class:AliasToken
__init__	madpack/yaml/tokens.py	/^    def __init__(self, value, start_mark, end_mark):$/;"	m	class:AnchorToken
__init__	madpack/yaml/tokens.py	/^    def __init__(self, value, start_mark, end_mark):$/;"	m	class:TagToken
__lda_gibbs_sample	modules/lda/lda.cpp	/^static int32_t __lda_gibbs_sample($/;"	f	namespace:madlib::modules::lda
__linear_trans_compute	modules/regress/clustered_errors.cpp	/^void __linear_trans_compute (MutableClusteredState& state,$/;"	f	namespace:madlib::modules::regress
__logistic_trans_compute	modules/regress/clustered_errors.cpp	/^void __logistic_trans_compute (MutableClusteredState& state,$/;"	f	namespace:madlib::modules::regress
__max	modules/lda/lda.cpp	/^template<class T> static T __max($/;"	f	namespace:madlib::modules::lda
__max	modules/lda/lda.cpp	/^template<class T> static T __max(ArrayHandle<T> ah){$/;"	f	namespace:madlib::modules::lda
__metaclass__	madpack/yaml/__init__.py	/^    __metaclass__ = YAMLObjectMetaclass$/;"	v	class:YAMLObject
__min	modules/lda/lda.cpp	/^template<class T> static T __min($/;"	f	namespace:madlib::modules::lda
__min	modules/lda/lda.cpp	/^template<class T> static T __min(ArrayHandle<T> ah){$/;"	f	namespace:madlib::modules::lda
__mlogistic_trans_compute	modules/regress/clustered_errors.cpp	/^void __mlogistic_trans_compute (MutableClusteredState& state,$/;"	f	namespace:madlib::modules::regress
__ne__	madpack/argparse.py	/^    def __ne__(self, other):$/;"	m	class:Namespace	file:
__project	modules/linalg/svd.cpp	/^static void __project(MappedColumnVector& u, MutableNativeColumnVector& v){$/;"	f	namespace:madlib::modules::linalg
__repr__	madpack/argparse.py	/^    def __repr__(self):$/;"	m	class:FileType	file:
__repr__	madpack/argparse.py	/^    def __repr__(self):$/;"	m	class:_AttributeHolder	file:
__repr__	madpack/yaml/events.py	/^    def __repr__(self):$/;"	m	class:Event	file:
__repr__	madpack/yaml/nodes.py	/^    def __repr__(self):$/;"	m	class:Node	file:
__repr__	madpack/yaml/tokens.py	/^    def __repr__(self):$/;"	m	class:Token	file:
__slots__	madpack/yaml/__init__.py	/^    __slots__ = ()  # no direct instantiation, so allow immutable subclasses$/;"	v	class:YAMLObject
__sr_ctx	modules/lda/lda.cpp	/^typedef struct __sr_ctx{$/;"	s	namespace:madlib::modules::lda	file:
__sr_ctx	modules/linalg/svd.cpp	/^typedef struct __sr_ctx{$/;"	s	namespace:madlib::modules::linalg	file:
__sr_ctx	modules/regress/multilogistic.cpp	/^typedef struct __sr_ctx{$/;"	s	namespace:madlib::modules::regress	file:
__sr_ctx1	modules/linalg/matrix_ops.cpp	/^typedef struct __sr_ctx1{$/;"	s	namespace:madlib::modules::linalg	file:
__sr_ctx2	modules/linalg/matrix_ops.cpp	/^typedef struct __sr_ctx2{$/;"	s	namespace:madlib::modules::linalg	file:
__str__	madpack/argparse.py	/^    def __str__(self):$/;"	m	class:ArgumentError	file:
__str__	madpack/configyml.py	/^     def __str__(self):$/;"	m	class:MadPackConfigError	file:
__str__	madpack/yaml/error.py	/^    def __str__(self):$/;"	m	class:Mark	file:
__str__	madpack/yaml/error.py	/^    def __str__(self):$/;"	m	class:MarkedYAMLError	file:
__str__	madpack/yaml/reader.py	/^    def __str__(self):$/;"	m	class:ReaderError	file:
__sum	modules/lda/lda.cpp	/^static int32_t __sum(ArrayHandle<int32_t> ah){$/;"	f	namespace:madlib::modules::lda
__version__	madpack/argparse.py	/^__version__ = '1.2.1'$/;"	v
_add_action	madpack/argparse.py	/^    def _add_action(self, action):$/;"	m	class:ArgumentParser
_add_action	madpack/argparse.py	/^    def _add_action(self, action):$/;"	m	class:_ActionsContainer
_add_action	madpack/argparse.py	/^    def _add_action(self, action):$/;"	m	class:_ArgumentGroup
_add_action	madpack/argparse.py	/^    def _add_action(self, action):$/;"	m	class:_MutuallyExclusiveGroup
_add_container_actions	madpack/argparse.py	/^    def _add_container_actions(self, container):$/;"	m	class:_ActionsContainer
_add_item	madpack/argparse.py	/^    def _add_item(self, func, args):$/;"	m	class:HelpFormatter
_add_to_dict	madpack/upgrade_util.py	/^    def _add_to_dict(cls, src_dict, dest_dict):$/;"	m	class:ChangeHandler
_append_install_madlib_sqlfile	madpack/madpack.py	/^def _append_install_madlib_sqlfile(schema, db_madlib_ver, is_schema_in_db,$/;"	f
_append_uninstall_madlib_sqlfile	madpack/madpack.py	/^def _append_uninstall_madlib_sqlfile(schema, db_madlib_ver, is_schema_in_db,$/;"	f
_build_dependency_graph	madpack/upgrade_util.py	/^    def _build_dependency_graph(self, hasProcDependency=False):$/;"	m	class:ViewDependency
_callable	madpack/argparse.py	/^def _callable(obj):$/;"	f
_check_conflict	madpack/argparse.py	/^    def _check_conflict(self, action):$/;"	m	class:_ActionsContainer
_check_db_port	madpack/madpack.py	/^def _check_db_port(portid):$/;"	f
_check_value	madpack/argparse.py	/^    def _check_value(self, action, value):$/;"	m	class:ArgumentParser
_clean_aggregate	madpack/upgrade_util.py	/^    def _clean_aggregate(self):$/;"	m	class:ScriptCleaner
_clean_cast	madpack/upgrade_util.py	/^    def _clean_cast(self):$/;"	m	class:ScriptCleaner
_clean_comment	madpack/upgrade_util.py	/^    def _clean_comment(self):$/;"	m	class:ScriptCleaner
_clean_function	madpack/upgrade_util.py	/^    def _clean_function(self):$/;"	m	class:ScriptCleaner
_clean_opclass	madpack/upgrade_util.py	/^    def _clean_opclass(self):$/;"	m	class:ScriptCleaner
_clean_operator	madpack/upgrade_util.py	/^    def _clean_operator(self):$/;"	m	class:ScriptCleaner
_clean_type	madpack/upgrade_util.py	/^    def _clean_type(self):$/;"	m	class:ScriptCleaner
_cleanup_comments_in_sqlfile	madpack/madpack.py	/^def _cleanup_comments_in_sqlfile(output_filename, upgrade):$/;"	f
_copy	madpack/argparse.py	/^import copy as _copy$/;"	i
_db_create_objects	madpack/madpack.py	/^def _db_create_objects(schema, create_obj_handle, upgrade=False, sc=None):$/;"	f
_db_create_schema	madpack/madpack.py	/^def _db_create_schema(schema, is_schema_in_db, filehandle):$/;"	f
_db_install	madpack/madpack.py	/^def _db_install(schema, is_schema_in_db, filehandle):$/;"	f
_db_rename_schema	madpack/madpack.py	/^def _db_rename_schema(from_schema, to_schema):$/;"	f
_db_upgrade	madpack/madpack.py	/^def _db_upgrade(schema, filehandle, db_madlib_ver):$/;"	f
_dedent	madpack/argparse.py	/^    def _dedent(self):$/;"	m	class:HelpFormatter
_detect_direct_view_dependency_udf_uda	madpack/upgrade_util.py	/^    def _detect_direct_view_dependency_udf_uda(self):$/;"	m	class:ViewDependency
_detect_direct_view_dependency_udo	madpack/upgrade_util.py	/^    def _detect_direct_view_dependency_udo(self):$/;"	m	class:ViewDependency
_detect_index_dependency	madpack/upgrade_util.py	/^    def _detect_index_dependency(self):$/;"	m	class:TableDependency
_detect_recursive_view_dependency	madpack/upgrade_util.py	/^    def _detect_recursive_view_dependency(self):$/;"	m	class:ViewDependency
_detect_table_dependency	madpack/upgrade_util.py	/^    def _detect_table_dependency(self):$/;"	m	class:TableDependency
_ensure_value	madpack/argparse.py	/^def _ensure_value(namespace, name, value):$/;"	f
_execute_per_module_db_create_obj_algo	madpack/madpack.py	/^def _execute_per_module_db_create_obj_algo(schema, maddir_mod_py, module,$/;"	f
_execute_per_module_install_dev_check_algo	madpack/madpack.py	/^def _execute_per_module_install_dev_check_algo(schema, test_user,$/;"	f
_execute_per_module_unit_test_algo	madpack/madpack.py	/^def _execute_per_module_unit_test_algo(module, pyfile, cur_tmpdir):$/;"	f
_expand_help	madpack/argparse.py	/^    def _expand_help(self, action):$/;"	m	class:HelpFormatter
_fill_text	madpack/argparse.py	/^    def _fill_text(self, text, width, indent):$/;"	m	class:HelpFormatter
_fill_text	madpack/argparse.py	/^    def _fill_text(self, text, width, indent):$/;"	m	class:RawDescriptionHelpFormatter
_filter_recursive_view_dependency	madpack/upgrade_util.py	/^    def _filter_recursive_view_dependency(self):$/;"	m	class:ViewDependency
_format_action	madpack/argparse.py	/^    def _format_action(self, action):$/;"	m	class:HelpFormatter
_format_action_invocation	madpack/argparse.py	/^    def _format_action_invocation(self, action):$/;"	m	class:HelpFormatter
_format_actions_usage	madpack/argparse.py	/^    def _format_actions_usage(self, actions, groups):$/;"	m	class:HelpFormatter
_format_args	madpack/argparse.py	/^    def _format_args(self, action, default_metavar):$/;"	m	class:HelpFormatter
_format_text	madpack/argparse.py	/^    def _format_text(self, text):$/;"	m	class:HelpFormatter
_format_usage	madpack/argparse.py	/^    def _format_usage(self, usage, actions, groups, prefix):$/;"	m	class:HelpFormatter
_get_action_name	madpack/argparse.py	/^def _get_action_name(argument):$/;"	f
_get_all_aggregate_patterns	madpack/upgrade_util.py	/^    def _get_all_aggregate_patterns(self):$/;"	m	class:ScriptCleaner
_get_args	madpack/argparse.py	/^    def _get_args(self):$/;"	m	class:_AttributeHolder
_get_current_version	madpack/upgrade_util.py	/^    def _get_current_version(self):$/;"	m	class:ChangeHandler
_get_existing_uda	madpack/upgrade_util.py	/^    def _get_existing_uda(self):$/;"	m	class:ScriptCleaner
_get_existing_udo	madpack/upgrade_util.py	/^    def _get_existing_udo(self):$/;"	m	class:ScriptCleaner
_get_existing_udoc	madpack/upgrade_util.py	/^    def _get_existing_udoc(self):$/;"	m	class:ScriptCleaner
_get_existing_udt	madpack/upgrade_util.py	/^    def _get_existing_udt(self):$/;"	m	class:ScriptCleaner
_get_formatter	madpack/argparse.py	/^    def _get_formatter(self):$/;"	m	class:ArgumentParser
_get_function_info	madpack/upgrade_util.py	/^    def _get_function_info(self, oid):$/;"	m	class:UpgradeBase
_get_handler	madpack/argparse.py	/^    def _get_handler(self):$/;"	m	class:_ActionsContainer
_get_help_string	madpack/argparse.py	/^    def _get_help_string(self, action):$/;"	m	class:ArgumentDefaultsHelpFormatter
_get_help_string	madpack/argparse.py	/^    def _get_help_string(self, action):$/;"	m	class:HelpFormatter
_get_kwargs	madpack/argparse.py	/^    def _get_kwargs(self):$/;"	m	class:Action
_get_kwargs	madpack/argparse.py	/^    def _get_kwargs(self):$/;"	m	class:ArgumentParser
_get_kwargs	madpack/argparse.py	/^    def _get_kwargs(self):$/;"	m	class:_AttributeHolder
_get_modset_for_tests	madpack/madpack.py	/^def _get_modset_for_tests(testcase, filename_prefix=''):$/;"	f
_get_nargs_pattern	madpack/argparse.py	/^    def _get_nargs_pattern(self, action):$/;"	m	class:ArgumentParser
_get_option_tuples	madpack/argparse.py	/^    def _get_option_tuples(self, option_string):$/;"	m	class:ArgumentParser
_get_optional_actions	madpack/argparse.py	/^    def _get_optional_actions(self):$/;"	m	class:ArgumentParser
_get_optional_kwargs	madpack/argparse.py	/^    def _get_optional_kwargs(self, *args, **kwargs):$/;"	m	class:_ActionsContainer
_get_positional_actions	madpack/argparse.py	/^    def _get_positional_actions(self):$/;"	m	class:ArgumentParser
_get_positional_kwargs	madpack/argparse.py	/^    def _get_positional_kwargs(self, dest, **kwargs):$/;"	m	class:_ActionsContainer
_get_relative_maddir	madpack/madpack.py	/^def _get_relative_maddir(maddir, port):$/;"	f
_get_relevant_filenames	madpack/upgrade_util.py	/^    def _get_relevant_filenames(self, upgrade_from):$/;"	m	class:ChangeHandler
_get_schema_oid	madpack/upgrade_util.py	/^    def _get_schema_oid(self):$/;"	m	class:UpgradeBase
_get_subactions	madpack/argparse.py	/^    def _get_subactions(self):$/;"	m	class:_SubParsersAction
_get_unchanged_opclass_patterns	madpack/upgrade_util.py	/^    def _get_unchanged_opclass_patterns(self):$/;"	m	class:ScriptCleaner
_get_unchanged_operator_patterns	madpack/upgrade_util.py	/^    def _get_unchanged_operator_patterns(self):$/;"	m	class:ScriptCleaner
_get_value	madpack/argparse.py	/^    def _get_value(self, action, arg_string):$/;"	m	class:ArgumentParser
_get_values	madpack/argparse.py	/^    def _get_values(self, action, arg_strings):$/;"	m	class:ArgumentParser
_handle_conflict_error	madpack/argparse.py	/^    def _handle_conflict_error(self, action, conflicting_actions):$/;"	m	class:_ActionsContainer
_handle_conflict_resolve	madpack/argparse.py	/^    def _handle_conflict_resolve(self, action, conflicting_actions):$/;"	m	class:_ActionsContainer
_indent	madpack/argparse.py	/^    def _indent(self):$/;"	m	class:HelpFormatter
_internal_run_query	madpack/madpack.py	/^def _internal_run_query(sql, show_error):$/;"	f
_is_madlib_installation_valid_for_tests	madpack/madpack.py	/^def _is_madlib_installation_valid_for_tests(schema, db_madlib_ver, test_type):$/;"	f
_iter_indented_subactions	madpack/argparse.py	/^    def _iter_indented_subactions(self, action):$/;"	m	class:HelpFormatter
_join_parts	madpack/argparse.py	/^    def _join_parts(self, part_strings):$/;"	m	class:HelpFormatter
_load	madpack/upgrade_util.py	/^    def _load(self):$/;"	m	class:ChangeHandler
_load_config_param	madpack/upgrade_util.py	/^    def _load_config_param(self, config_iterable, output_config_dict=None):$/;"	m	class:ChangeHandler
_make_dir	madpack/madpack.py	/^def _make_dir(dir):$/;"	f
_match_argument	madpack/argparse.py	/^    def _match_argument(self, action, arg_strings_pattern):$/;"	m	class:ArgumentParser
_match_arguments_partial	madpack/argparse.py	/^    def _match_arguments_partial(self, actions, arg_strings_pattern):$/;"	m	class:ArgumentParser
_metavar_formatter	madpack/argparse.py	/^    def _metavar_formatter(self, action, default_metavar):$/;"	m	class:HelpFormatter
_node_to_str	madpack/upgrade_util.py	/^    def _node_to_str(self, node):$/;"	m	class:ViewDependency
_nodes_to_str	madpack/upgrade_util.py	/^    def _nodes_to_str(self, nodes):$/;"	m	class:ViewDependency
_os	madpack/argparse.py	/^import os as _os$/;"	i
_parse_known_args	madpack/argparse.py	/^    def _parse_known_args(self, arg_strings, namespace):$/;"	m	class:ArgumentParser
_parse_optional	madpack/argparse.py	/^    def _parse_optional(self, arg_string):$/;"	m	class:ArgumentParser
_parse_result_logfile	madpack/madpack.py	/^def _parse_result_logfile(retval, logfile, sql_abspath,$/;"	f
_plpy_check	madpack/madpack.py	/^def _plpy_check(py_min_ver):$/;"	f
_pop_action_class	madpack/argparse.py	/^    def _pop_action_class(self, kwargs, default=None):$/;"	m	class:_ActionsContainer
_print_message	madpack/argparse.py	/^    def _print_message(self, message, file=None):$/;"	m	class:ArgumentParser
_print_vers	madpack/madpack.py	/^def _print_vers(new_madlib_ver, db_madlib_ver, con_args, schema):$/;"	f
_process_py_sql_files_in_modules	madpack/madpack.py	/^def _process_py_sql_files_in_modules(modset, args_dict):$/;"	f
_re	madpack/argparse.py	/^import re as _re$/;"	i
_read_args_from_files	madpack/argparse.py	/^    def _read_args_from_files(self, arg_strings):$/;"	m	class:ArgumentParser
_registry_get	madpack/argparse.py	/^    def _registry_get(self, registry_name, value, default=None):$/;"	m	class:_ActionsContainer
_remove_action	madpack/argparse.py	/^    def _remove_action(self, action):$/;"	m	class:_ActionsContainer
_remove_action	madpack/argparse.py	/^    def _remove_action(self, action):$/;"	m	class:_ArgumentGroup
_remove_action	madpack/argparse.py	/^    def _remove_action(self, action):$/;"	m	class:_MutuallyExclusiveGroup
_rewrite_type_in	madpack/upgrade_util.py	/^    def _rewrite_type_in(self, arg):$/;"	m	class:ScriptCleaner
_run_install_check_sql	madpack/madpack.py	/^def _run_install_check_sql(schema, maddir_mod_py, module, sqlfile,$/;"	f
_run_m4_and_append	madpack/madpack.py	/^def _run_m4_and_append(schema, maddir_mod_py, module, sqlfile,$/;"	f
_run_sql	madpack/upgrade_util.py	/^    def _run_sql(self, sql):$/;"	m	class:UpgradeBase
_run_sql_file	madpack/madpack.py	/^def _run_sql_file(schema, sqlfile):$/;"	f
_split_lines	madpack/argparse.py	/^    def _split_lines(self, text, width):$/;"	m	class:HelpFormatter
_split_lines	madpack/argparse.py	/^    def _split_lines(self, text, width):$/;"	m	class:RawTextHelpFormatter
_sys	madpack/argparse.py	/^import sys as _sys$/;"	i
_textwrap	madpack/argparse.py	/^import textwrap as _textwrap$/;"	i
_update_objects	madpack/upgrade_util.py	/^    def _update_objects(self, config):$/;"	m	class:ChangeHandler
_write_to_file	madpack/madpack.py	/^from utilities import _write_to_file$/;"	i
_write_to_file	madpack/upgrade_util.py	/^from utilities import _write_to_file$/;"	i
_write_to_file	madpack/utilities.py	/^def _write_to_file(handle, sql):$/;"	f
a_0	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const struct among a_0[32] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const struct among a_0[11] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const struct among a_0[10] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const struct among a_0[6] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const struct among a_0[7] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const struct among a_0[29] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const struct among a_0[4] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const struct among a_0[6] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const struct among a_0[37] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_0[8] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const struct among a_0[9] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_danish.c	/^static const struct among a_0[32] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const struct among a_0[11] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const struct among a_0[10] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_french.c	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_german.c	/^static const struct among a_0[6] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_0[8] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_italian.c	/^static const struct among a_0[7] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const struct among a_0[29] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_porter.c	/^static const struct among a_0[4] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_russian.c	/^static const struct among a_0[9] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const struct among a_0[6] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const struct among a_0[37] =$/;"	v	typeref:struct:among	file:
a_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_0[10] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const struct among a_1[4] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const struct among a_1[6] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const struct among a_1[4] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const struct among a_1[7] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const struct among a_1[2] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const struct among a_1[13] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const struct among a_1[13] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const struct among a_1[7] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_1[2] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const struct among a_1[16] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const struct among a_1[26] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_danish.c	/^static const struct among a_1[4] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const struct among a_1[6] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_french.c	/^static const struct among a_1[4] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_german.c	/^static const struct among a_1[7] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_1[2] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_italian.c	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const struct among a_1[2] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_porter.c	/^static const struct among a_1[13] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const struct among a_1[16] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_russian.c	/^static const struct among a_1[26] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const struct among a_1[13] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const struct among a_1[7] =$/;"	v	typeref:struct:among	file:
a_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_1[2] =$/;"	v	typeref:struct:among	file:
a_10	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const struct among a_10[18] =$/;"	v	typeref:struct:among	file:
a_10	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_10[31] =$/;"	v	typeref:struct:among	file:
a_10	libstemmer/src_c/stem_UTF_8_english.c	/^static const struct among a_10[18] =$/;"	v	typeref:struct:among	file:
a_10	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_10[31] =$/;"	v	typeref:struct:among	file:
a_10	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_10[2] =$/;"	v	typeref:struct:among	file:
a_11	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_11[42] =$/;"	v	typeref:struct:among	file:
a_11	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_11[42] =$/;"	v	typeref:struct:among	file:
a_11	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_11[2] =$/;"	v	typeref:struct:among	file:
a_12	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_12[4] =$/;"	v	typeref:struct:among	file:
a_13	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_13[4] =$/;"	v	typeref:struct:among	file:
a_14	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_14[4] =$/;"	v	typeref:struct:among	file:
a_15	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_15[4] =$/;"	v	typeref:struct:among	file:
a_16	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_16[2] =$/;"	v	typeref:struct:among	file:
a_17	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_17[4] =$/;"	v	typeref:struct:among	file:
a_18	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_18[8] =$/;"	v	typeref:struct:among	file:
a_19	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_19[2] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const struct among a_2[5] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const struct among a_2[3] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const struct among a_2[4] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const struct among a_2[37] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const struct among a_2[11] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const struct among a_2[3] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const struct among a_2[4] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const struct among a_2[11] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const struct among a_2[5] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_2[23] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const struct among a_2[46] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const struct among a_2[8] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_danish.c	/^static const struct among a_2[5] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const struct among a_2[3] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_french.c	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_german.c	/^static const struct among a_2[4] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_2[23] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_italian.c	/^static const struct among a_2[37] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const struct among a_2[11] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_porter.c	/^static const struct among a_2[3] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const struct among a_2[4] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const struct among a_2[46] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_russian.c	/^static const struct among a_2[8] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const struct among a_2[11] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const struct among a_2[5] =$/;"	v	typeref:struct:among	file:
a_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_2[4] =$/;"	v	typeref:struct:among	file:
a_20	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_20[32] =$/;"	v	typeref:struct:among	file:
a_21	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_21[8] =$/;"	v	typeref:struct:among	file:
a_22	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_22[4] =$/;"	v	typeref:struct:among	file:
a_23	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_23[4] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const struct among a_3[5] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const struct among a_3[13] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const struct among a_3[3] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const struct among a_3[5] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const struct among a_3[20] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const struct among a_3[3] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const struct among a_3[4] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const struct among a_3[62] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const struct among a_3[5] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_english.c	/^static const struct among a_3[13] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_french.c	/^static const struct among a_3[3] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_german.c	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_italian.c	/^static const struct among a_3[5] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_porter.c	/^static const struct among a_3[20] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const struct among a_3[3] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const struct among a_3[62] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_russian.c	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const struct among a_3[4] =$/;"	v	typeref:struct:among	file:
a_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_3[4] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const struct among a_4[6] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const struct among a_4[6] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const struct among a_4[9] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const struct among a_4[43] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const struct among a_4[8] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const struct among a_4[4] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const struct among a_4[7] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const struct among a_4[3] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const struct among a_4[3] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_4[44] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const struct among a_4[94] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const struct among a_4[46] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const struct among a_4[6] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_english.c	/^static const struct among a_4[6] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const struct among a_4[9] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_french.c	/^static const struct among a_4[43] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_german.c	/^static const struct among a_4[8] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_4[44] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_italian.c	/^static const struct among a_4[4] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_porter.c	/^static const struct among a_4[7] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const struct among a_4[3] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const struct among a_4[94] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_russian.c	/^static const struct among a_4[46] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const struct among a_4[3] =$/;"	v	typeref:struct:among	file:
a_4	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_4[2] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const struct among a_5[4] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const struct among a_5[24] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const struct among a_5[7] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const struct among a_5[35] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const struct among a_5[19] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const struct among a_5[45] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const struct among a_5[5] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const struct among a_5[36] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const struct among a_5[4] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_english.c	/^static const struct among a_5[24] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const struct among a_5[7] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_french.c	/^static const struct among a_5[35] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_italian.c	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_porter.c	/^static const struct among a_5[19] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const struct among a_5[45] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const struct among a_5[5] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_russian.c	/^static const struct among a_5[36] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_5[2] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const struct among a_6[9] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const struct among a_6[30] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const struct among a_6[38] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const struct among a_6[51] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const struct among a_6[120] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const struct among a_6[46] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_6[6] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const struct among a_6[2] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_UTF_8_english.c	/^static const struct among a_6[9] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const struct among a_6[30] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_UTF_8_french.c	/^static const struct among a_6[38] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_6[6] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_UTF_8_italian.c	/^static const struct among a_6[51] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const struct among a_6[120] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_UTF_8_russian.c	/^static const struct among a_6[2] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const struct among a_6[46] =$/;"	v	typeref:struct:among	file:
a_6	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_6[4] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const struct among a_7[18] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const struct among a_7[14] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const struct among a_7[7] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const struct among a_7[87] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const struct among a_7[7] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const struct among a_7[12] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_7[2] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const struct among a_7[4] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_UTF_8_english.c	/^static const struct among a_7[18] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const struct among a_7[14] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_UTF_8_french.c	/^static const struct among a_7[7] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_7[2] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_UTF_8_italian.c	/^static const struct among a_7[87] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const struct among a_7[7] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_UTF_8_russian.c	/^static const struct among a_7[4] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const struct among a_7[12] =$/;"	v	typeref:struct:among	file:
a_7	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_7[2] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const struct among a_8[2] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const struct among a_8[2] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const struct among a_8[5] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const struct among a_8[4] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const struct among a_8[96] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_8[7] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_UTF_8_english.c	/^static const struct among a_8[2] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const struct among a_8[2] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_UTF_8_french.c	/^static const struct among a_8[5] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_8[7] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const struct among a_8[4] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const struct among a_8[96] =$/;"	v	typeref:struct:among	file:
a_8	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_8[4] =$/;"	v	typeref:struct:among	file:
a_9	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const struct among a_9[8] =$/;"	v	typeref:struct:among	file:
a_9	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const struct among a_9[2] =$/;"	v	typeref:struct:among	file:
a_9	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const struct among a_9[8] =$/;"	v	typeref:struct:among	file:
a_9	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const struct among a_9[12] =$/;"	v	typeref:struct:among	file:
a_9	libstemmer/src_c/stem_UTF_8_english.c	/^static const struct among a_9[8] =$/;"	v	typeref:struct:among	file:
a_9	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const struct among a_9[2] =$/;"	v	typeref:struct:among	file:
a_9	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const struct among a_9[12] =$/;"	v	typeref:struct:among	file:
a_9	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const struct among a_9[8] =$/;"	v	typeref:struct:among	file:
a_9	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const struct among a_9[2] =$/;"	v	typeref:struct:among	file:
a_square_sum	modules/regress/LinearRegression_proto.hpp	/^    double_type a_square_sum;$/;"	m	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
a_sum	modules/regress/LinearRegression_proto.hpp	/^    double_type a_sum;$/;"	m	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
activation	modules/convex/type/model.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble activation;$/;"	m	struct:madlib::modules::convex::MLPModel
active_transition	modules/elastic_net/elastic_net_binomial_fista.cpp	/^inline void BinomialFista::active_transition(FistaState<MutableArrayHandle<double> >& state,$/;"	f	class:madlib::modules::elastic_net::BinomialFista
active_transition	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^inline void GaussianFista::active_transition (FistaState<MutableArrayHandle<double> >& state,$/;"	f	class:madlib::modules::elastic_net::GaussianFista
add_argument	madpack/argparse.py	/^    def add_argument(self, *args, **kwargs):$/;"	m	class:_ActionsContainer
add_argument	madpack/argparse.py	/^    def add_argument(self, action):$/;"	m	class:HelpFormatter
add_argument_group	madpack/argparse.py	/^    def add_argument_group(self, *args, **kwargs):$/;"	m	class:_ActionsContainer
add_arguments	madpack/argparse.py	/^    def add_arguments(self, actions):$/;"	m	class:HelpFormatter
add_constructor	madpack/yaml/__init__.py	/^def add_constructor(tag, constructor, Loader=Loader):$/;"	f
add_constructor	madpack/yaml/constructor.py	/^    add_constructor = classmethod(add_constructor)$/;"	v	class:BaseConstructor
add_constructor	madpack/yaml/constructor.py	/^    def add_constructor(cls, tag, constructor):$/;"	m	class:BaseConstructor
add_implicit_resolver	madpack/yaml/__init__.py	/^def add_implicit_resolver(tag, regexp, first=None,$/;"	f
add_implicit_resolver	madpack/yaml/resolver.py	/^    add_implicit_resolver = classmethod(add_implicit_resolver)$/;"	v	class:BaseResolver
add_implicit_resolver	madpack/yaml/resolver.py	/^    def add_implicit_resolver(cls, tag, regexp, first):$/;"	m	class:BaseResolver
add_indent	madpack/yaml/scanner.py	/^    def add_indent(self, column):$/;"	m	class:Scanner
add_multi_constructor	madpack/yaml/__init__.py	/^def add_multi_constructor(tag_prefix, multi_constructor, Loader=Loader):$/;"	f
add_multi_constructor	madpack/yaml/constructor.py	/^    add_multi_constructor = classmethod(add_multi_constructor)$/;"	v	class:BaseConstructor
add_multi_constructor	madpack/yaml/constructor.py	/^    def add_multi_constructor(cls, tag_prefix, multi_constructor):$/;"	m	class:BaseConstructor
add_multi_representer	madpack/yaml/__init__.py	/^def add_multi_representer(data_type, multi_representer, Dumper=Dumper):$/;"	f
add_multi_representer	madpack/yaml/representer.py	/^    add_multi_representer = classmethod(add_multi_representer)$/;"	v	class:BaseRepresenter
add_multi_representer	madpack/yaml/representer.py	/^    def add_multi_representer(cls, data_type, representer):$/;"	m	class:BaseRepresenter
add_mutually_exclusive_group	madpack/argparse.py	/^    def add_mutually_exclusive_group(self, **kwargs):$/;"	m	class:_ActionsContainer
add_parser	madpack/argparse.py	/^    def add_parser(self, name, **kwargs):$/;"	m	class:_SubParsersAction
add_path_resolver	madpack/yaml/__init__.py	/^def add_path_resolver(tag, path, kind=None, Loader=Loader, Dumper=Dumper):$/;"	f
add_path_resolver	madpack/yaml/resolver.py	/^    add_path_resolver = classmethod(add_path_resolver)$/;"	v	class:BaseResolver
add_path_resolver	madpack/yaml/resolver.py	/^    def add_path_resolver(cls, tag, path, kind=None):$/;"	m	class:BaseResolver
add_representer	madpack/yaml/__init__.py	/^def add_representer(data_type, representer, Dumper=Dumper):$/;"	f
add_representer	madpack/yaml/representer.py	/^    add_representer = classmethod(add_representer)$/;"	v	class:BaseRepresenter
add_representer	madpack/yaml/representer.py	/^    def add_representer(cls, data_type, representer):$/;"	m	class:BaseRepresenter
add_subparsers	madpack/argparse.py	/^    def add_subparsers(self, **kwargs):$/;"	m	class:ArgumentParser
add_text	madpack/argparse.py	/^    def add_text(self, text):$/;"	m	class:HelpFormatter
add_usage	madpack/argparse.py	/^    def add_usage(self, usage, actions, groups, prefix=None):$/;"	m	class:HelpFormatter
address	utils/MallocAllocator.hpp	/^    const_pointer address(const_reference x) const {$/;"	f	class:madlib::utils::MallocAllocator
address	utils/MallocAllocator.hpp	/^    pointer address(reference x) const {$/;"	f	class:madlib::utils::MallocAllocator
algo	modules/convex/type/state.hpp	/^    } algo;$/;"	m	class:madlib::modules::convex::GLMCGState	typeref:struct:madlib::modules::convex::GLMCGState::AlgoState
algo	modules/convex/type/state.hpp	/^    } algo;$/;"	m	class:madlib::modules::convex::GLMIGDState	typeref:struct:madlib::modules::convex::GLMIGDState::AlgoState
algo	modules/convex/type/state.hpp	/^    } algo;$/;"	m	class:madlib::modules::convex::GLMNewtonState	typeref:struct:madlib::modules::convex::GLMNewtonState::AlgoState
algo	modules/convex/type/state.hpp	/^    } algo;$/;"	m	class:madlib::modules::convex::LMFIGDState	typeref:struct:madlib::modules::convex::LMFIGDState::AlgoState
algo	modules/convex/type/state.hpp	/^    } algo;$/;"	m	class:madlib::modules::convex::MLPIGDState	typeref:struct:madlib::modules::convex::MLPIGDState::AlgoState
algorithm	modules/linear_systems/dense_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 algorithm;$/;"	m	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState	file:
algorithm	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 algorithm;$/;"	m	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
algorithm	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 algorithm;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
algorithm_names	libstemmer/libstemmer/modules.h	/^static const char * algorithm_names[] = {$/;"	v
alignment	dbal/ByteStream_proto.hpp	/^    enum { alignment = 16 };$/;"	e	enum:madlib::dbal::ByteStreamDefaultTypeTraits::__anon8
alignment	dbal/ByteStream_proto.hpp	/^    enum { alignment = sizeof(T) <= 16 ? sizeof(T) : 16 };$/;"	e	enum:madlib::dbal::ByteStreamDefaultTypeTraits::__anon7
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = 1 };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon52
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = ALIGNOF_DOUBLE };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon38
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = ALIGNOF_INT };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon44
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = ALIGNOF_INT };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon46
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = ALIGNOF_LONG };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon40
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = ALIGNOF_LONG };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon42
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = ALIGNOF_SHORT };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon48
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = ALIGNOF_SHORT };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon50
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = MAXIMUM_ALIGNOF };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon53
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = MAXIMUM_ALIGNOF };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon54
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = MAXIMUM_ALIGNOF };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon68
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = MAXIMUM_ALIGNOF };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon72
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = MAXIMUM_ALIGNOF };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon76
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = MAXIMUM_ALIGNOF };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon80
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = MAXIMUM_ALIGNOF };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon92
alignment	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { alignment = MAXIMUM_ALIGNOF };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraitsBase::__anon34
all_numeric	madpack/utilities.py	/^    def all_numeric(l):$/;"	f	function:is_rev_gte
allocate	modules/convex/type/state.hpp	/^    inline void allocate(const Allocator &inAllocator, int32_t inRowDim,$/;"	f	class:madlib::modules::convex::LMFIGDState
allocate	modules/convex/type/state.hpp	/^    inline void allocate(const Allocator &inAllocator, uint16_t inDimension) {$/;"	f	class:madlib::modules::convex::GLMNewtonState
allocate	modules/convex/type/state.hpp	/^    inline void allocate(const Allocator &inAllocator, uint32_t inDimension) {$/;"	f	class:madlib::modules::convex::GLMCGState
allocate	modules/convex/type/state.hpp	/^    inline void allocate(const Allocator &inAllocator, uint32_t inDimension) {$/;"	f	class:madlib::modules::convex::GLMIGDState
allocate	modules/convex/type/state.hpp	/^    inline void allocate(const Allocator &inAllocator,$/;"	f	class:madlib::modules::convex::MLPIGDState
allocate	modules/convex/type/state.hpp	/^    inline void allocate(const Allocator &inAllocator,$/;"	f	class:madlib::modules::convex::MLPMiniBatchState
allocate	modules/convex/utils_regularization.cpp	/^    inline void allocate (const Allocator& inAllocator,$/;"	f	class:madlib::modules::convex::ScalesState
allocate	modules/elastic_net/state/fista.hpp	/^    inline void allocate (const Allocator& inAllocator,$/;"	f	class:madlib::modules::elastic_net::FistaState
allocate	modules/elastic_net/state/igd.hpp	/^    inline void allocate(const Allocator& inAllocator, uint32_t inDimension)$/;"	f	class:madlib::modules::elastic_net::IgdState
allocate	ports/postgres/dbconnector/Allocator_impl.hpp	/^Allocator::allocate(size_t inSize) const {$/;"	f	class:madlib::dbconnector::postgres::Allocator
allocate	utils/MallocAllocator.hpp	/^    pointer allocate(size_type n,$/;"	f	class:madlib::utils::MallocAllocator
allocateByteString	ports/postgres/dbconnector/Allocator_impl.hpp	/^Allocator::allocateByteString(std::size_t inSize) const {$/;"	f	class:madlib::dbconnector::postgres::Allocator
allocator_type	dbal/OutputStreamBufferBase_proto.hpp	/^    typedef Allocator allocator_type;$/;"	t	class:madlib::dbal::OutputStreamBufferBase
almostEqual	utils/Math.hpp	/^almostEqual(T inX, T inY, int inULP) {$/;"	f	namespace:madlib::utils
alpha	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble alpha;$/;"	m	class:madlib::modules::elastic_net::FistaState
alpha	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble alpha; \/\/ elastic net control$/;"	m	class:madlib::modules::elastic_net::IgdState
among	libstemmer/runtime/header.h	/^struct among$/;"	s
analyze_scalar	madpack/yaml/emitter.py	/^    def analyze_scalar(self, scalar):$/;"	m	class:Emitter
anchor_node	madpack/yaml/serializer.py	/^    def anchor_node(self, node):$/;"	m	class:Serializer
apply	modules/convex/newton.hpp	/^    void apply() {$/;"	f	class:madlib::modules::convex::Newton
apply	modules/glm/GLM_impl.hpp	/^GLMAccumulator<Container,Family,Link>::apply() {$/;"	f	class:madlib::modules::glm::GLMAccumulator
apply	modules/glm/MultiResponseGLM_impl.hpp	/^MultiResponseGLMAccumulator<Container,Family,Link>::apply() {$/;"	f	class:madlib::modules::glm::MultiResponseGLMAccumulator
apply	modules/glm/Ordinal_impl.hpp	/^OrdinalAccumulator<Container,Family,Link>::apply() {$/;"	f	class:madlib::modules::glm::OrdinalAccumulator
argparse	madpack/madpack.py	/^import argparse$/;"	i
argsort	modules/recursive_partitioning/DT_impl.hpp	/^IntegerVector argsort(const ColumnVector & x) {$/;"	f	namespace:madlib::modules::recursive_partitioning::__anon22
argsort_comp	modules/recursive_partitioning/DT_impl.hpp	/^bool argsort_comp(const argsort_pair& left,$/;"	f	namespace:madlib::modules::recursive_partitioning::__anon22
argsort_pair	modules/recursive_partitioning/DT_impl.hpp	/^typedef std::pair<int, double> argsort_pair;$/;"	t	namespace:madlib::modules::recursive_partitioning::__anon22
argtypes	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    Oid *argtypes;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
array	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^ArrayHandle<T>::array() const {$/;"	f	class:madlib::dbconnector::postgres::ArrayHandle
array	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^MutableArrayHandle<T>::array() {$/;"	f	class:madlib::dbconnector::postgres::MutableArrayHandle
arraySize	modules/convex/type/model.hpp	/^    static inline uint32_t arraySize(const int32_t inRowDim,$/;"	f	struct:madlib::modules::convex::LMFModel
arraySize	modules/convex/type/model.hpp	/^    static inline uint32_t arraySize(const uint16_t &inNumberOfStages,$/;"	f	struct:madlib::modules::convex::MLPModel
arraySize	modules/convex/type/state.hpp	/^    static inline uint32_t arraySize(const int32_t inRowDim,$/;"	f	class:madlib::modules::convex::LMFIGDState
arraySize	modules/convex/type/state.hpp	/^    static inline uint32_t arraySize(const uint16_t &inNumberOfStages,$/;"	f	class:madlib::modules::convex::MLPIGDState
arraySize	modules/convex/type/state.hpp	/^    static inline uint32_t arraySize(const uint16_t &inNumberOfStages,$/;"	f	class:madlib::modules::convex::MLPMiniBatchState
arraySize	modules/convex/type/state.hpp	/^    static inline uint32_t arraySize(const uint16_t inDimension) {$/;"	f	class:madlib::modules::convex::GLMNewtonState
arraySize	modules/convex/type/state.hpp	/^    static inline uint32_t arraySize(const uint32_t inDimension) {$/;"	f	class:madlib::modules::convex::GLMCGState
arraySize	modules/convex/type/state.hpp	/^    static inline uint32_t arraySize(const uint32_t inDimension) {$/;"	f	class:madlib::modules::convex::GLMIGDState
arraySize	modules/convex/utils_regularization.cpp	/^    static inline uint32_t arraySize (const uint32_t inDimension)$/;"	f	class:madlib::modules::convex::ScalesState
arraySize	modules/crf/linear_crf.cpp	/^    static inline uint32_t arraySize(const uint32_t num_features) {$/;"	f	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
arraySize	modules/elastic_net/state/fista.hpp	/^    static inline uint32_t arraySize (const uint32_t inDimension)$/;"	f	class:madlib::modules::elastic_net::FistaState
arraySize	modules/elastic_net/state/igd.hpp	/^    static inline uint32_t arraySize (const uint32_t inDimension)$/;"	f	class:madlib::modules::elastic_net::IgdState
arraySize	modules/linalg/average.cpp	/^    static inline size_t arraySize(uint32_t inNumDimensions) {$/;"	f	class:madlib::modules::linalg::AvgVectorState	file:
arraySize	modules/linalg/matrix_agg.cpp	/^    static inline size_t arraySize(uint64_t inNumRows, uint64_t inNumCols) {$/;"	f	class:madlib::modules::linalg::MatrixAggState	file:
arraySize	modules/linear_systems/dense_linear_systems.cpp	/^    static inline size_t arraySize(const uint32_t inWidthOfA,$/;"	f	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState	file:
arraySize	modules/linear_systems/sparse_linear_systems.cpp	/^    static inline size_t arraySize(const uint32_t innumEquations,$/;"	f	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
arraySize	modules/linear_systems/sparse_linear_systems.cpp	/^    static inline size_t arraySize(const uint32_t innumEquations,$/;"	f	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
arraySize	modules/regress/logistic.cpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::LogRegrCGTransitionState	file:
arraySize	modules/regress/logistic.cpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::MarginalLogRegrTransitionState	file:
arraySize	modules/regress/logistic.cpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::RobustLogRegrTransitionState	file:
arraySize	modules/regress/logistic.cpp	/^    static inline uint32_t arraySize(const uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::LogRegrIGDTransitionState	file:
arraySize	modules/regress/logistic.cpp	/^    static inline uint32_t arraySize(const uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::LogRegrIRLSTransitionState	file:
arraySize	modules/regress/marginal.cpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX,$/;"	f	class:madlib::modules::regress::MarginsLinregrInteractionState	file:
arraySize	modules/regress/marginal.cpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX,$/;"	f	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
arraySize	modules/regress/marginal.cpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX,$/;"	f	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
arraySize	modules/regress/mlogr_margins.cpp	/^    static inline uint32_t arraySize(const uint16_t inWidthOfX,$/;"	f	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
arraySize	modules/regress/multilogistic.cpp	/^    static inline uint32_t arraySize(const uint16_t inWidthOfX,$/;"	f	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
arraySize	modules/regress/multilogistic.cpp	/^    static inline uint32_t arraySize(const uint16_t inWidthOfX,$/;"	f	class:madlib::modules::regress::MLogRegrRobustTransitionState	file:
arraySize	modules/stats/CoxPHState.hpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::CoxPHState
arraySize	modules/stats/clustered_variance_coxph.cpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::CLABTransitionState	file:
arraySize	modules/stats/cox_prop_hazards.cpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::ArrayElemCorrState	file:
arraySize	modules/stats/marginal_cox.cpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX,$/;"	f	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
arraySize	modules/stats/one_way_anova.cpp	/^    static inline size_t arraySize(uint32_t inNumGroupsReserved) {$/;"	f	class:madlib::modules::stats::OWATransitionState	file:
arraySize	modules/stats/robust_variance_coxph.cpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::RBCoxPHTransitionState	file:
arraySize	modules/stats/robust_variance_coxph.cpp	/^    static inline size_t arraySize(const uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::RBHSTransitionState	file:
array_size_	ports/postgres/dbconnector/ArrayWithNullException_proto.hpp	/^    const size_t array_size_;$/;"	m	class:madlib::dbconnector::postgres::ArrayWithNullException
as_scalar	dbal/EigenIntegration/EigenIntegration.hpp	/^static as_scalar(const Eigen::MatrixBase<Derived>& mat) {$/;"	f	namespace:madlib::dbal::eigen_integration
ascend_resolver	madpack/yaml/resolver.py	/^    def ascend_resolver(self):$/;"	m	class:BaseResolver
assertion_failed	dbal/BoostIntegration/Assertions_impl.hpp	/^assertion_failed(char const *inExpr, char const *inFunction,$/;"	f	namespace:boost
assertion_failed_msg	dbal/BoostIntegration/Assertions_impl.hpp	/^assertion_failed_msg(char const *inExpr, char const *inMsg,$/;"	f	namespace:boost
assign_to	libstemmer/runtime/utilities.c	/^extern symbol * assign_to(struct SN_env * z, symbol * p) {$/;"	f
assoc_rules	modules/assoc_rules/assoc_rules.cpp	/^namespace assoc_rules {$/;"	n	namespace:madlib::modules	file:
available	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::available() const {$/;"	f	class:madlib::dbal::ByteStream
b	modules/linear_systems/dense_linear_systems.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap b;$/;"	m	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState	file:
b	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap b;$/;"	m	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
b	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap b;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
b_coef	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap b_coef; \/\/ backtracking coef$/;"	m	class:madlib::modules::elastic_net::FistaState
b_intercept	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble b_intercept; \/\/ backtracking intercept$/;"	m	class:madlib::modules::elastic_net::FistaState
b_norm	modules/linear_systems/dense_linear_systems_states.hpp	/^    double_type b_norm;$/;"	m	class:madlib::modules::linear_systems::ResidualState
b_norm	modules/linear_systems/sparse_linear_systems_states.hpp	/^    double_type b_norm;$/;"	m	class:madlib::modules::linear_systems::ResidualState
b_stored	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap b_stored;$/;"	m	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
b_stored	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap b_stored;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
backPropogate	modules/convex/task/mlp.hpp	/^MLP<Model, Tuple>::backPropogate($/;"	f	class:madlib::modules::convex::MLP
backtracking	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 backtracking; \/\/ is backtracking now?$/;"	m	class:madlib::modules::elastic_net::FistaState
backtracking_transition	modules/elastic_net/elastic_net_binomial_fista.cpp	/^inline void BinomialFista::backtracking_transition(FistaState<MutableArrayHandle<double> >& state,$/;"	f	class:madlib::modules::elastic_net::BinomialFista
backtracking_transition	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^inline void GaussianFista::backtracking_transition (FistaState<MutableArrayHandle<double> >& state,$/;"	f	class:madlib::modules::elastic_net::GaussianFista
baseline_hazard	modules/stats/marginal_cox.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble baseline_hazard;$/;"	m	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
basestring	madpack/argparse.py	/^    basestring = str$/;"	v
batchSize	modules/convex/type/state.hpp	/^    dimension_type batchSize;$/;"	m	class:madlib::modules::convex::MLPMiniBatchState
begin	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, IsMutable>::begin() const {$/;"	f	class:madlib::dbal::DynamicStruct
beta	modules/convex/newton.hpp	/^    ColumnVector_type   beta;       \/\/ coefficients$/;"	m	class:madlib::modules::convex::Newton
beta	modules/crf/linear_crf.cpp	/^    double stp1, ftol, stp, sq, yr, beta;$/;"	m	class:madlib::modules::crf::LBFGS	file:
beta	modules/glm/GLM_proto.hpp	/^    ColumnVector_type   beta;       \/\/ coefficients$/;"	m	class:madlib::modules::glm::GLMAccumulator
beta	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble beta;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
binascii	madpack/yaml/constructor.py	/^import binascii, re, sys, types$/;"	i
bind	modules/convex/newton.hpp	/^    void bind(ByteStream_type& inStream) {$/;"	f	class:madlib::modules::convex::Newton
bind	modules/glm/GLM_impl.hpp	/^GLMAccumulator<Container,Family,Link>::bind($/;"	f	class:madlib::modules::glm::GLMAccumulator
bind	modules/glm/MultiResponseGLM_impl.hpp	/^MultiResponseGLMAccumulator<Container,Family,Link>::bind($/;"	f	class:madlib::modules::glm::MultiResponseGLMAccumulator
bind	modules/glm/Ordinal_impl.hpp	/^OrdinalAccumulator<Container,Family,Link>::bind($/;"	f	class:madlib::modules::glm::OrdinalAccumulator
bind	modules/linear_systems/dense_linear_systems_states.hpp	/^inline void ResidualState<Container>::bind(ByteStream_type& inStream){$/;"	f	class:madlib::modules::linear_systems::ResidualState
bind	modules/linear_systems/sparse_linear_systems_states.hpp	/^inline void ResidualState<Container>::bind(ByteStream_type& inStream){$/;"	f	class:madlib::modules::linear_systems::ResidualState
bind	modules/recursive_partitioning/ConSplits.hpp	/^    void bind(ByteStream_type& inStream) {$/;"	f	class:madlib::modules::recursive_partitioning::ConSplitsResult
bind	modules/recursive_partitioning/ConSplits.hpp	/^    void bind(ByteStream_type& inStream) {$/;"	f	class:madlib::modules::recursive_partitioning::ConSplitsSample
bind	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::bind(ByteStream_type& inStream) {$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
bind	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::bind(ByteStream_type& inStream) {$/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
bind	modules/regress/LinearRegression_impl.hpp	/^HeteroLinearRegressionAccumulator<Container>::bind(ByteStream_type& inStream) {$/;"	f	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
bind	modules/regress/LinearRegression_impl.hpp	/^LinearRegressionAccumulator<Container>::bind(ByteStream_type& inStream) {$/;"	f	class:madlib::modules::regress::LinearRegressionAccumulator
bind	modules/regress/LinearRegression_impl.hpp	/^RobustLinearRegressionAccumulator<Container>::bind(ByteStream_type& inStream) {$/;"	f	class:madlib::modules::regress::RobustLinearRegressionAccumulator
bind	modules/regress/clustered_errors_state.hpp	/^inline void ClusteredState<Container>::bind(ByteStream_type& inStream)$/;"	f	class:madlib::modules::regress::ClusteredState
bind	modules/sample/WeightedSample_impl.hpp	/^WeightedSampleAccumulator<Container, T>::bind(ByteStream_type& inStream) {$/;"	f	class:madlib::modules::sample::WeightedSampleAccumulator
bindToStream	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, IsMutable>::bindToStream($/;"	f	class:madlib::dbal::DynamicStruct
bindToStream	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, Mutable>::bindToStream($/;"	f	class:madlib::dbal::DynamicStruct
bindWeightedSampleAcc	modules/sample/WeightedSample_impl.hpp	/^bindWeightedSampleAcc($/;"	f	namespace:madlib::modules::sample
bool_values	madpack/yaml/constructor.py	/^    bool_values = {$/;"	v	class:SafeConstructor
boost	dbal/BoostIntegration/Assertions_impl.hpp	/^namespace boost {$/;"	n
boost	dbal/BoostIntegration/MathToolkit_impl.hpp	/^namespace boost {$/;"	n
boost_mathkit_policy	dbal/BoostIntegration/MathToolkit_impl.hpp	/^> boost_mathkit_policy;$/;"	t	namespace:madlib
bound	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
bra	libstemmer/runtime/api.h	/^    int c; int l; int lb; int bra; int ket;$/;"	m	struct:SN_env
brackt	modules/crf/linear_crf.cpp	/^    bool brackt, stage1, finish;$/;"	m	class:madlib::modules::crf::LBFGS	file:
bread	modules/regress/clustered_errors_state.hpp	/^    Matrix_type bread;$/;"	m	class:madlib::modules::regress::ClusteredState
buff_size	modules/recursive_partitioning/ConSplits.hpp	/^    uint32_type buff_size;$/;"	m	class:madlib::modules::recursive_partitioning::ConSplitsSample
byteStream	dbal/DynamicStruct_impl.hpp	/^    DynamicStructRootContainer<Storage, TypeTraits>, IsMutable>::byteStream()$/;"	f	class:madlib::dbal::DynamicStructBase
byteStream	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, IsMutable>::byteStream() {$/;"	f	class:madlib::dbal::DynamicStruct
byteString	ports/postgres/dbconnector/ByteString_impl.hpp	/^ByteString::byteString() const {$/;"	f	class:madlib::dbconnector::postgres::ByteString
byteString	ports/postgres/dbconnector/ByteString_impl.hpp	/^MutableByteString::byteString() {$/;"	f	class:madlib::dbconnector::postgres::MutableByteString
byval	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^	bool byval;$/;"	m	struct:madlib::dbconnector::postgres::TypeInformation
c	libstemmer/runtime/api.h	/^    int c; int l; int lb; int bra; int ket;$/;"	m	struct:SN_env
c	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap c;$/;"	m	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
c	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap c;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
cacheContext	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    MemoryContext cacheContext;$/;"	m	struct:madlib::dbconnector::postgres::SystemInformation
call	ports/postgres/dbconnector/UDF_impl.hpp	/^UDF::call(FunctionCallInfo fcinfo) {$/;"	f	class:madlib::dbconnector::postgres::UDF
cat_levels_cumsum	modules/recursive_partitioning/DT_proto.hpp	/^    IntegerVector_type cat_levels_cumsum; \/\/ used as integer array$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
cat_stats	modules/recursive_partitioning/DT_proto.hpp	/^    Matrix_type cat_stats;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
categorical_basis_indices	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap categorical_basis_indices;$/;"	m	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
categorical_basis_indices	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap categorical_basis_indices;$/;"	m	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
categorical_basis_indices	modules/stats/marginal_cox.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap categorical_basis_indices;$/;"	m	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
cdf	modules/prob/boost.hpp	/^    static ProbFnOverride cdf(const Distribution& inDist, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
cdf	modules/prob/boost.hpp	/^    static ProbFnOverride cdf(const Distribution& inDist, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::IntegerDomainCheck
cdf	modules/prob/boost.hpp	/^    static ProbFnOverride cdf(const Distribution& inDist, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::NonNegativeIntegerDomainCheck
cdf	modules/prob/boost.hpp	/^    static ProbFnOverride cdf(const Distribution& inDist, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::PositiveDomainCheck
cdf	modules/prob/boost.hpp	/^    static ProbFnOverride cdf(const Distribution& inDist,$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
cdf	modules/prob/boost.hpp	/^    static ProbFnOverride cdf(const Distribution&, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::RealDomainCheck
cdf	modules/prob/boost.hpp	/^    static ProbFnOverride cdf(const Distribution&, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::ZeroOneDomainCheck
cdf	modules/prob/boost.hpp	/^    static ProbFnOverride cdf(const Distribution&, const RealType&, RealType&) {$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
cdf	modules/prob/kolmogorov.hpp	/^cdf($/;"	f	namespace:madlib::modules::prob
cdf	modules/prob/kolmogorov.hpp	/^cdf(const kolmogorov_distribution<RealType, Policy>&, const RealType& x) {$/;"	f	namespace:madlib::modules::prob
cdf	modules/prob/student.hpp	/^cdf($/;"	f	namespace:madlib::modules::prob
cdf	modules/prob/student.hpp	/^cdf(const boost::math::students_t_distribution<RealType, Policy>& dist,$/;"	f	namespace:madlib::modules::prob
ch_filename	madpack/create_changelist.py	/^ch_filename = sys.argv[4]$/;"	v
ch_type	madpack/create_changelist.py	/^                ch_type = line.split('|')[1].strip()$/;"	v
chain	madpack/configyml.py	/^from itertools import chain$/;"	i
char_type	dbal/ByteStreamHandleBuf_proto.hpp	/^    typedef CharType char_type;$/;"	t	class:madlib::dbal::ByteStreamHandleBuf
char_type	dbal/ByteStreamHandleBuf_proto.hpp	/^    typedef typename Base::char_type char_type;$/;"	t	class:madlib::dbal::ByteStreamHandleBuf
char_type	dbal/ByteStream_proto.hpp	/^    typedef typename Base::char_type char_type;$/;"	t	class:madlib::dbal::ByteStream
char_type	dbal/ByteStream_proto.hpp	/^    typedef typename StreamBuf_type::char_type char_type;$/;"	t	class:madlib::dbal::ByteStream
char_type	dbal/DynamicStruct_proto.hpp	/^    typedef typename ByteStream_type::char_type char_type;$/;"	t	class:madlib::dbal::DynamicStruct
char_type	ports/postgres/dbconnector/ByteString_proto.hpp	/^    typedef char char_type;$/;"	t	class:madlib::dbconnector::postgres::ByteString
check_block_entry	madpack/yaml/scanner.py	/^    def check_block_entry(self):$/;"	m	class:Scanner
check_data	madpack/yaml/constructor.py	/^    def check_data(self):$/;"	m	class:BaseConstructor
check_directive	madpack/yaml/scanner.py	/^    def check_directive(self):$/;"	m	class:Scanner
check_dist	modules/prob/boost.hpp	/^    static bool check_dist(const char* function, RealType lambda,$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
check_dist	modules/prob/boost.hpp	/^    static bool check_dist(const char* function, RealType location,$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
check_dist	modules/prob/boost.hpp	/^    static bool check_dist(const char* function, const RealType& r,$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
check_document_end	madpack/yaml/scanner.py	/^    def check_document_end(self):$/;"	m	class:Scanner
check_document_start	madpack/yaml/scanner.py	/^    def check_document_start(self):$/;"	m	class:Scanner
check_empty_document	madpack/yaml/emitter.py	/^    def check_empty_document(self):$/;"	m	class:Emitter
check_empty_mapping	madpack/yaml/emitter.py	/^    def check_empty_mapping(self):$/;"	m	class:Emitter
check_empty_sequence	madpack/yaml/emitter.py	/^    def check_empty_sequence(self):$/;"	m	class:Emitter
check_event	madpack/yaml/parser.py	/^    def check_event(self, *choices):$/;"	m	class:Parser
check_key	madpack/yaml/scanner.py	/^    def check_key(self):$/;"	m	class:Scanner
check_node	madpack/yaml/composer.py	/^    def check_node(self):$/;"	m	class:Composer
check_plain	madpack/yaml/scanner.py	/^    def check_plain(self):$/;"	m	class:Scanner
check_printable	madpack/yaml/reader.py	/^    def check_printable(self, data):$/;"	m	class:Reader
check_resolver_prefix	madpack/yaml/resolver.py	/^    def check_resolver_prefix(self, depth, path, kind,$/;"	m	class:BaseResolver
check_sigma_finite	modules/prob/boost.hpp	/^    static bool check_sigma_finite(const char* function, RealType sigma,$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
check_simple_key	madpack/yaml/emitter.py	/^    def check_simple_key(self):$/;"	m	class:Emitter
check_token	madpack/yaml/scanner.py	/^    def check_token(self, *choices):$/;"	m	class:Scanner
check_value	madpack/yaml/scanner.py	/^    def check_value(self):$/;"	m	class:Scanner
check_weibull_shape	modules/prob/boost.hpp	/^    static bool check_weibull_shape($/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
choose_scalar_style	madpack/yaml/emitter.py	/^    def choose_scalar_style(self):$/;"	m	class:Emitter
classobj	madpack/yaml/constructor.py	/^    class classobj: pass$/;"	c	class:Constructor
cleanup	madpack/upgrade_util.py	/^    def cleanup(self, sql, algoname):$/;"	m	class:ScriptCleaner
clipping	modules/convex/task/l1.hpp	/^L1<Model>::clipping($/;"	f	class:madlib::modules::convex::L1
close	libstemmer/libstemmer/libstemmer.c	/^    void (*close)(struct SN_env *);$/;"	m	struct:sb_stemmer	file:
close	libstemmer/libstemmer/modules.h	/^  void (*close)(struct SN_env *);$/;"	m	struct:stemmer_modules
close	madpack/yaml/serializer.py	/^    def close(self):$/;"	m	class:Serializer
close_to_zero	modules/convex/utils_regularization.cpp	/^bool close_to_zero(double number) {$/;"	f	namespace:madlib::modules::convex
closestColumnsAndDistances	modules/linalg/metric.cpp	/^closestColumnsAndDistances($/;"	f	namespace:madlib::modules::linalg
closestColumnsAndDistancesShortcut	modules/linalg/metric.cpp	/^closestColumnsAndDistancesShortcut($/;"	f	namespace:madlib::modules::linalg
closestColumnsAndDistancesUDF	modules/linalg/metric.cpp	/^closestColumnsAndDistancesUDF($/;"	f	namespace:madlib::modules::linalg
clustered_compute_stats	modules/regress/clustered_errors.cpp	/^AnyType clustered_compute_stats (AnyType& args,$/;"	f	namespace:madlib::modules::regress
cmp_text	modules/recursive_partitioning/feature_encoding.cpp	/^cmp_text(text* s1, text* s2) {$/;"	f	namespace:madlib::modules::recursive_partitioning
codecs	madpack/yaml/reader.py	/^import codecs, re$/;"	i
coef	modules/crf/linear_crf.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
coef	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::elastic_net::FistaState
coef	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::elastic_net::IgdState
coef	modules/glm/GLM_proto.hpp	/^    MutableNativeColumnVector coef;$/;"	m	class:madlib::modules::glm::GLMResult
coef	modules/glm/MultiResponseGLM_proto.hpp	/^    MutableNativeMatrix coef;$/;"	m	class:madlib::modules::glm::MultiResponseGLMResult
coef	modules/regress/LinearRegression_proto.hpp	/^    MutableNativeColumnVector coef;$/;"	m	class:madlib::modules::regress::LinearRegression
coef	modules/regress/LinearRegression_proto.hpp	/^    MutableNativeColumnVector coef;$/;"	m	class:madlib::modules::regress::RobustLinearRegression
coef	modules/regress/clustered_errors_state.hpp	/^    ColumnVector_type coef;$/;"	m	class:madlib::modules::regress::ClusteredState
coef	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
coef	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::regress::LogRegrIGDTransitionState	file:
coef	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::regress::LogRegrIRLSTransitionState	file:
coef	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::regress::MarginalLogRegrTransitionState	file:
coef	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::regress::RobustLogRegrTransitionState	file:
coef	modules/regress/mlogr_margins.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
coef	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
coef	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::regress::MLogRegrRobustTransitionState	file:
coef	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::stats::CoxPHState
coef	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
coef	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef;$/;"	m	class:madlib::modules::stats::RBHSTransitionState	file:
coef_alpha	modules/glm/Ordinal_proto.hpp	/^    MutableNativeColumnVector coef_alpha;$/;"	m	class:madlib::modules::glm::OrdinalResult
coef_beta	modules/glm/Ordinal_proto.hpp	/^    MutableNativeColumnVector coef_beta;$/;"	m	class:madlib::modules::glm::OrdinalResult
coef_y	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap coef_y;$/;"	m	class:madlib::modules::elastic_net::FistaState
coeffArraySize	modules/convex/type/model.hpp	/^    static inline uint32_t coeffArraySize(const uint16_t &inNumberOfStages,$/;"	f	struct:madlib::modules::convex::MLPModel
colDim	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToInt32 colDim;$/;"	m	struct:madlib::modules::convex::LMFIGDState::TaskState
collationOID	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    Oid collationOID;$/;"	m	struct:madlib::dbconnector::postgres::SystemInformation
complexity	modules/recursive_partitioning/decision_tree.cpp	/^    double complexity;$/;"	m	struct:madlib::modules::recursive_partitioning::SubTreeInfo	file:
compose	madpack/yaml/__init__.py	/^def compose(stream, Loader=Loader):$/;"	f
compose_all	madpack/yaml/__init__.py	/^def compose_all(stream, Loader=Loader):$/;"	f
compose_document	madpack/yaml/composer.py	/^    def compose_document(self):$/;"	m	class:Composer
compose_mapping_node	madpack/yaml/composer.py	/^    def compose_mapping_node(self, anchor):$/;"	m	class:Composer
compose_node	madpack/yaml/composer.py	/^    def compose_node(self, parent, index):$/;"	m	class:Composer
compose_scalar_node	madpack/yaml/composer.py	/^    def compose_scalar_node(self, anchor):$/;"	m	class:Composer
compose_sequence_node	madpack/yaml/composer.py	/^    def compose_sequence_node(self, anchor):$/;"	m	class:Composer
compute	modules/glm/GLM_impl.hpp	/^GLMResult::compute(const GLMAccumulator<Container>& state) {$/;"	f	class:madlib::modules::glm::GLMResult
compute	modules/glm/MultiResponseGLM_impl.hpp	/^MultiResponseGLMResult::compute(const MultiResponseGLMAccumulator<Container>& state) {$/;"	f	class:madlib::modules::glm::MultiResponseGLMResult
compute	modules/glm/Ordinal_impl.hpp	/^OrdinalResult::compute(const OrdinalAccumulator<Container>& state) {$/;"	f	class:madlib::modules::glm::OrdinalResult
compute	modules/regress/LinearRegression_impl.hpp	/^HeteroLinearRegression::compute($/;"	f	class:madlib::modules::regress::HeteroLinearRegression
compute	modules/regress/LinearRegression_impl.hpp	/^LinearRegression::compute($/;"	f	class:madlib::modules::regress::LinearRegression
compute	modules/regress/LinearRegression_impl.hpp	/^RobustLinearRegression::compute($/;"	f	class:madlib::modules::regress::RobustLinearRegression
computeEntropy	modules/recursive_partitioning/DT_impl.hpp	/^computeEntropy(const double &p) {$/;"	f	namespace:madlib::modules::recursive_partitioning::__anon22
computeExtras	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp	/^SymmetricPositiveDefiniteEigenDecomposition<MatrixType>::computeExtras($/;"	f	class:madlib::dbal::eigen_integration::SymmetricPositiveDefiniteEigenDecomposition
computeMisclassification	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::computeMisclassification(Index node_index) const {$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
computeRMSE	modules/convex/type/state.hpp	/^    inline void computeRMSE() {$/;"	f	class:madlib::modules::convex::LMFIGDState
computeRisk	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::computeRisk(const Index node_index) const {$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
computeSubIndex	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::computeSubIndex(Index start_index,$/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
computeVariableImportance	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::computeVariableImportance($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
compute_exp_Mi	modules/crf/linear_crf.cpp	/^void compute_exp_Mi(int num_labels, Eigen::MatrixXd &Mi, Eigen::VectorXd &Vi) {$/;"	f	namespace:madlib::modules::crf
compute_gradient	modules/elastic_net/elastic_net_binomial_igd.cpp	/^inline void BinomialIgd::compute_gradient (ColumnVector& gradient,$/;"	f	class:madlib::modules::elastic_net::BinomialIgd
compute_gradient	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^inline void GaussianIgd::compute_gradient ($/;"	f	class:madlib::modules::elastic_net::GaussianIgd
compute_logli_gradient	modules/crf/linear_crf.cpp	/^void compute_logli_gradient(LinCrfLBFGSTransitionState<MutableArrayHandle<double> >& state,$/;"	f	namespace:madlib::modules::crf
con_args	madpack/madpack.py	/^con_args = {}       # DB connection arguments$/;"	v
con_splits	modules/recursive_partitioning/ConSplits.hpp	/^    Matrix_type con_splits;$/;"	m	class:madlib::modules::recursive_partitioning::ConSplitsResult
con_stats	modules/recursive_partitioning/DT_proto.hpp	/^    Matrix_type con_stats;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
conditionNo	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp	/^SymmetricPositiveDefiniteEigenDecomposition<MatrixType>::conditionNo()$/;"	f	class:madlib::dbal::eigen_integration::SymmetricPositiveDefiniteEigenDecomposition
conditionNo	modules/regress/LinearRegression_proto.hpp	/^    double conditionNo;$/;"	m	class:madlib::modules::regress::LinearRegression
conditionNo	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble conditionNo;$/;"	m	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
configyml	madpack/madpack.py	/^import configyml$/;"	i
configyml	madpack/sort-module.py	/^import configyml$/;"	i
consistencyCheck	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::consistencyCheck() const {$/;"	f	class:madlib::dbconnector::postgres::AnyType
const_pointer	utils/MallocAllocator.hpp	/^    typedef const T* const_pointer;$/;"	t	class:madlib::utils::MallocAllocator
const_pointer	utils/MallocAllocator.hpp	/^    typedef const void* const_pointer;$/;"	t	class:madlib::utils::MallocAllocator
const_reference	utils/MallocAllocator.hpp	/^    typedef const T& const_reference;$/;"	t	class:madlib::utils::MallocAllocator
const_state_type	modules/convex/algo/gradient.hpp	/^    typedef ConstState const_state_type;$/;"	t	class:madlib::modules::convex::Gradient
const_state_type	modules/convex/algo/gradient_norm.hpp	/^    typedef ConstState const_state_type;$/;"	t	class:madlib::modules::convex::Gradient
const_state_type	modules/convex/algo/igd.hpp	/^    typedef ConstState const_state_type;$/;"	t	class:madlib::modules::convex::IGD
const_state_type	modules/convex/algo/loss.hpp	/^    typedef ConstState const_state_type;$/;"	t	class:madlib::modules::convex::Loss
const_state_type	modules/convex/algo/newton.hpp	/^    typedef ConstState const_state_type;$/;"	t	class:madlib::modules::convex::Newton
construct	utils/MallocAllocator.hpp	/^    void construct(pointer p, const T& val) {$/;"	f	class:madlib::utils::MallocAllocator
construct_array_zero	ports/postgres/dbconnector/Compatibility.hpp	/^static ArrayType* construct_array_zero$/;"	f	namespace:madlib::dbconnector::postgres
construct_document	madpack/yaml/constructor.py	/^    def construct_document(self, node):$/;"	m	class:BaseConstructor
construct_mapping	madpack/yaml/constructor.py	/^    def construct_mapping(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_mapping	madpack/yaml/constructor.py	/^    def construct_mapping(self, node, deep=False):$/;"	m	class:SafeConstructor
construct_md_array_zero	ports/postgres/dbconnector/Compatibility.hpp	/^static ArrayType* construct_md_array_zero$/;"	f	namespace:madlib::dbconnector::postgres
construct_object	madpack/yaml/constructor.py	/^    def construct_object(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_pairs	madpack/yaml/constructor.py	/^    def construct_pairs(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_python_complex	madpack/yaml/constructor.py	/^    def construct_python_complex(self, node):$/;"	m	class:Constructor
construct_python_long	madpack/yaml/constructor.py	/^    def construct_python_long(self, node):$/;"	m	class:Constructor
construct_python_module	madpack/yaml/constructor.py	/^    def construct_python_module(self, suffix, node):$/;"	m	class:Constructor
construct_python_name	madpack/yaml/constructor.py	/^    def construct_python_name(self, suffix, node):$/;"	m	class:Constructor
construct_python_object	madpack/yaml/constructor.py	/^    def construct_python_object(self, suffix, node):$/;"	m	class:Constructor
construct_python_object_apply	madpack/yaml/constructor.py	/^    def construct_python_object_apply(self, suffix, node, newobj=False):$/;"	m	class:Constructor
construct_python_object_new	madpack/yaml/constructor.py	/^    def construct_python_object_new(self, suffix, node):$/;"	m	class:Constructor
construct_python_str	madpack/yaml/constructor.py	/^    def construct_python_str(self, node):$/;"	m	class:Constructor
construct_python_tuple	madpack/yaml/constructor.py	/^    def construct_python_tuple(self, node):$/;"	m	class:Constructor
construct_python_unicode	madpack/yaml/constructor.py	/^    def construct_python_unicode(self, node):$/;"	m	class:Constructor
construct_scalar	madpack/yaml/constructor.py	/^    def construct_scalar(self, node):$/;"	m	class:BaseConstructor
construct_scalar	madpack/yaml/constructor.py	/^    def construct_scalar(self, node):$/;"	m	class:SafeConstructor
construct_sequence	madpack/yaml/constructor.py	/^    def construct_sequence(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_undefined	madpack/yaml/constructor.py	/^    def construct_undefined(self, node):$/;"	m	class:SafeConstructor
construct_yaml_binary	madpack/yaml/constructor.py	/^    def construct_yaml_binary(self, node):$/;"	m	class:SafeConstructor
construct_yaml_bool	madpack/yaml/constructor.py	/^    def construct_yaml_bool(self, node):$/;"	m	class:SafeConstructor
construct_yaml_float	madpack/yaml/constructor.py	/^    def construct_yaml_float(self, node):$/;"	m	class:SafeConstructor
construct_yaml_int	madpack/yaml/constructor.py	/^    def construct_yaml_int(self, node):$/;"	m	class:SafeConstructor
construct_yaml_map	madpack/yaml/constructor.py	/^    def construct_yaml_map(self, node):$/;"	m	class:SafeConstructor
construct_yaml_null	madpack/yaml/constructor.py	/^    def construct_yaml_null(self, node):$/;"	m	class:SafeConstructor
construct_yaml_object	madpack/yaml/constructor.py	/^    def construct_yaml_object(self, node, cls):$/;"	m	class:SafeConstructor
construct_yaml_omap	madpack/yaml/constructor.py	/^    def construct_yaml_omap(self, node):$/;"	m	class:SafeConstructor
construct_yaml_pairs	madpack/yaml/constructor.py	/^    def construct_yaml_pairs(self, node):$/;"	m	class:SafeConstructor
construct_yaml_seq	madpack/yaml/constructor.py	/^    def construct_yaml_seq(self, node):$/;"	m	class:SafeConstructor
construct_yaml_set	madpack/yaml/constructor.py	/^    def construct_yaml_set(self, node):$/;"	m	class:SafeConstructor
construct_yaml_str	madpack/yaml/constructor.py	/^    def construct_yaml_str(self, node):$/;"	m	class:SafeConstructor
construct_yaml_timestamp	madpack/yaml/constructor.py	/^    def construct_yaml_timestamp(self, node):$/;"	m	class:SafeConstructor
consume_optional	madpack/argparse.py	/^        def consume_optional(start_index):$/;"	f	function:ArgumentParser._parse_known_args
consume_positionals	madpack/argparse.py	/^        def consume_positionals(start_index):$/;"	f	function:ArgumentParser._parse_known_args
convertTo	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    convertTo(const T& inOrig) : mOrig(inOrig) { }$/;"	f	class:madlib::dbconnector::postgres::convertTo
convertTo	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^class convertTo {$/;"	c	namespace:madlib::dbconnector::postgres
convert_arg_line_to_args	madpack/argparse.py	/^    def convert_arg_line_to_args(self, arg_line):$/;"	m	class:ArgumentParser
convex	modules/convex/algo/gradient.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/algo/gradient_norm.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/algo/igd.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/algo/loss.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/algo/newton.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/linear_svm_igd.cpp	/^namespace convex {$/;"	n	namespace:madlib::modules	file:
convex	modules/convex/lmf_igd.cpp	/^namespace convex {$/;"	n	namespace:madlib::modules	file:
convex	modules/convex/mlp_igd.cpp	/^namespace convex {$/;"	n	namespace:madlib::modules	file:
convex	modules/convex/newton.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/task/l1.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/task/l2.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/task/linear_svm.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/task/lmf.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/task/mlp.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/task/ols.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/type/dependent_variable.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/type/hessian.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/type/independent_variables.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/type/model.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/type/state.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/type/tuple.hpp	/^namespace convex {$/;"	n	namespace:madlib::modules
convex	modules/convex/utils_regularization.cpp	/^namespace convex {$/;"	n	namespace:madlib::modules	file:
copy	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, Mutable>::copy($/;"	f	class:madlib::dbal::DynamicStruct
copy_reg	madpack/yaml/representer.py	/^import sys, copy_reg, types$/;"	i
correctedX_square_sum	modules/stats/t_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble correctedX_square_sum;$/;"	m	class:madlib::modules::stats::TTestTransitionState	file:
correctedY_square_sum	modules/stats/t_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble correctedY_square_sum;$/;"	m	class:madlib::modules::stats::TTestTransitionState	file:
corrected_square_sum	modules/stats/one_way_anova.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap corrected_square_sum;$/;"	m	class:madlib::modules::stats::OWATransitionState	file:
cosineSimilarity	modules/linalg/metric.cpp	/^cosineSimilarity(const MappedColumnVector& inX, const MappedColumnVector& inY) {$/;"	f	namespace:madlib::modules::linalg
count_type	modules/convex/type/state.hpp	/^    typedef typename HandleTraits<Handle>::ReferenceToUInt64 count_type;$/;"	t	class:madlib::modules::convex::MLPIGDState
count_type	modules/convex/type/state.hpp	/^    typedef typename HandleTraits<Handle>::ReferenceToUInt64 count_type;$/;"	t	class:madlib::modules::convex::MLPMiniBatchState
cp	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
create	libstemmer/libstemmer/libstemmer.c	/^    struct SN_env * (*create)(void);$/;"	m	struct:sb_stemmer	typeref:struct:sb_stemmer::create	file:
create	libstemmer/libstemmer/modules.h	/^  struct SN_env * (*create)(void);$/;"	m	struct:stemmer_modules	typeref:struct:stemmer_modules::create
create_install_madlib_sqlfile	madpack/madpack.py	/^def create_install_madlib_sqlfile(args, madpack_cmd):$/;"	f
create_s	libstemmer/runtime/utilities.c	/^extern symbol * create_s(void) {$/;"	f
crf	modules/crf/linear_crf.cpp	/^namespace crf {$/;"	n	namespace:madlib::modules	file:
crf	modules/crf/viterbi.cpp	/^namespace crf {$/;"	n	namespace:madlib::modules	file:
cur_call	modules/linalg/svd.cpp	/^    int32_t cur_call;$/;"	m	struct:madlib::modules::linalg::__sr_ctx	file:
curcall	modules/lda/lda.cpp	/^    int32_t curcall;$/;"	m	struct:madlib::modules::lda::__sr_ctx	file:
curcall	modules/linalg/matrix_ops.cpp	/^    int32_t curcall;$/;"	m	struct:madlib::modules::linalg::__sr_ctx1	file:
curcall	modules/linalg/matrix_ops.cpp	/^    int32_t curcall;$/;"	m	struct:madlib::modules::linalg::__sr_ctx2	file:
curcall	modules/regress/multilogistic.cpp	/^    int32_t curcall;$/;"	m	struct:madlib::modules::regress::__sr_ctx	file:
curr_col	modules/linalg/dim_conversion.cpp	/^    Index curr_col;$/;"	m	struct:madlib::modules::linalg::__anon14::Deconstruct2DArrayContext	file:
current_list	madpack/create_changelist.py	/^                            current_list = uda_list$/;"	v
current_list	madpack/create_changelist.py	/^                    current_list = uda_list$/;"	v
current_list	madpack/create_changelist.py	/^    current_list = udf_list$/;"	v
cxx_func	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    UDF::Pointer cxx_func;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
danish_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^extern void danish_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 1); }$/;"	f
danish_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^extern struct SN_env * danish_ISO_8859_1_create_env(void) { return SN_create_env(1, 2, 0); }$/;"	f
danish_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^extern int danish_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
danish_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_danish.c	/^extern void danish_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 1); }$/;"	f
danish_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_danish.c	/^extern struct SN_env * danish_UTF_8_create_env(void) { return SN_create_env(1, 2, 0); }$/;"	f
danish_UTF_8_stem	libstemmer/src_c/stem_UTF_8_danish.c	/^extern int danish_UTF_8_stem(struct SN_env * z) {$/;"	f
database	madpack/create_changelist.py	/^database = sys.argv[1]$/;"	v
datetime	madpack/madpack.py	/^import datetime$/;"	i
datetime	madpack/yaml/constructor.py	/^import datetime$/;"	i
datetime	madpack/yaml/representer.py	/^import datetime$/;"	i
dbal	dbal/ByteStreamHandleBuf_impl.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/ByteStreamHandleBuf_proto.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/ByteStream_impl.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/ByteStream_proto.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/DynamicStruct_impl.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/DynamicStruct_proto.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/EigenIntegration/EigenIntegration.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/EigenIntegration/HandleMap_impl.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/EigenIntegration/HandleMap_proto.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/Exceptions/NoSolutionFoundException_proto.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/OutputStreamBufferBase_impl.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/OutputStreamBufferBase_proto.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/Reference_impl.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/Reference_proto.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	dbal/dbal_proto.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbal	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^namespace dbal {$/;"	n	namespace:madlib
dbconnector	ports/greenplum/dbconnector/Compatibility.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/Allocator_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/Allocator_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/AnyType_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/AnyType_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/ArrayWithNullException_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/Backend.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/ByteString_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/ByteString_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/Compatibility.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/FunctionHandle_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/NativeRandomNumberGenerator_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/NativeRandomNumberGenerator_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/PGException_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/TransparentHandle_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/TypeTraits_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/UDF_impl.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/UDF_proto.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/dbconnector.hpp	/^namespace dbconnector {$/;"	n	namespace:madlib
dbconnector	ports/postgres/dbconnector/main.cpp	/^namespace dbconnector {$/;"	n	namespace:madlib	file:
dbver	madpack/madpack.py	/^dbver = None        # DB version$/;"	v
deallocate	utils/MallocAllocator.hpp	/^    void deallocate(pointer p, size_type \/* n *\/) {$/;"	f	class:madlib::utils::MallocAllocator
defaultAllocator	ports/postgres/dbconnector/Allocator_impl.hpp	/^defaultAllocator() {$/;"	f	namespace:madlib::dbconnector::postgres
defaultdict	madpack/upgrade_util.py	/^from collections import defaultdict, Iterable$/;"	i
delta	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap delta;$/;"	m	class:madlib::modules::regress::MarginalLogRegrTransitionState	file:
delta	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap delta;   \/\/ S$/;"	m	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
delta	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap delta;$/;"	m	class:madlib::modules::regress::MarginsLinregrInteractionState	file:
delta	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap delta;$/;"	m	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
delta	modules/regress/mlogr_margins.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap delta;$/;"	m	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
delta	modules/stats/marginal_cox.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap delta;$/;"	m	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
depVar	modules/convex/type/tuple.hpp	/^    dependent_variable_type depVar;$/;"	m	struct:madlib::modules::convex::ExampleTuple
dependent_variable_type	modules/convex/task/linear_svm.hpp	/^    typedef typename Tuple::dependent_variable_type dependent_variable_type;$/;"	t	class:madlib::modules::convex::LinearSVM
dependent_variable_type	modules/convex/task/lmf.hpp	/^    typedef typename Tuple::dependent_variable_type dependent_variable_type;$/;"	t	class:madlib::modules::convex::LMF
dependent_variable_type	modules/convex/task/mlp.hpp	/^    typedef typename Tuple::dependent_variable_type dependent_variable_type;$/;"	t	class:madlib::modules::convex::MLP
dependent_variable_type	modules/convex/task/ols.hpp	/^    typedef typename Tuple::dependent_variable_type dependent_variable_type;$/;"	t	class:madlib::modules::convex::OLS
dependent_variable_type	modules/convex/type/tuple.hpp	/^    typedef DependentVariable dependent_variable_type;$/;"	t	struct:madlib::modules::convex::ExampleTuple
descend_resolver	madpack/yaml/resolver.py	/^    def descend_resolver(self, current_node, current_index):$/;"	m	class:BaseResolver
destroy	utils/MallocAllocator.hpp	/^    void destroy(pointer p) {$/;"	f	class:madlib::utils::MallocAllocator
determine_chomp	madpack/yaml/emitter.py	/^    def determine_chomp(self, text):$/;"	m	class:Emitter
determine_encoding	madpack/yaml/reader.py	/^    def determine_encoding(self):$/;"	m	class:Reader
df	modules/stats/chi_squared_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToInt64 df;$/;"	m	class:madlib::modules::stats::Chi2TestTransitionState	file:
dg	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
dgettext	ports/postgres/dbconnector/dbconnector.hpp	69;"	d
dginit	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
dgm	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
dgtest	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
dgx	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
dgxm	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
dgy	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
dgym	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
diag	modules/crf/linear_crf.cpp	/^    ColumnVector diag;$/;"	m	class:madlib::modules::crf::LBFGS	file:
diag	modules/crf/linear_crf.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap diag;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
diff_coef	modules/tsa/arima.cpp	/^static int * diff_coef (int d)$/;"	f	namespace:madlib::modules::tsa
difference_type	utils/MallocAllocator.hpp	/^    typedef std::ptrdiff_t difference_type;$/;"	t	class:madlib::utils::MallocAllocator
dim	modules/lda/lda.cpp	/^    int32_t dim;$/;"	m	struct:madlib::modules::lda::__sr_ctx	file:
dim	modules/linalg/matrix_ops.cpp	/^    int32_t dim;$/;"	m	struct:madlib::modules::linalg::__sr_ctx1	file:
dim	modules/linalg/matrix_ops.cpp	/^    int32_t dim;$/;"	m	struct:madlib::modules::linalg::__sr_ctx2	file:
dimension	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToUInt16 dimension;$/;"	m	struct:madlib::modules::convex::GLMNewtonState::TaskState
dimension	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToUInt32 dimension;$/;"	m	struct:madlib::modules::convex::GLMCGState::TaskState
dimension	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToUInt32 dimension;$/;"	m	struct:madlib::modules::convex::GLMIGDState::TaskState
dimension	modules/convex/utils_regularization.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 dimension;$/;"	m	class:madlib::modules::convex::ScalesState	file:
dimension	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 dimension;$/;"	m	class:madlib::modules::elastic_net::FistaState
dimension	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 dimension;$/;"	m	class:madlib::modules::elastic_net::IgdState
dimension_pointer_type	modules/convex/type/state.hpp	/^    typedef typename HandleTraits<Handle>::DoublePtr dimension_pointer_type;$/;"	t	class:madlib::modules::convex::MLPIGDState
dimension_pointer_type	modules/convex/type/state.hpp	/^    typedef typename HandleTraits<Handle>::DoublePtr dimension_pointer_type;$/;"	t	class:madlib::modules::convex::MLPMiniBatchState
dimension_type	modules/convex/type/state.hpp	/^    typedef typename HandleTraits<Handle>::ReferenceToUInt16 dimension_type;$/;"	t	class:madlib::modules::convex::MLPIGDState
dimension_type	modules/convex/type/state.hpp	/^    typedef typename HandleTraits<Handle>::ReferenceToUInt16 dimension_type;$/;"	t	class:madlib::modules::convex::MLPMiniBatchState
dims	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^ArrayHandle<T>::dims() const {$/;"	f	class:madlib::dbconnector::postgres::ArrayHandle
dir	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap dir;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
direct_dense_stateToResult	modules/linear_systems/dense_linear_systems.cpp	/^AnyType direct_dense_stateToResult($/;"	f	namespace:madlib::modules::linear_systems
direct_sparse_stateToResult	modules/linear_systems/sparse_linear_systems.cpp	/^AnyType direct_sparse_stateToResult($/;"	f	namespace:madlib::modules::linear_systems
direction	modules/convex/type/state.hpp	/^        TransparentColumnVector direction;$/;"	m	struct:madlib::modules::convex::GLMCGState::TaskState
dispersion	modules/glm/GLM_proto.hpp	/^    double dispersion;$/;"	m	class:madlib::modules::glm::GLMResult
dispersion	modules/glm/GLM_proto.hpp	/^    double_type dispersion; \/\/ to calculate loglik$/;"	m	class:madlib::modules::glm::GLMAccumulator
dispersion_accum	modules/glm/GLM_proto.hpp	/^    double_type dispersion_accum; \/\/ to accumulate the dispersion$/;"	m	class:madlib::modules::glm::GLMAccumulator
display	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::display($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
displayInternalNode	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::displayInternalNode($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
displayLeafNode	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::displayLeafNode($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
distAngle	modules/linalg/metric.cpp	/^distAngle(const MappedColumnVector& inX, const MappedColumnVector& inY) {$/;"	f	namespace:madlib::modules::linalg
distJaccard	modules/linalg/metric.cpp	/^distJaccard(const ArrayHandle<text*>& inX, const ArrayHandle<text*>& inY) {$/;"	f	namespace:madlib::modules::linalg
distNorm1	modules/linalg/metric.cpp	/^distNorm1(const MappedColumnVector& inX, const MappedColumnVector& inY) {$/;"	f	namespace:madlib::modules::linalg
distNorm2	modules/linalg/metric.cpp	/^distNorm2(const MappedColumnVector& inX, const MappedColumnVector& inY) {$/;"	f	namespace:madlib::modules::linalg
distPNorm	modules/linalg/metric.cpp	/^distPNorm(const MappedColumnVector& inX, const MappedColumnVector& inY, double p) {$/;"	f	namespace:madlib::modules::linalg
distTanimoto	modules/linalg/metric.cpp	/^distTanimoto(const MappedColumnVector& inX, const MappedColumnVector& inY) {$/;"	f	namespace:madlib::modules::linalg
dist_fn_name	modules/linalg/metric.cpp	/^std::string dist_fn_name(string s)$/;"	f	namespace:madlib::modules::linalg
dngettext	ports/postgres/dbconnector/dbconnector.hpp	77;"	d
dot	dbal/EigenIntegration/EigenIntegration.hpp	/^static dot($/;"	f	namespace:madlib::dbal::eigen_integration
drop_changed_uda	madpack/upgrade_util.py	/^    def drop_changed_uda(self):$/;"	m	class:ChangeHandler
drop_changed_udc	madpack/upgrade_util.py	/^    def drop_changed_udc(self):$/;"	m	class:ChangeHandler
drop_changed_udf	madpack/upgrade_util.py	/^    def drop_changed_udf(self):$/;"	m	class:ChangeHandler
drop_changed_udo	madpack/upgrade_util.py	/^    def drop_changed_udo(self):$/;"	m	class:ChangeHandler
drop_changed_udoc	madpack/upgrade_util.py	/^    def drop_changed_udoc(self):$/;"	m	class:ChangeHandler
drop_changed_udt	madpack/upgrade_util.py	/^    def drop_changed_udt(self):$/;"	m	class:ChangeHandler
drop_traininginfo_4dt	madpack/upgrade_util.py	/^    def drop_traininginfo_4dt(self):$/;"	m	class:ChangeHandler
dump	madpack/yaml/__init__.py	/^def dump(data, stream=None, Dumper=Dumper, **kwds):$/;"	f
dump_all	madpack/yaml/__init__.py	/^def dump_all(documents, stream=None, Dumper=Dumper,$/;"	f
dutch_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^extern void dutch_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
dutch_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^extern struct SN_env * dutch_ISO_8859_1_create_env(void) { return SN_create_env(0, 2, 1); }$/;"	f
dutch_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^extern int dutch_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
dutch_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_dutch.c	/^extern void dutch_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
dutch_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_dutch.c	/^extern struct SN_env * dutch_UTF_8_create_env(void) { return SN_create_env(0, 2, 1); }$/;"	f
dutch_UTF_8_stem	libstemmer/src_c/stem_UTF_8_dutch.c	/^extern int dutch_UTF_8_stem(struct SN_env * z) {$/;"	f
eigen_assert	ports/postgres/dbconnector/dbconnector.hpp	116;"	d
eigen_integration	dbal/DynamicStruct_proto.hpp	/^namespace eigen_integration {$/;"	n	namespace:madlib::dbal
eigen_integration	dbal/EigenIntegration/EigenIntegration.hpp	/^namespace eigen_integration {$/;"	n	namespace:madlib::dbal
eigen_integration	dbal/EigenIntegration/HandleMap_impl.hpp	/^namespace eigen_integration {$/;"	n	namespace:madlib::dbal
eigen_integration	dbal/EigenIntegration/HandleMap_proto.hpp	/^namespace eigen_integration {$/;"	n	namespace:madlib::dbal
eigen_integration	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp	/^namespace eigen_integration {$/;"	n	namespace:madlib::dbal
eigen_integration	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp	/^namespace eigen_integration {$/;"	n	namespace:madlib::dbal
eigen_integration	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^namespace eigen_integration {$/;"	n	namespace:madlib::dbal
eigen_integration	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^namespace eigen_integration {$/;"	n	namespace:madlib::dbal
elastic_net	modules/elastic_net/elastic_net_binomial_fista.cpp	/^namespace elastic_net {$/;"	n	namespace:madlib::modules	file:
elastic_net	modules/elastic_net/elastic_net_binomial_igd.cpp	/^namespace elastic_net {$/;"	n	namespace:madlib::modules	file:
elastic_net	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^namespace elastic_net {$/;"	n	namespace:madlib::modules	file:
elastic_net	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^namespace elastic_net {$/;"	n	namespace:madlib::modules	file:
elastic_net	modules/elastic_net/elastic_net_optimizer_fista.hpp	/^namespace elastic_net {$/;"	n	namespace:madlib::modules
elastic_net	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^namespace elastic_net {$/;"	n	namespace:madlib::modules
elastic_net	modules/elastic_net/elastic_net_utils.cpp	/^namespace elastic_net {$/;"	n	namespace:madlib::modules	file:
elastic_net	modules/elastic_net/share/shared_utils.hpp	/^namespace elastic_net {$/;"	n	namespace:madlib::modules
elastic_net	modules/elastic_net/state/fista.hpp	/^namespace elastic_net {$/;"	n	namespace:madlib::modules
elastic_net	modules/elastic_net/state/igd.hpp	/^namespace elastic_net {$/;"	n	namespace:madlib::modules
emit	madpack/yaml/__init__.py	/^def emit(events, stream=None, Dumper=Dumper,$/;"	f
emit	madpack/yaml/emitter.py	/^    def emit(self, event):$/;"	m	class:Emitter
empty	modules/glm/GLM_proto.hpp	/^    bool empty() const { return this->num_rows == 0; }$/;"	f	class:madlib::modules::glm::GLMAccumulator
empty	modules/glm/MultiResponseGLM_proto.hpp	/^    bool empty() const { return this->num_rows == 0; }$/;"	f	class:madlib::modules::glm::MultiResponseGLMAccumulator
empty	modules/glm/Ordinal_proto.hpp	/^    bool empty() const { return this->num_rows == 0; }$/;"	f	class:madlib::modules::glm::OrdinalAccumulator
empty	modules/recursive_partitioning/ConSplits.hpp	/^    bool empty() const { return this->num_rows == 0; }$/;"	f	class:madlib::modules::recursive_partitioning::ConSplitsSample
empty	modules/recursive_partitioning/DT_proto.hpp	/^    bool empty() const { return this->n_rows == 0; }$/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
enc	libstemmer/libstemmer/modules.h	/^  stemmer_encoding_t enc; $/;"	m	struct:stemmer_modules
enc	libstemmer/libstemmer/modules.h	/^  stemmer_encoding_t enc;$/;"	m	struct:stemmer_encoding
encodeIndex	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::encodeIndex(const int &feature_index,$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
encodings	libstemmer/libstemmer/modules.h	/^static struct stemmer_encoding encodings[] = {$/;"	v	typeref:struct:stemmer_encoding
end	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, IsMutable>::end() const {$/;"	f	class:madlib::dbal::DynamicStruct
end_section	madpack/argparse.py	/^    def end_section(self):$/;"	m	class:HelpFormatter
english_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_english.c	/^extern void english_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
english_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_english.c	/^extern struct SN_env * english_ISO_8859_1_create_env(void) { return SN_create_env(0, 2, 1); }$/;"	f
english_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_english.c	/^extern int english_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
english_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_english.c	/^extern void english_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
english_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_english.c	/^extern struct SN_env * english_UTF_8_create_env(void) { return SN_create_env(0, 2, 1); }$/;"	f
english_UTF_8_stem	libstemmer/src_c/stem_UTF_8_english.c	/^extern int english_UTF_8_stem(struct SN_env * z) {$/;"	f
enterDryRun	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::enterDryRun() {$/;"	f	class:madlib::dbal::ByteStream
entryFuncOID	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    Oid entryFuncOID;$/;"	m	struct:madlib::dbconnector::postgres::SystemInformation
env	libstemmer/libstemmer/libstemmer.c	/^    struct SN_env * env;$/;"	m	struct:sb_stemmer	typeref:struct:sb_stemmer::SN_env	file:
eof	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::eof() const {$/;"	f	class:madlib::dbal::ByteStream
epsilon	modules/convex/task/linear_svm.hpp	/^    static double epsilon;$/;"	m	class:madlib::modules::convex::LinearSVM
epsilon	modules/convex/task/linear_svm.hpp	/^double LinearSVM<Model, Tuple >::epsilon = 0.;$/;"	m	class:madlib::modules::convex::LinearSVM
eq_s	libstemmer/runtime/utilities.c	/^extern int eq_s(struct SN_env * z, int s_size, const symbol * s) {$/;"	f
eq_s_b	libstemmer/runtime/utilities.c	/^extern int eq_s_b(struct SN_env * z, int s_size, const symbol * s) {$/;"	f
eq_v	libstemmer/runtime/utilities.c	/^extern int eq_v(struct SN_env * z, const symbol * p) {$/;"	f
eq_v_b	libstemmer/runtime/utilities.c	/^extern int eq_v_b(struct SN_env * z, const symbol * p) {$/;"	f
err1	madpack/create_changelist.py	/^    err1 = os.system("git diff {old_vers} {new_vers} --name-only --diff-filter=A > \/tmp\/madlib_tmp_nm.txt".format(**locals()))$/;"	v
error	madpack/argparse.py	/^    def error(self, message):$/;"	m	class:ArgumentParser
error	modules/tsa/arima.cpp	/^static double error(int tid, const double * tvals, int p, int q,$/;"	f	namespace:madlib::modules::tsa
errorNoPythonFound	bin/madpack	/^errorNoPythonFound() {$/;"	f
error_	madpack/madpack.py	/^from utilities import error_$/;"	i
error_	madpack/utilities.py	/^def error_(src_name, msg, stop=False):$/;"	f
escape_quotes	modules/recursive_partitioning/DT_impl.hpp	/^escape_quotes(const string &before) {$/;"	f	namespace:madlib::modules::recursive_partitioning::__anon22
eta	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble eta;$/;"	m	class:madlib::modules::elastic_net::FistaState
exit	madpack/argparse.py	/^    def exit(self, status=0, message=None):$/;"	m	class:ArgumentParser
expand	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::expand(const Accumulator &state,$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
expand_by_sampling	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::expand_by_sampling(const Accumulator &state,$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
expect_alias	madpack/yaml/emitter.py	/^    def expect_alias(self):$/;"	m	class:Emitter
expect_block_mapping	madpack/yaml/emitter.py	/^    def expect_block_mapping(self):$/;"	m	class:Emitter
expect_block_mapping_key	madpack/yaml/emitter.py	/^    def expect_block_mapping_key(self, first=False):$/;"	m	class:Emitter
expect_block_mapping_simple_value	madpack/yaml/emitter.py	/^    def expect_block_mapping_simple_value(self):$/;"	m	class:Emitter
expect_block_mapping_value	madpack/yaml/emitter.py	/^    def expect_block_mapping_value(self):$/;"	m	class:Emitter
expect_block_sequence	madpack/yaml/emitter.py	/^    def expect_block_sequence(self):$/;"	m	class:Emitter
expect_block_sequence_item	madpack/yaml/emitter.py	/^    def expect_block_sequence_item(self, first=False):$/;"	m	class:Emitter
expect_document_end	madpack/yaml/emitter.py	/^    def expect_document_end(self):$/;"	m	class:Emitter
expect_document_root	madpack/yaml/emitter.py	/^    def expect_document_root(self):$/;"	m	class:Emitter
expect_document_start	madpack/yaml/emitter.py	/^    def expect_document_start(self, first=False):$/;"	m	class:Emitter
expect_first_block_mapping_key	madpack/yaml/emitter.py	/^    def expect_first_block_mapping_key(self):$/;"	m	class:Emitter
expect_first_block_sequence_item	madpack/yaml/emitter.py	/^    def expect_first_block_sequence_item(self):$/;"	m	class:Emitter
expect_first_document_start	madpack/yaml/emitter.py	/^    def expect_first_document_start(self):$/;"	m	class:Emitter
expect_first_flow_mapping_key	madpack/yaml/emitter.py	/^    def expect_first_flow_mapping_key(self):$/;"	m	class:Emitter
expect_first_flow_sequence_item	madpack/yaml/emitter.py	/^    def expect_first_flow_sequence_item(self):$/;"	m	class:Emitter
expect_flow_mapping	madpack/yaml/emitter.py	/^    def expect_flow_mapping(self):$/;"	m	class:Emitter
expect_flow_mapping_key	madpack/yaml/emitter.py	/^    def expect_flow_mapping_key(self):$/;"	m	class:Emitter
expect_flow_mapping_simple_value	madpack/yaml/emitter.py	/^    def expect_flow_mapping_simple_value(self):$/;"	m	class:Emitter
expect_flow_mapping_value	madpack/yaml/emitter.py	/^    def expect_flow_mapping_value(self):$/;"	m	class:Emitter
expect_flow_sequence	madpack/yaml/emitter.py	/^    def expect_flow_sequence(self):$/;"	m	class:Emitter
expect_flow_sequence_item	madpack/yaml/emitter.py	/^    def expect_flow_sequence_item(self):$/;"	m	class:Emitter
expect_node	madpack/yaml/emitter.py	/^    def expect_node(self, root=False, sequence=False, mapping=False,$/;"	m	class:Emitter
expect_nothing	madpack/yaml/emitter.py	/^    def expect_nothing(self):$/;"	m	class:Emitter
expect_scalar	madpack/yaml/emitter.py	/^    def expect_scalar(self):$/;"	m	class:Emitter
expect_stream_start	madpack/yaml/emitter.py	/^    def expect_stream_start(self):$/;"	m	class:Emitter
expectedNum	modules/stats/kolmogorov_smirnov_test.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap expectedNum;$/;"	m	class:madlib::modules::stats::KSTestTransitionState	file:
f	madpack/create_changelist.py	/^    f = open("\/tmp\/madlib_tmp_cl.yaml", "w")$/;"	v
falseChild	modules/recursive_partitioning/DT_proto.hpp	/^    Index falseChild(Index current) const { return 2 * current + 2; }$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
fcinfo	ports/postgres/dbconnector/Allocator_proto.hpp	/^    FunctionCallInfo fcinfo;$/;"	m	class:madlib::dbconnector::postgres::Allocator
fcinfo	ports/postgres/dbconnector/AnyType_proto.hpp	/^    FunctionCallInfo fcinfo;$/;"	m	class:madlib::dbconnector::postgres::AnyType
feature_indices	modules/recursive_partitioning/DT_proto.hpp	/^    IntegerVector_type feature_indices;$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
feature_thresholds	modules/recursive_partitioning/DT_proto.hpp	/^    ColumnVector_type feature_thresholds;$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
feedForward	modules/convex/task/mlp.hpp	/^MLP<Model, Tuple>::feedForward($/;"	f	class:madlib::modules::convex::MLP
fetch_alias	madpack/yaml/scanner.py	/^    def fetch_alias(self):$/;"	m	class:Scanner
fetch_anchor	madpack/yaml/scanner.py	/^    def fetch_anchor(self):$/;"	m	class:Scanner
fetch_block_entry	madpack/yaml/scanner.py	/^    def fetch_block_entry(self):$/;"	m	class:Scanner
fetch_block_scalar	madpack/yaml/scanner.py	/^    def fetch_block_scalar(self, style):$/;"	m	class:Scanner
fetch_directive	madpack/yaml/scanner.py	/^    def fetch_directive(self):$/;"	m	class:Scanner
fetch_document_end	madpack/yaml/scanner.py	/^    def fetch_document_end(self):$/;"	m	class:Scanner
fetch_document_indicator	madpack/yaml/scanner.py	/^    def fetch_document_indicator(self, TokenClass):$/;"	m	class:Scanner
fetch_document_start	madpack/yaml/scanner.py	/^    def fetch_document_start(self):$/;"	m	class:Scanner
fetch_double	madpack/yaml/scanner.py	/^    def fetch_double(self):$/;"	m	class:Scanner
fetch_flow_collection_end	madpack/yaml/scanner.py	/^    def fetch_flow_collection_end(self, TokenClass):$/;"	m	class:Scanner
fetch_flow_collection_start	madpack/yaml/scanner.py	/^    def fetch_flow_collection_start(self, TokenClass):$/;"	m	class:Scanner
fetch_flow_entry	madpack/yaml/scanner.py	/^    def fetch_flow_entry(self):$/;"	m	class:Scanner
fetch_flow_mapping_end	madpack/yaml/scanner.py	/^    def fetch_flow_mapping_end(self):$/;"	m	class:Scanner
fetch_flow_mapping_start	madpack/yaml/scanner.py	/^    def fetch_flow_mapping_start(self):$/;"	m	class:Scanner
fetch_flow_scalar	madpack/yaml/scanner.py	/^    def fetch_flow_scalar(self, style):$/;"	m	class:Scanner
fetch_flow_sequence_end	madpack/yaml/scanner.py	/^    def fetch_flow_sequence_end(self):$/;"	m	class:Scanner
fetch_flow_sequence_start	madpack/yaml/scanner.py	/^    def fetch_flow_sequence_start(self):$/;"	m	class:Scanner
fetch_folded	madpack/yaml/scanner.py	/^    def fetch_folded(self):$/;"	m	class:Scanner
fetch_key	madpack/yaml/scanner.py	/^    def fetch_key(self):$/;"	m	class:Scanner
fetch_literal	madpack/yaml/scanner.py	/^    def fetch_literal(self):$/;"	m	class:Scanner
fetch_more_tokens	madpack/yaml/scanner.py	/^    def fetch_more_tokens(self):$/;"	m	class:Scanner
fetch_plain	madpack/yaml/scanner.py	/^    def fetch_plain(self):$/;"	m	class:Scanner
fetch_single	madpack/yaml/scanner.py	/^    def fetch_single(self):$/;"	m	class:Scanner
fetch_stream_end	madpack/yaml/scanner.py	/^    def fetch_stream_end(self):$/;"	m	class:Scanner
fetch_stream_start	madpack/yaml/scanner.py	/^    def fetch_stream_start(self):$/;"	m	class:Scanner
fetch_tag	madpack/yaml/scanner.py	/^    def fetch_tag(self):$/;"	m	class:Scanner
fetch_value	madpack/yaml/scanner.py	/^    def fetch_value(self):$/;"	m	class:Scanner
fill_one_row	modules/recursive_partitioning/decision_tree.cpp	/^void fill_one_row(MutableNativeMatrix &frame, Tree &dt, int me, int i,$/;"	f	namespace:madlib::modules::recursive_partitioning
fill_row	modules/recursive_partitioning/decision_tree.cpp	/^void fill_row(MutableNativeMatrix &frame, Tree &dt, int me, int i, int n_cats) {$/;"	f	namespace:madlib::modules::recursive_partitioning
filter_schema	madpack/diff_udf.sql	/^CREATE OR REPLACE FUNCTION filter_schema(argstr text, schema_name text)$/;"	f
filter_schema	madpack/diff_udo.sql	/^CREATE OR REPLACE FUNCTION filter_schema(argstr text, schema_name text)$/;"	f
filter_schema	madpack/diff_udoc.sql	/^CREATE OR REPLACE FUNCTION filter_schema(argstr text, schema_name text)$/;"	f
filter_schema	madpack/diff_udt.sql	/^CREATE OR REPLACE FUNCTION filter_schema(argstr text, schema_name text)$/;"	f
final	modules/convex/algo/igd.hpp	/^IGD<State, ConstState, Task>::final(state_type &state) {$/;"	f	class:madlib::modules::convex::IGD
final	modules/convex/algo/newton.hpp	/^Newton<State, ConstState, Task>::final(state_type &state) {$/;"	f	class:madlib::modules::convex::Newton
find_among	libstemmer/runtime/utilities.c	/^extern int find_among(struct SN_env * z, const struct among * v, int v_size) {$/;"	f
find_among_b	libstemmer/runtime/utilities.c	/^extern int find_among_b(struct SN_env * z, const struct among * v, int v_size) {$/;"	f
find_order	madpack/sort-module.py	/^def find_order(path):$/;"	f
find_python_module	madpack/yaml/constructor.py	/^    def find_python_module(self, name, mark):$/;"	m	class:Constructor
find_python_name	madpack/yaml/constructor.py	/^    def find_python_name(self, name, mark):$/;"	m	class:Constructor
finish	modules/crf/linear_crf.cpp	/^    bool brackt, stage1, finish;$/;"	m	class:madlib::modules::crf::LBFGS	file:
finit	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
finnish_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^extern void finnish_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 1); }$/;"	f
finnish_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^extern struct SN_env * finnish_ISO_8859_1_create_env(void) { return SN_create_env(1, 2, 1); }$/;"	f
finnish_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^extern int finnish_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
finnish_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_finnish.c	/^extern void finnish_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 1); }$/;"	f
finnish_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_finnish.c	/^extern struct SN_env * finnish_UTF_8_create_env(void) { return SN_create_env(1, 2, 1); }$/;"	f
finnish_UTF_8_stem	libstemmer/src_c/stem_UTF_8_finnish.c	/^extern int finnish_UTF_8_stem(struct SN_env * z) {$/;"	f
fista_final	modules/elastic_net/elastic_net_optimizer_fista.hpp	/^AnyType Fista<Model>::fista_final (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::Fista
fista_merge	modules/elastic_net/elastic_net_optimizer_fista.hpp	/^AnyType Fista<Model>::fista_merge (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::Fista
fista_result	modules/elastic_net/elastic_net_optimizer_fista.hpp	/^AnyType Fista<Model>::fista_result (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::Fista
fista_state_diff	modules/elastic_net/elastic_net_optimizer_fista.hpp	/^AnyType Fista<Model>::fista_state_diff (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::Fista
fista_transition	modules/elastic_net/elastic_net_optimizer_fista.hpp	/^AnyType Fista<Model>::fista_transition (AnyType& args, const Allocator& inAllocator)$/;"	f	class:madlib::modules::elastic_net::Fista
flags	modules/assoc_rules/assoc_rules.cpp	/^    bool*    flags;$/;"	m	struct:madlib::modules::assoc_rules::perm_fctx	file:
flatten	madpack/configyml.py	/^def flatten(listOfLists):$/;"	f
flatten_mapping	madpack/yaml/constructor.py	/^    def flatten_mapping(self, node):$/;"	m	class:SafeConstructor
flinfo	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    FmgrInfo flinfo;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
flush_stream	madpack/yaml/emitter.py	/^    def flush_stream(self):$/;"	m	class:Emitter
fm	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
fn	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble fn; \/\/ store the function value in backtracking$/;"	m	class:madlib::modules::elastic_net::FistaState
format	madpack/argparse.py	/^        def format(tuple_size):$/;"	f	function:HelpFormatter._metavar_formatter
format_help	madpack/argparse.py	/^        def format_help(self):$/;"	m	class:HelpFormatter._Section
format_help	madpack/argparse.py	/^    def format_help(self):$/;"	m	class:ArgumentParser
format_help	madpack/argparse.py	/^    def format_help(self):$/;"	m	class:HelpFormatter
format_usage	madpack/argparse.py	/^    def format_usage(self):$/;"	m	class:ArgumentParser
format_version	madpack/argparse.py	/^    def format_version(self):$/;"	m	class:ArgumentParser
forward	madpack/yaml/reader.py	/^    def forward(self, length=1):$/;"	m	class:Reader
free	ports/postgres/dbconnector/Allocator_impl.hpp	/^Allocator::free(void *inPtr) const {$/;"	f	class:madlib::dbconnector::postgres::Allocator
french_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_french.c	/^extern void french_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
french_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_french.c	/^extern struct SN_env * french_ISO_8859_1_create_env(void) { return SN_create_env(0, 3, 0); }$/;"	f
french_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_french.c	/^extern int french_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
french_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_french.c	/^extern void french_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
french_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_french.c	/^extern struct SN_env * french_UTF_8_create_env(void) { return SN_create_env(0, 3, 0); }$/;"	f
french_UTF_8_stem	libstemmer/src_c/stem_UTF_8_french.c	/^extern int french_UTF_8_stem(struct SN_env * z) {$/;"	f
from_yaml	madpack/yaml/__init__.py	/^    def from_yaml(cls, loader, node):$/;"	m	class:YAMLObject
from_yaml	madpack/yaml/__init__.py	/^    from_yaml = classmethod(from_yaml)$/;"	v	class:YAMLObject
ftest1	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
ftol	modules/crf/linear_crf.cpp	/^    double stp1, ftol, stp, sq, yr, beta;$/;"	m	class:madlib::modules::crf::LBFGS	file:
funcID	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::funcID() const {$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle
funcPtr	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::funcPtr() {$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle
funcPtr	ports/postgres/dbconnector/UDF_proto.hpp	/^UDF::Pointer funcPtr() {$/;"	f	namespace:madlib::dbconnector::postgres
funcclass	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    TypeFuncClass funcclass;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
function	libstemmer/runtime/header.h	/^    int (* function)(struct SN_env *);$/;"	m	struct:among
functionInformation	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^SystemInformation::functionInformation(Oid inFuncID) {$/;"	f	class:madlib::dbconnector::postgres::SystemInformation
functions	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    HTAB *functions;$/;"	m	struct:madlib::dbconnector::postgres::SystemInformation
fx	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
fxm	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
fy	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
fym	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
gErrStreamBuffer	ports/postgres/dbconnector/main.cpp	/^OutputStreamBuffer<WARNING, utils::MallocAllocator> gErrStreamBuffer;$/;"	m	namespace:madlib::dbconnector::postgres::__anon93	file:
gErrStreamBuffer	ports/postgres/dbconnector/main.cpp	/^std::ostream dberr(&gErrStreamBuffer);$/;"	m	namespace:madlib::dbconnector::postgres	file:
gOutStreamBuffer	ports/postgres/dbconnector/main.cpp	/^OutputStreamBuffer<INFO, utils::MallocAllocator> gOutStreamBuffer;$/;"	m	namespace:madlib::dbconnector::postgres::__anon93	file:
g_AEI	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const unsigned char g_AEI[] = { 17, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8 };$/;"	v	file:
g_AEI	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const unsigned char g_AEI[] = { 17, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8 };$/;"	v	file:
g_AEIO	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const unsigned char g_AEIO[] = { 17, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 8, 2 };$/;"	v	file:
g_AEIO	libstemmer/src_c/stem_UTF_8_italian.c	/^static const unsigned char g_AEIO[] = { 17, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 8, 2 };$/;"	v	file:
g_CG	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const unsigned char g_CG[] = { 17 };$/;"	v	file:
g_CG	libstemmer/src_c/stem_UTF_8_italian.c	/^static const unsigned char g_CG[] = { 17 };$/;"	v	file:
g_U	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const unsigned char g_U[] = { 1, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_V1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const unsigned char g_V1[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_V1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const unsigned char g_V1[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_V2	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const unsigned char g_V2[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_V2	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const unsigned char g_V2[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_keep_with_s	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const unsigned char g_keep_with_s[] = { 1, 65, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_keep_with_s	libstemmer/src_c/stem_UTF_8_french.c	/^static const unsigned char g_keep_with_s[] = { 1, 65, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_particle_end	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const unsigned char g_particle_end[] = { 17, 97, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_particle_end	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const unsigned char g_particle_end[] = { 17, 97, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_s_ending	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const unsigned char g_s_ending[] = { 239, 254, 42, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16 };$/;"	v	file:
g_s_ending	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const unsigned char g_s_ending[] = { 117, 30, 5 };$/;"	v	file:
g_s_ending	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const unsigned char g_s_ending[] = { 119, 125, 149, 1 };$/;"	v	file:
g_s_ending	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const unsigned char g_s_ending[] = { 119, 127, 149 };$/;"	v	file:
g_s_ending	libstemmer/src_c/stem_UTF_8_danish.c	/^static const unsigned char g_s_ending[] = { 239, 254, 42, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16 };$/;"	v	file:
g_s_ending	libstemmer/src_c/stem_UTF_8_german.c	/^static const unsigned char g_s_ending[] = { 117, 30, 5 };$/;"	v	file:
g_s_ending	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const unsigned char g_s_ending[] = { 119, 125, 149, 1 };$/;"	v	file:
g_s_ending	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const unsigned char g_s_ending[] = { 119, 127, 149 };$/;"	v	file:
g_st_ending	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const unsigned char g_st_ending[] = { 117, 30, 4 };$/;"	v	file:
g_st_ending	libstemmer/src_c/stem_UTF_8_german.c	/^static const unsigned char g_st_ending[] = { 117, 30, 4 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 128 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 130, 103, 8, 5 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32, 8 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 8, 2, 1 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 128 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 19, 12, 2 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17, 4, 10 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 32 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17, 52, 14 };$/;"	v	file:
g_v	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 32 };$/;"	v	file:
g_v	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const unsigned char g_v[] = { 35, 130, 34, 18 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_danish.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 128 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_english.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_french.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 130, 103, 8, 5 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_german.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32, 8 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17, 36, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_italian.c	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 8, 2, 1 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 128 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_porter.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 19, 12, 2 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 32, 0, 0, 4 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_russian.c	/^static const unsigned char g_v[] = { 33, 65, 8, 232 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17, 4, 10 };$/;"	v	file:
g_v	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 32 };$/;"	v	file:
g_v_I	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const unsigned char g_v_I[] = { 1, 0, 0, 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_v_I	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const unsigned char g_v_I[] = { 1, 0, 0, 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_v_WXY	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const unsigned char g_v_WXY[] = { 1, 17, 65, 208, 1 };$/;"	v	file:
g_v_WXY	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const unsigned char g_v_WXY[] = { 1, 17, 65, 208, 1 };$/;"	v	file:
g_v_WXY	libstemmer/src_c/stem_UTF_8_english.c	/^static const unsigned char g_v_WXY[] = { 1, 17, 65, 208, 1 };$/;"	v	file:
g_v_WXY	libstemmer/src_c/stem_UTF_8_porter.c	/^static const unsigned char g_v_WXY[] = { 1, 17, 65, 208, 1 };$/;"	v	file:
g_v_j	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const unsigned char g_v_j[] = { 17, 67, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_v_j	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const unsigned char g_v_j[] = { 17, 67, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_valid_LI	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const unsigned char g_valid_LI[] = { 55, 141, 2 };$/;"	v	file:
g_valid_LI	libstemmer/src_c/stem_UTF_8_english.c	/^static const unsigned char g_valid_LI[] = { 55, 141, 2 };$/;"	v	file:
g_vowel	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const unsigned char g_vowel[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 8, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_vowel1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const unsigned char g_vowel1[] = { 1, 64, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_vowel2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const unsigned char g_vowel2[] = { 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130 };$/;"	v	file:
g_vowel3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const unsigned char g_vowel3[] = { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_vowel4	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const unsigned char g_vowel4[] = { 17 };$/;"	v	file:
g_vowel5	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const unsigned char g_vowel5[] = { 65 };$/;"	v	file:
g_vowel6	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const unsigned char g_vowel6[] = { 65 };$/;"	v	file:
generate_anchor	madpack/yaml/serializer.py	/^    def generate_anchor(self, node):$/;"	m	class:Serializer
german_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_german.c	/^extern void german_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
german_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_german.c	/^extern struct SN_env * german_ISO_8859_1_create_env(void) { return SN_create_env(0, 3, 0); }$/;"	f
german_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_german.c	/^extern int german_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
german_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_german.c	/^extern void german_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
german_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_german.c	/^extern struct SN_env * german_UTF_8_create_env(void) { return SN_create_env(0, 3, 0); }$/;"	f
german_UTF_8_stem	libstemmer/src_c/stem_UTF_8_german.c	/^extern int german_UTF_8_stem(struct SN_env * z) {$/;"	f
get	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^SystemInformation::get(FunctionCallInfo fcinfo) {$/;"	f	class:madlib::dbconnector::postgres::SystemInformation
get	utils/shapeToExtents.hpp	/^    static inline type get(const size_type *inSizeList) {        $/;"	f	struct:madlib::utils::internal_shapeToExtents
get	utils/shapeToExtents.hpp	/^    static inline type get(const size_type *inSizeList) {$/;"	f	struct:madlib::utils::internal_shapeToExtents
getArgumentType	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^FunctionInformation::getArgumentType(uint16_t inArgID, FmgrInfo* inFmgrInfo) {$/;"	f	class:madlib::dbconnector::postgres::FunctionInformation
getArraySize	ports/postgres/dbconnector/ArrayWithNullException_proto.hpp	/^    size_t getArraySize() const { return array_size_; }$/;"	f	class:madlib::dbconnector::postgres::ArrayWithNullException
getAs	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::getAs() const {$/;"	f	class:madlib::dbconnector::postgres::AnyType
getAsDatum	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::getAsDatum(FunctionCallInfo inFnCallInfo,$/;"	f	class:madlib::dbconnector::postgres::AnyType
getCacheMemoryContext	ports/postgres/dbconnector/AnyType_impl.hpp	/^inline MemoryContext AnyType::getCacheMemoryContext(){$/;"	f	class:madlib::dbconnector::postgres::AnyType
getCatLabels	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::getCatLabels(Index cat_index,$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
getFullName	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^FunctionInformation::getFullName() {$/;"	f	class:madlib::dbconnector::postgres::FunctionInformation
getFuncMgrInfo	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^FunctionInformation::getFuncMgrInfo() {$/;"	f	class:madlib::dbconnector::postgres::FunctionInformation
getFunctionCallOptions	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::getFunctionCallOptions() const {$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle
getLen	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^TypeInformation::getLen() {$/;"	f	class:madlib::dbconnector::postgres::TypeInformation
getLoss	modules/convex/task/mlp.hpp	/^MLP<Model, Tuple>::getLoss(const ColumnVector &y_true,$/;"	f	class:madlib::modules::convex::MLP
getLossAndUpdateModel	modules/convex/task/mlp.hpp	/^MLP<Model, Tuple>::getLossAndUpdateModel($/;"	f	class:madlib::modules::convex::MLP
getMajorityCount	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::getMajorityCount(Index node_index) const {$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
getMajoritySplit	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::getMajoritySplit(Index node_index) const {$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
getMemoryContextFromFmgrInfo	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^getMemoryContextFromFmgrInfo(FmgrInfo* inFmgrInfo) {$/;"	f	namespace:madlib::dbconnector::postgres::__anon32
getName	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^TypeInformation::getName() {$/;"	f	class:madlib::dbconnector::postgres::TypeInformation
getReturnTupleDesc	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^FunctionInformation::getReturnTupleDesc(FunctionCallInfo fcinfo) {$/;"	f	class:madlib::dbconnector::postgres::FunctionInformation
getReturnType	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^FunctionInformation::getReturnType(FunctionCallInfo fcinfo) {$/;"	f	class:madlib::dbconnector::postgres::FunctionInformation
getSurrSplit	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::getSurrSplit($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
getSysInfo	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::getSysInfo() const {$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle
getSystemInformationFromFmgrInfo	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^getSystemInformationFromFmgrInfo(FmgrInfo* inFmgrInfo) {$/;"	f	namespace:madlib::dbconnector::postgres::__anon32
getTupleDesc	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^TypeInformation::getTupleDesc(int32_t inTypeMod) {$/;"	f	class:madlib::dbconnector::postgres::TypeInformation
getType	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^TypeInformation::getType() {$/;"	f	class:madlib::dbconnector::postgres::TypeInformation
getUserFuncContext	ports/postgres/dbconnector/AnyType_impl.hpp	/^inline void * AnyType::getUserFuncContext(){$/;"	f	class:madlib::dbconnector::postgres::AnyType
get_b_utf8	libstemmer/runtime/utilities.c	/^static int get_b_utf8(const symbol * p, int c, int lb, int * slot) {$/;"	f	file:
get_change_handler	madpack/upgrade_util.py	/^    def get_change_handler(self):$/;"	m	class:ScriptCleaner
get_classobj_bases	madpack/yaml/representer.py	/^    def get_classobj_bases(self, cls):$/;"	m	class:BaseRepresenter
get_create_order_views	madpack/upgrade_util.py	/^    def get_create_order_views(self):$/;"	m	class:ViewDependency
get_data	madpack/yaml/constructor.py	/^    def get_data(self):$/;"	m	class:BaseConstructor
get_db_madlib_version	madpack/madpack.py	/^from utilities import get_db_madlib_version$/;"	i
get_db_madlib_version	madpack/utilities.py	/^def get_db_madlib_version(con_args, schema):$/;"	f
get_dbver	madpack/madpack.py	/^from utilities import get_dbver$/;"	i
get_dbver	madpack/upgrade_util.py	/^from utilities import get_dbver$/;"	i
get_dbver	madpack/utilities.py	/^def get_dbver(con_args, portid):$/;"	f
get_default	madpack/argparse.py	/^    def get_default(self, dest):$/;"	m	class:_ActionsContainer
get_depended_func_signature	madpack/upgrade_util.py	/^    def get_depended_func_signature(self, tag='UDA'):$/;"	m	class:ViewDependency
get_depended_opr_oids	madpack/upgrade_util.py	/^    def get_depended_opr_oids(self):$/;"	m	class:ViewDependency
get_depended_uda	madpack/upgrade_util.py	/^    def get_depended_uda(self):$/;"	m	class:ViewDependency
get_depended_udf	madpack/upgrade_util.py	/^    def get_depended_udf(self):$/;"	m	class:ViewDependency
get_depended_udoc_oids	madpack/upgrade_util.py	/^    def get_depended_udoc_oids(self):$/;"	m	class:TableDependency
get_depended_udt	madpack/upgrade_util.py	/^    def get_depended_udt(self):$/;"	m	class:TableDependency
get_dependency_graph_str	madpack/upgrade_util.py	/^    def get_dependency_graph_str(self):$/;"	m	class:ViewDependency
get_dependency_str	madpack/upgrade_util.py	/^    def get_dependency_str(self):$/;"	m	class:TableDependency
get_drop_order_views	madpack/upgrade_util.py	/^    def get_drop_order_views(self):$/;"	m	class:ViewDependency
get_event	madpack/yaml/parser.py	/^    def get_event(self):$/;"	m	class:Parser
get_lines	madpack/argparse.py	/^                def get_lines(parts, indent, prefix=None):$/;"	f	function:HelpFormatter._format_usage
get_mark	madpack/yaml/reader.py	/^    def get_mark(self):$/;"	m	class:Reader
get_modules	madpack/configyml.py	/^def get_modules( confdir):$/;"	f
get_modules_in_order	madpack/sort-module.py	/^def get_modules_in_order():$/;"	f
get_node	madpack/yaml/composer.py	/^    def get_node(self):$/;"	m	class:Composer
get_ports	madpack/configyml.py	/^def get_ports(configdir):$/;"	f
get_proc_w_dependency	madpack/upgrade_util.py	/^    def get_proc_w_dependency(self, tag='UDA'):$/;"	m	class:ViewDependency
get_rev_num	madpack/madpack.py	/^from utilities import get_rev_num$/;"	i
get_rev_num	madpack/upgrade_util.py	/^from utilities import get_rev_num$/;"	i
get_rev_num	madpack/utilities.py	/^def get_rev_num(rev):$/;"	f
get_signature_for_compare	madpack/upgrade_util.py	/^def get_signature_for_compare(schema, proname, rettype, argument):$/;"	f
get_snippet	madpack/yaml/error.py	/^    def get_snippet(self, indent=4, max_length=75):$/;"	m	class:Mark
get_text	modules/recursive_partitioning/DT_impl.hpp	/^get_text(ArrayHandle<text*> &strs, size_t i) {$/;"	f	namespace:madlib::modules::recursive_partitioning::__anon22
get_token	madpack/yaml/scanner.py	/^    def get_token(self):$/;"	m	class:Scanner
get_uda_signature	madpack/upgrade_util.py	/^    def get_uda_signature(self):$/;"	m	class:ChangeHandler
get_udf_signature	madpack/upgrade_util.py	/^    def get_udf_signature(self):$/;"	m	class:ChangeHandler
get_udo_oids	madpack/upgrade_util.py	/^    def get_udo_oids(self):$/;"	m	class:ChangeHandler
get_udoc_oids	madpack/upgrade_util.py	/^    def get_udoc_oids(self):$/;"	m	class:ChangeHandler
get_utf8	libstemmer/runtime/utilities.c	/^static int get_utf8(const symbol * p, int c, int l, int * slot) {$/;"	f	file:
get_version	madpack/configyml.py	/^def get_version(configdir):$/;"	f
get_y	modules/elastic_net/elastic_net_binomial_fista.cpp	/^inline void BinomialFista::get_y(double& y, AnyType& args)$/;"	f	class:madlib::modules::elastic_net::BinomialFista
get_y	modules/elastic_net/elastic_net_binomial_igd.cpp	/^inline void BinomialIgd::get_y (double& y, AnyType& args)$/;"	f	class:madlib::modules::elastic_net::BinomialIgd
get_y	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^inline void GaussianFista::get_y (double& y, AnyType& args)$/;"	f	class:madlib::modules::elastic_net::GaussianFista
get_y	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^inline void GaussianIgd::get_y (double& y, AnyType& args)$/;"	f	class:madlib::modules::elastic_net::GaussianIgd
getpass	madpack/madpack.py	/^import getpass$/;"	i
gettext	ports/postgres/dbconnector/dbconnector.hpp	65;"	d
glm	modules/glm/GLM_impl.hpp	/^namespace glm {$/;"	n	namespace:madlib::modules
glm	modules/glm/GLM_proto.hpp	/^namespace glm {$/;"	n	namespace:madlib::modules
glm	modules/glm/MultiResponseGLM_impl.hpp	/^namespace glm {$/;"	n	namespace:madlib::modules
glm	modules/glm/MultiResponseGLM_proto.hpp	/^namespace glm {$/;"	n	namespace:madlib::modules
glm	modules/glm/Ordinal_impl.hpp	/^namespace glm {$/;"	n	namespace:madlib::modules
glm	modules/glm/Ordinal_proto.hpp	/^namespace glm {$/;"	n	namespace:madlib::modules
glm	modules/glm/family.hpp	/^namespace glm {$/;"	n	namespace:madlib::modules
glm	modules/glm/glm.cpp	/^namespace glm {$/;"	n	namespace:madlib::modules	file:
glm	modules/glm/link.hpp	/^namespace glm {$/;"	n	namespace:madlib::modules
glm	modules/glm/multi_response_glm.cpp	/^namespace glm {$/;"	n	namespace:madlib::modules	file:
glm	modules/glm/ordinal.cpp	/^namespace glm {$/;"	n	namespace:madlib::modules	file:
glob	madpack/madpack.py	/^import glob$/;"	i
glob	madpack/upgrade_util.py	/^import glob$/;"	i
grad	modules/convex/newton.hpp	/^    ColumnVector_type   grad;       \/\/ accumulating value of gradient$/;"	m	class:madlib::modules::convex::Newton
grad	modules/crf/linear_crf.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap grad;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
grad	modules/glm/GLM_proto.hpp	/^    ColumnVector_type   grad;       \/\/ accumulating value of gradient$/;"	m	class:madlib::modules::glm::GLMAccumulator
grad	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap grad;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
grad	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap grad;$/;"	m	class:madlib::modules::stats::CoxPHState
gradNew	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap gradNew;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
gradient	modules/convex/task/l1.hpp	/^L1<Model>::gradient($/;"	f	class:madlib::modules::convex::L1
gradient	modules/convex/task/l2.hpp	/^L2<Model, Hessian>::gradient($/;"	f	class:madlib::modules::convex::L2
gradient	modules/convex/task/linear_svm.hpp	/^LinearSVM<Model, Tuple>::gradient($/;"	f	class:madlib::modules::convex::LinearSVM
gradient	modules/convex/task/lmf.hpp	/^LMF<Model, Tuple>::gradient($/;"	f	class:madlib::modules::convex::LMF
gradient	modules/convex/task/ols.hpp	/^OLS<Model, Tuple, Hessian>::gradient($/;"	f	class:madlib::modules::convex::OLS
gradient	modules/convex/type/state.hpp	/^            gradient;$/;"	m	struct:madlib::modules::convex::GLMIGDState::AlgoState
gradient	modules/convex/type/state.hpp	/^        TransparentColumnVector gradient;$/;"	m	struct:madlib::modules::convex::GLMCGState::TaskState
gradient	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap gradient;$/;"	m	struct:madlib::modules::convex::GLMNewtonState::AlgoState
gradient	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap gradient;$/;"	m	class:madlib::modules::elastic_net::FistaState
gradient	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap gradient;$/;"	m	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
gradientInPlace	modules/convex/task/linear_svm.hpp	/^LinearSVM<Model, Tuple>::gradientInPlace($/;"	f	class:madlib::modules::convex::LinearSVM
gradientInPlace	modules/convex/task/lmf.hpp	/^LMF<Model, Tuple>::gradientInPlace($/;"	f	class:madlib::modules::convex::LMF
gradientInPlace	modules/convex/task/mlp.hpp	/^MLP<Model, Tuple>::gradientInPlace($/;"	f	class:madlib::modules::convex::MLP
gradient_intercept	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble gradient_intercept; \/\/ gradient element for intercept$/;"	m	class:madlib::modules::elastic_net::FistaState
groupValues	modules/stats/one_way_anova.cpp	/^    typename HandleTraits<Handle>::DoublePtr groupValues;$/;"	m	class:madlib::modules::stats::OWATransitionState	file:
has_dependency	madpack/upgrade_util.py	/^    def has_dependency(self):$/;"	m	class:TableDependency
has_dependency	madpack/upgrade_util.py	/^    def has_dependency(self):$/;"	m	class:ViewDependency
header	modules/sample/WeightedSample_proto.hpp	/^    WeightedSampleHeader<T, isMutable> header;$/;"	m	class:madlib::modules::sample::WeightedSampleAccumulator
hessian	modules/convex/newton.hpp	/^    Matrix_type         hessian;    \/\/ accumulating expected value of Hessian$/;"	m	class:madlib::modules::convex::Newton
hessian	modules/convex/task/l2.hpp	/^L2<Model, Hessian>::hessian($/;"	f	class:madlib::modules::convex::L2
hessian	modules/convex/task/ols.hpp	/^OLS<Model, Tuple, Hessian>::hessian($/;"	f	class:madlib::modules::convex::OLS
hessian	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::MatrixTransparentHandleMap hessian;$/;"	m	struct:madlib::modules::convex::GLMNewtonState::AlgoState
hessian	modules/glm/GLM_proto.hpp	/^    Matrix_type         hessian;    \/\/ accumulating expected value of Hessian$/;"	m	class:madlib::modules::glm::GLMAccumulator
hessian	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap hessian;$/;"	m	class:madlib::modules::stats::CoxPHState
hessian	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap hessian;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
hessian_type	modules/convex/task/l2.hpp	/^    typedef Hessian hessian_type;$/;"	t	class:madlib::modules::convex::L2
hessian_type	modules/convex/task/ols.hpp	/^    typedef Hessian hessian_type;$/;"	t	class:madlib::modules::convex::OLS
hetero_tuple_type	modules/regress/LinearRegression_proto.hpp	/^    typedef std::tuple<MappedColumnVector, double, MappedColumnVector> hetero_tuple_type;$/;"	t	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
hungarian_ISO_8859_2_close_env	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^extern void hungarian_ISO_8859_2_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
hungarian_ISO_8859_2_create_env	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^extern struct SN_env * hungarian_ISO_8859_2_create_env(void) { return SN_create_env(0, 1, 0); }$/;"	f
hungarian_ISO_8859_2_stem	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^extern int hungarian_ISO_8859_2_stem(struct SN_env * z) {$/;"	f
hungarian_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_hungarian.c	/^extern void hungarian_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
hungarian_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_hungarian.c	/^extern struct SN_env * hungarian_UTF_8_create_env(void) { return SN_create_env(0, 1, 0); }$/;"	f
hungarian_UTF_8_stem	libstemmer/src_c/stem_UTF_8_hungarian.c	/^extern int hungarian_UTF_8_stem(struct SN_env * z) {$/;"	f
i	modules/convex/type/independent_variables.hpp	/^    int32_t i;$/;"	m	struct:madlib::modules::convex::MatrixIndex
id	madpack/yaml/nodes.py	/^    id = 'mapping'$/;"	v	class:MappingNode
id	madpack/yaml/nodes.py	/^    id = 'scalar'$/;"	v	class:ScalarNode
id	madpack/yaml/nodes.py	/^    id = 'sequence'$/;"	v	class:SequenceNode
id	madpack/yaml/tokens.py	/^    id = ','$/;"	v	class:FlowEntryToken
id	madpack/yaml/tokens.py	/^    id = '-'$/;"	v	class:BlockEntryToken
id	madpack/yaml/tokens.py	/^    id = ':'$/;"	v	class:ValueToken
id	madpack/yaml/tokens.py	/^    id = '<alias>'$/;"	v	class:AliasToken
id	madpack/yaml/tokens.py	/^    id = '<anchor>'$/;"	v	class:AnchorToken
id	madpack/yaml/tokens.py	/^    id = '<block end>'$/;"	v	class:BlockEndToken
id	madpack/yaml/tokens.py	/^    id = '<block mapping start>'$/;"	v	class:BlockMappingStartToken
id	madpack/yaml/tokens.py	/^    id = '<block sequence start>'$/;"	v	class:BlockSequenceStartToken
id	madpack/yaml/tokens.py	/^    id = '<directive>'$/;"	v	class:DirectiveToken
id	madpack/yaml/tokens.py	/^    id = '<document end>'$/;"	v	class:DocumentEndToken
id	madpack/yaml/tokens.py	/^    id = '<document start>'$/;"	v	class:DocumentStartToken
id	madpack/yaml/tokens.py	/^    id = '<scalar>'$/;"	v	class:ScalarToken
id	madpack/yaml/tokens.py	/^    id = '<stream end>'$/;"	v	class:StreamEndToken
id	madpack/yaml/tokens.py	/^    id = '<stream start>'$/;"	v	class:StreamStartToken
id	madpack/yaml/tokens.py	/^    id = '<tag>'$/;"	v	class:TagToken
id	madpack/yaml/tokens.py	/^    id = '?'$/;"	v	class:KeyToken
id	madpack/yaml/tokens.py	/^    id = '['$/;"	v	class:FlowSequenceStartToken
id	madpack/yaml/tokens.py	/^    id = ']'$/;"	v	class:FlowSequenceEndToken
id	madpack/yaml/tokens.py	/^    id = '{'$/;"	v	class:FlowMappingStartToken
id	madpack/yaml/tokens.py	/^    id = '}'$/;"	v	class:FlowMappingEndToken
id	modules/convex/type/tuple.hpp	/^    int id;$/;"	m	struct:madlib::modules::convex::ExampleTuple
identity	madpack/argparse.py	/^        def identity(string):$/;"	f	function:ArgumentParser.__init__
idxOfGroup	modules/stats/one_way_anova.cpp	/^OWATransitionState<ArrayHandle<double> >::idxOfGroup($/;"	f	class:madlib::modules::stats::OWATransitionState
idxOfGroup	modules/stats/one_way_anova.cpp	/^OWATransitionState<MutableArrayHandle<double> >::idxOfGroup($/;"	f	class:madlib::modules::stats::OWATransitionState
iflag	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
igd_final	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^AnyType Igd<Model>::igd_final (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::Igd
igd_merge	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^AnyType Igd<Model>::igd_merge (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::Igd
igd_result	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^AnyType Igd<Model>::igd_result (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::Igd
igd_state_diff	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^AnyType Igd<Model>::igd_state_diff (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::Igd
igd_transition	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^AnyType Igd<Model>::igd_transition (AnyType& args, const Allocator& inAllocator)$/;"	f	class:madlib::modules::elastic_net::Igd
ignore_aliases	madpack/yaml/representer.py	/^    def ignore_aliases(self, data):$/;"	m	class:BaseRepresenter
ignore_aliases	madpack/yaml/representer.py	/^    def ignore_aliases(self, data):$/;"	m	class:SafeRepresenter
impurity	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::impurity(const ColumnVector &stats) const {$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
impurityGain	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::impurityGain(const ColumnVector &combined_stats,$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
impurity_type	modules/recursive_partitioning/DT_proto.hpp	/^    uint16_type impurity_type;  \/\/ can be 'mse', 'gini', 'entropy', 'misclass'$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
in_grouping	libstemmer/runtime/utilities.c	/^extern int in_grouping(struct SN_env * z, const unsigned char * s, int min, int max, int repeat) {$/;"	f
in_grouping_U	libstemmer/runtime/utilities.c	/^extern int in_grouping_U(struct SN_env * z, const unsigned char * s, int min, int max, int repeat) {$/;"	f
in_grouping_b	libstemmer/runtime/utilities.c	/^extern int in_grouping_b(struct SN_env * z, const unsigned char * s, int min, int max, int repeat) {$/;"	f
in_grouping_b_U	libstemmer/runtime/utilities.c	/^extern int in_grouping_b_U(struct SN_env * z, const unsigned char * s, int min, int max, int repeat) {$/;"	f
in_range	modules/glm/family.hpp	/^    static bool in_range(const double &) { return true; }$/;"	f	class:madlib::modules::glm::Gaussian
in_range	modules/glm/family.hpp	/^    static bool in_range(const double &y) { return (y >= 0.0); }$/;"	f	class:madlib::modules::glm::Gamma
in_range	modules/glm/family.hpp	/^    static bool in_range(const double &y) { return (y >= 0.0); }$/;"	f	class:madlib::modules::glm::InverseGaussian
in_range	modules/glm/family.hpp	/^    static bool in_range(const double &y) {$/;"	f	class:madlib::modules::glm::Binomial
in_range	modules/glm/family.hpp	/^    static bool in_range(const double &y) {$/;"	f	class:madlib::modules::glm::Poisson
inarray	modules/lda/lda.cpp	/^    const int32_t * inarray;$/;"	m	struct:madlib::modules::lda::__sr_ctx	file:
inarray	modules/linalg/matrix_ops.cpp	/^    const double * inarray;$/;"	m	struct:madlib::modules::linalg::__sr_ctx1	file:
inarray	modules/linalg/matrix_ops.cpp	/^    const double * inarray;$/;"	m	struct:madlib::modules::linalg::__sr_ctx2	file:
inarray	modules/regress/multilogistic.cpp	/^    const double * inarray;$/;"	m	struct:madlib::modules::regress::__sr_ctx	file:
incrGradient	modules/convex/type/state.hpp	/^        TransparentColumnVector incrGradient;$/;"	m	struct:madlib::modules::convex::GLMCGState::AlgoState
incrModel	modules/convex/type/state.hpp	/^            incrModel;$/;"	m	struct:madlib::modules::convex::GLMIGDState::AlgoState
incrModel	modules/convex/type/state.hpp	/^        LMFModel<Handle> incrModel;$/;"	m	struct:madlib::modules::convex::LMFIGDState::AlgoState
incrModel	modules/convex/type/state.hpp	/^        MLPModel<Handle> incrModel;$/;"	m	struct:madlib::modules::convex::MLPIGDState::AlgoState
increase_indent	madpack/yaml/emitter.py	/^    def increase_indent(self, flow=False, indentless=False):$/;"	m	class:Emitter
increase_size	libstemmer/runtime/utilities.c	/^static symbol * increase_size(symbol * p, int n) {$/;"	f	file:
incrementInPlace	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::incrementInPlace() {$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
indVar	modules/convex/type/tuple.hpp	/^    independent_variables_type indVar;$/;"	m	struct:madlib::modules::convex::ExampleTuple
independent_variables_type	modules/convex/task/linear_svm.hpp	/^        independent_variables_type;$/;"	t	class:madlib::modules::convex::LinearSVM
independent_variables_type	modules/convex/task/lmf.hpp	/^        independent_variables_type;$/;"	t	class:madlib::modules::convex::LMF
independent_variables_type	modules/convex/task/mlp.hpp	/^        independent_variables_type;$/;"	t	class:madlib::modules::convex::MLP
independent_variables_type	modules/convex/task/ols.hpp	/^        independent_variables_type;$/;"	t	class:madlib::modules::convex::OLS
independent_variables_type	modules/convex/type/tuple.hpp	/^    typedef IndependentVariables independent_variables_type;$/;"	t	struct:madlib::modules::convex::ExampleTuple
indexCatStats	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::indexCatStats(Index feature_index,$/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
indexConStats	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::indexConStats(Index feature_index,$/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
inf_value	madpack/yaml/constructor.py	/^    inf_value = 1e300$/;"	v	class:SafeConstructor
inf_value	madpack/yaml/representer.py	/^    inf_value = 1e300$/;"	v	class:SafeRepresenter
info	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
info_	madpack/madpack.py	/^from utilities import info_$/;"	i
info_	madpack/utilities.py	/^def info_(src_name, msg, verbose=True):$/;"	f
infoc	modules/crf/linear_crf.cpp	/^    int infoc;$/;"	m	class:madlib::modules::crf::LBFGS	file:
init	modules/glm/link.hpp	/^    static double init(const double &y) { return (y + 0.5) \/ 2; }$/;"	f	class:madlib::modules::glm::Logit
init	modules/glm/link.hpp	/^    static double init(const double &y) { return (y + 0.5) \/ 2; }$/;"	f	class:madlib::modules::glm::Probit
init	modules/glm/link.hpp	/^    static double init(const double &y) { return std::max(y, 0.); }$/;"	f	class:madlib::modules::glm::Sqrt
init	modules/glm/link.hpp	/^    static double init(const double &y) { return std::max(y, 0.1); }$/;"	f	class:madlib::modules::glm::Log
init	modules/glm/link.hpp	/^    static double init(const double &y) { return y + 0.1; }$/;"	f	class:madlib::modules::glm::Identity
init	modules/glm/link.hpp	/^    static double init(const double &y) { return y == 0 ? 0.1 : y + 0.1; }$/;"	f	class:madlib::modules::glm::Inverse
init	modules/glm/link.hpp	/^    static double init(const double &y) { return y == 0 ? 0.1 : y + 0.1; }$/;"	f	class:madlib::modules::glm::SqrInverse
init	modules/glm/link.hpp	/^    static void init(ColumnVector &mu) {$/;"	f	class:madlib::modules::glm::MultiLogit
init	modules/glm/link.hpp	/^    static void init(ColumnVector &mu) {$/;"	f	class:madlib::modules::glm::OrdinalLogit
init	modules/glm/link.hpp	/^    static void init(ColumnVector &mu) {$/;"	f	class:madlib::modules::glm::OrdinalProbit
init_intercept	modules/elastic_net/elastic_net_binomial_igd.cpp	/^inline void BinomialIgd::init_intercept (IgdState<MutableArrayHandle<double> >& state)$/;"	f	class:madlib::modules::elastic_net::BinomialIgd
init_intercept	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^inline void GaussianIgd::init_intercept (IgdState<MutableArrayHandle<double> >& state)$/;"	f	class:madlib::modules::elastic_net::GaussianIgd
initialize	dbal/DynamicStruct_impl.hpp	/^    DynamicStructRootContainer<Storage, TypeTraits>, IsMutable>::initialize() {$/;"	f	class:madlib::dbal::DynamicStructBase
initialize	dbal/DynamicStruct_impl.hpp	/^DynamicStructBase<Derived, Container, IsMutable>::initialize() { }$/;"	f	class:madlib::dbal::DynamicStructBase
initialize	modules/convex/type/model.hpp	/^    void initialize(const double &inScaleFactor) {$/;"	f	struct:madlib::modules::convex::LMFModel
initialize	modules/convex/type/model.hpp	/^    void initialize(const uint16_t &inNumberOfStages,$/;"	f	struct:madlib::modules::convex::MLPModel
initialize	modules/crf/linear_crf.cpp	/^    inline void initialize(const Allocator &inAllocator, uint32_t inWidthOfX,$/;"	f	class:madlib::modules::crf::LinCrfLBFGSTransitionState
initialize	modules/elastic_net/elastic_net_binomial_fista.cpp	/^inline void BinomialFista::initialize(FistaState<MutableArrayHandle<double> >& state)$/;"	f	class:madlib::modules::elastic_net::BinomialFista
initialize	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^inline void GaussianFista::initialize (FistaState<MutableArrayHandle<double> >& state)$/;"	f	class:madlib::modules::elastic_net::GaussianFista
initialize	modules/linalg/average.cpp	/^    inline void initialize(const Allocator &inAllocator,$/;"	f	class:madlib::modules::linalg::AvgVectorState
initialize	modules/linalg/matrix_agg.cpp	/^    void initialize(const Allocator& inAllocator, uint64_t inNumRows) {$/;"	f	class:madlib::modules::linalg::MatrixAggState
initialize	modules/linalg/matrix_decomp.cpp	/^    void initialize(const Allocator& inAllocator, uint64_t inNumRows, uint64_t inNumCols) {$/;"	f	class:madlib::modules::linalg::MatrixComposeState
initialize	modules/linear_systems/dense_linear_systems.cpp	/^    inline void initialize(const Allocator &inAllocator,$/;"	f	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState
initialize	modules/linear_systems/sparse_linear_systems.cpp	/^    inline void initialize(const Allocator &inAllocator, $/;"	f	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState
initialize	modules/linear_systems/sparse_linear_systems.cpp	/^    inline void initialize(const Allocator &inAllocator, $/;"	f	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState
initialize	modules/regress/logistic.cpp	/^    inline void initialize(const Allocator &inAllocator, uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::LogRegrCGTransitionState
initialize	modules/regress/logistic.cpp	/^    inline void initialize(const Allocator &inAllocator, uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::LogRegrIGDTransitionState
initialize	modules/regress/logistic.cpp	/^    inline void initialize(const Allocator &inAllocator, uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::LogRegrIRLSTransitionState
initialize	modules/regress/logistic.cpp	/^    inline void initialize(const Allocator &inAllocator, uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::MarginalLogRegrTransitionState
initialize	modules/regress/logistic.cpp	/^    inline void initialize(const Allocator &inAllocator, uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::RobustLogRegrTransitionState
initialize	modules/regress/marginal.cpp	/^    inline void initialize(const Allocator &inAllocator,$/;"	f	class:madlib::modules::regress::MarginsLinregrInteractionState
initialize	modules/regress/marginal.cpp	/^    inline void initialize(const Allocator &inAllocator,$/;"	f	class:madlib::modules::regress::MarginsLogregrInteractionState
initialize	modules/regress/marginal.cpp	/^    inline void initialize(const Allocator &inAllocator,$/;"	f	class:madlib::modules::regress::MarginsMLogregrInteractionState
initialize	modules/regress/mlogr_margins.cpp	/^    inline void initialize(const Allocator &inAllocator,$/;"	f	class:madlib::modules::regress::mlogregrMarginalTransitionState
initialize	modules/regress/multilogistic.cpp	/^    inline void initialize($/;"	f	class:madlib::modules::regress::MLogRegrIRLSTransitionState
initialize	modules/regress/multilogistic.cpp	/^    inline void initialize(const Allocator &inAllocator,$/;"	f	class:madlib::modules::regress::MLogRegrRobustTransitionState
initialize	modules/stats/CoxPHState.hpp	/^    inline void initialize(const Allocator &inAllocator, uint16_t inWidthOfX, const double * inCoef = 0) {$/;"	f	class:madlib::modules::stats::CoxPHState
initialize	modules/stats/clustered_variance_coxph.cpp	/^    inline void initialize(const Allocator &inAllocator, uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::CLABTransitionState
initialize	modules/stats/cox_prop_hazards.cpp	/^    inline void initialize(const Allocator &inAllocator, uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::ArrayElemCorrState
initialize	modules/stats/marginal_cox.cpp	/^    inline void initialize(const Allocator &inAllocator,$/;"	f	class:madlib::modules::stats::MarginsCoxPropHazardState
initialize	modules/stats/robust_variance_coxph.cpp	/^    inline void initialize(const Allocator &inAllocator, uint16_t inWidthOfX,$/;"	f	class:madlib::modules::stats::RBCoxPHTransitionState
initialize	modules/stats/robust_variance_coxph.cpp	/^    inline void initialize(const Allocator &inAllocator, uint16_t inWidthOfX,$/;"	f	class:madlib::modules::stats::RBHSTransitionState
initializeOidHashTable	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^initializeOidHashTable(HTAB*& ioHashTable, MemoryContext inCacheContext,$/;"	f	namespace:madlib::dbconnector::postgres::__anon32
inmc	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
inmem_iterative_sparse_stateToResult	modules/linear_systems/sparse_linear_systems.cpp	/^AnyType inmem_iterative_sparse_stateToResult($/;"	f	namespace:madlib::modules::linear_systems
insert_s	libstemmer/runtime/utilities.c	/^extern int insert_s(struct SN_env * z, int bra, int ket, int s_size, const symbol * s) {$/;"	f
insert_v	libstemmer/runtime/utilities.c	/^extern int insert_v(struct SN_env * z, int bra, int ket, const symbol * p) {$/;"	f
int_type	dbal/OutputStreamBufferBase_proto.hpp	/^    typedef typename Base::int_type int_type;$/;"	t	class:madlib::dbal::OutputStreamBufferBase
intercept	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble intercept;$/;"	m	class:madlib::modules::elastic_net::FistaState
intercept	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble intercept;$/;"	m	class:madlib::modules::elastic_net::IgdState
intercept_y	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble intercept_y;$/;"	m	class:madlib::modules::elastic_net::FistaState
internalAllocate	ports/postgres/dbconnector/Allocator_impl.hpp	/^Allocator::internalAllocate(void *inPtr, const size_t inSize) const {$/;"	f	class:madlib::dbconnector::postgres::Allocator
internalAllocateArray	ports/postgres/dbconnector/Allocator_impl.hpp	/^Allocator::internalAllocateArray($/;"	f	class:madlib::dbconnector::postgres::Allocator
internalInvoke	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::internalInvoke(FunctionCallInfo inFCInfo) {$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle
internalMakeIntegral	modules/prob/boost.hpp	/^    static ProbFnOverride internalMakeIntegral(ProbFnOverride inAction,$/;"	f	struct:madlib::modules::prob::__anon12::IntegerDomainCheck
internalPalloc	ports/postgres/dbconnector/Allocator_impl.hpp	/^Allocator::internalPalloc(size_t inSize) const {$/;"	f	class:madlib::dbconnector::postgres::Allocator
internalRePalloc	ports/postgres/dbconnector/Allocator_impl.hpp	/^Allocator::internalRePalloc(void *inPtr, size_t inSize) const {$/;"	f	class:madlib::dbconnector::postgres::Allocator
internal_shapeToExtents	utils/shapeToExtents.hpp	/^struct internal_shapeToExtents {$/;"	s	namespace:madlib::utils
internal_shapeToExtents	utils/shapeToExtents.hpp	/^struct internal_shapeToExtents<NumDims, 0> {$/;"	s	namespace:madlib::utils
invoke	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::invoke(AnyType &args) {$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle
invoke	ports/postgres/dbconnector/UDF_impl.hpp	/^UDF::invoke(AnyType& args) {$/;"	f	class:madlib::dbconnector::postgres::UDF
isByValue	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^TypeInformation::isByValue() {$/;"	f	class:madlib::dbconnector::postgres::TypeInformation
isChildPure	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::isChildPure(const ColumnVector &stats) const{$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
isComposite	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::isComposite() const {$/;"	f	class:madlib::dbconnector::postgres::AnyType
isCompositeType	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^TypeInformation::isCompositeType() {$/;"	f	class:madlib::dbconnector::postgres::TypeInformation
isInDryRun	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::isInDryRun() const {$/;"	f	class:madlib::dbal::ByteStream
isInternalNode	modules/recursive_partitioning/DT_proto.hpp	/^    bool isInternalNode(const Index node_index) const {$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
isMutable	dbal/ByteStreamHandleBuf_proto.hpp	/^    enum { isMutable = IsMutable };$/;"	e	enum:madlib::dbal::ByteStreamHandleBuf::__anon3
isMutable	dbal/ByteStreamHandleBuf_proto.hpp	/^    enum { isMutable = Mutable };$/;"	e	enum:madlib::dbal::ByteStreamHandleBuf::__anon4
isMutable	dbal/ByteStream_proto.hpp	/^    enum { isMutable = IsMutable };$/;"	e	enum:madlib::dbal::ByteStream::__anon9
isMutable	dbal/DynamicStruct_proto.hpp	/^    enum { isMutable = Container_type::isMutable };$/;"	e	enum:madlib::dbal::DynamicStruct::__anon2
isMutable	dbal/DynamicStruct_proto.hpp	/^    enum { isMutable = Storage_type::isMutable };$/;"	e	enum:madlib::dbal::DynamicStructRootContainer::__anon1
isMutable	dbal/Reference_proto.hpp	/^    enum { isMutable = IsMutable };$/;"	e	enum:madlib::dbal::Ref::__anon5
isMutable	dbal/Reference_proto.hpp	/^    enum { isMutable = true };$/;"	e	enum:madlib::dbal::Ref::__anon6
isMutable	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^    enum { isMutable = false };$/;"	e	enum:madlib::dbconnector::postgres::ArrayHandle::__anon27
isMutable	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^    enum { isMutable = true };$/;"	e	enum:madlib::dbconnector::postgres::MutableArrayHandle::__anon28
isMutable	ports/postgres/dbconnector/ByteString_proto.hpp	/^    enum { isMutable = dbal::Immutable };$/;"	e	enum:madlib::dbconnector::postgres::ByteString::__anon94
isMutable	ports/postgres/dbconnector/ByteString_proto.hpp	/^    enum { isMutable = dbal::Mutable };$/;"	e	enum:madlib::dbconnector::postgres::MutableByteString::__anon96
isMutable	ports/postgres/dbconnector/FunctionHandle_proto.hpp	/^    enum { isMutable = false };$/;"	e	enum:madlib::dbconnector::postgres::FunctionHandle::__anon29
isMutable	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^    enum { isMutable = IsMutable };$/;"	e	enum:madlib::dbconnector::postgres::TransparentHandle::__anon97
isMutable	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^    enum { isMutable = dbal::Mutable };$/;"	e	enum:madlib::dbconnector::postgres::TransparentHandle::__anon98
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = IsMutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon69
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = IsMutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon73
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = IsMutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon77
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = IsMutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon81
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = dbal::Immutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon56
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = dbal::Immutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon62
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = dbal::Immutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon84
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = dbal::Immutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon87
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = dbal::Immutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon90
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = dbal::Immutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraitsBase::__anon35
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = dbal::Mutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon59
isMutable	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { isMutable = dbal::Mutable };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon65
isNegative	utils/Math.hpp	/^isNegative(const T& inValue) {$/;"	f	namespace:madlib::utils
isNegative	utils/Math.hpp	/^isNegative(const T&) {$/;"	f	namespace:madlib::utils
isNull	dbal/EigenIntegration/HandleMap_proto.hpp	/^    bool isNull() const { return mMemoryHandle.isNull(); }$/;"	f	class:madlib::dbal::eigen_integration::HandleMap
isNull	dbal/Reference_impl.hpp	/^Ref<T, IsMutable>::isNull() const {$/;"	f	class:madlib::dbal::Ref
isNull	modules/recursive_partitioning/DT_proto.hpp	/^    bool isNull(const double feature_val, const bool is_categorical) const{$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
isNull	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::isNull() const {$/;"	f	class:madlib::dbconnector::postgres::AnyType
isNull	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^    bool isNull() const { return mArray == NULL; }$/;"	f	class:madlib::dbconnector::postgres::ArrayHandle
isNull	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^    bool isNull() const { return mPtr == NULL; }$/;"	f	class:madlib::dbconnector::postgres::TransparentHandle
is_active	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 is_active; \/\/ is active-set being used now?$/;"	m	class:madlib::modules::elastic_net::FistaState
is_applied	modules/convex/newton.hpp	/^    bool_type           is_applied; \/\/ apply done used accumulated derivatives$/;"	m	class:madlib::modules::convex::Newton
is_categorical	modules/recursive_partitioning/DT_proto.hpp	/^    IntegerVector_type is_categorical;$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
is_classification	modules/convex/type/model.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble is_classification;$/;"	m	struct:madlib::modules::convex::MLPModel
is_finite	dbal/EigenIntegration/EigenPlugin.hpp	/^inline bool is_finite() const {$/;"	f
is_nesterov	modules/convex/type/model.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble is_nesterov;$/;"	m	struct:madlib::modules::convex::MLPModel
is_regression	modules/recursive_partitioning/DT_proto.hpp	/^    bool_type is_regression; \/\/ = 0 for classification, = 1 for regression$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
is_rev_gte	madpack/madpack.py	/^from utilities import is_rev_gte$/;"	i
is_rev_gte	madpack/upgrade_util.py	/^from utilities import is_rev_gte$/;"	i
is_rev_gte	madpack/utilities.py	/^def is_rev_gte(left, right):$/;"	f
is_svc	modules/convex/task/linear_svm.hpp	/^    static bool is_svc;$/;"	m	class:madlib::modules::convex::LinearSVM
is_svc	modules/convex/task/linear_svm.hpp	/^bool LinearSVM<Model, Tuple >::is_svc = false;$/;"	m	class:madlib::modules::convex::LinearSVM
iscn	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
isfinite	dbal/EigenIntegration/EigenIntegration.hpp	/^static isfinite(const Eigen::MatrixBase<Derived>& mat) {$/;"	f	namespace:madlib::dbal::eigen_integration
ispt	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
isstrict	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    bool isstrict;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
italian_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^extern void italian_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
italian_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^extern struct SN_env * italian_ISO_8859_1_create_env(void) { return SN_create_env(0, 3, 0); }$/;"	f
italian_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^extern int italian_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
italian_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_italian.c	/^extern void italian_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
italian_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_italian.c	/^extern struct SN_env * italian_UTF_8_create_env(void) { return SN_create_env(0, 3, 0); }$/;"	f
italian_UTF_8_stem	libstemmer/src_c/stem_UTF_8_italian.c	/^extern int italian_UTF_8_stem(struct SN_env * z) {$/;"	f
iter	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
iter	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 iter; \/\/ how many effective iteration run$/;"	m	class:madlib::modules::elastic_net::FistaState
iteration	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToUInt32 iteration;$/;"	m	struct:madlib::modules::convex::GLMCGState::TaskState
iteration	modules/crf/linear_crf.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 iteration;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
iteration	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 iteration;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
iteration	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 iteration;$/;"	m	class:madlib::modules::regress::MarginalLogRegrTransitionState	file:
iteration	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 iteration;$/;"	m	class:madlib::modules::regress::RobustLogRegrTransitionState	file:
iteration	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 iteration;$/;"	m	class:madlib::modules::regress::MarginsLinregrInteractionState	file:
iteration	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 iteration;$/;"	m	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
iycn	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
iypt	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
izip_longest	madpack/utilities.py	/^from itertools import izip_longest$/;"	i
j	modules/convex/type/independent_variables.hpp	/^    int32_t j;$/;"	m	struct:madlib::modules::convex::MatrixIndex
k	modules/linalg/svd.cpp	/^    int32_t k;$/;"	m	struct:madlib::modules::linalg::__sr_ctx	file:
kEffectiveHeaderSize	ports/postgres/dbconnector/ByteString_proto.hpp	/^    enum { kEffectiveHeaderSize$/;"	e	enum:madlib::dbconnector::postgres::ByteString::__anon95
kInitialBufferSize	dbal/OutputStreamBufferBase_proto.hpp	/^    static const uint32_t kInitialBufferSize = 1024;$/;"	m	class:madlib::dbal::OutputStreamBufferBase
kLetBoostCalculate	modules/prob/boost.hpp	/^    kLetBoostCalculate,$/;"	e	enum:madlib::modules::prob::__anon12::ProbFnOverride
kLetBoostCalculateUsingValue	modules/prob/boost.hpp	/^    kLetBoostCalculateUsingValue$/;"	e	enum:madlib::modules::prob::__anon12::ProbFnOverride
kMaxBufferSize	dbal/OutputStreamBufferBase_proto.hpp	/^    static const uint32_t kMaxBufferSize = 16384;$/;"	m	class:madlib::dbal::OutputStreamBufferBase
kResultIsReady	modules/prob/boost.hpp	/^    kResultIsReady = 0,$/;"	e	enum:madlib::modules::prob::__anon12::ProbFnOverride
keeplogs	madpack/madpack.py	/^keeplogs = None$/;"	v
ket	libstemmer/runtime/api.h	/^    int c; int l; int lb; int bra; int ket;$/;"	m	struct:SN_env
kolmogorov	modules/prob/kolmogorov.hpp	/^typedef kolmogorov_distribution<double, boost_mathkit_policy> kolmogorov;$/;"	t	namespace:madlib::modules::prob
kolmogorov_distribution	modules/prob/kolmogorov.hpp	/^    kolmogorov_distribution() { }$/;"	f	class:madlib::modules::prob::kolmogorov_distribution
kolmogorov_distribution	modules/prob/kolmogorov.hpp	/^class kolmogorov_distribution {$/;"	c	namespace:madlib::modules::prob
l	libstemmer/runtime/api.h	/^    int c; int l; int lb; int bra; int ket;$/;"	m	struct:SN_env
lambda	modules/convex/task/l1.hpp	/^    static double lambda;$/;"	m	class:madlib::modules::convex::L1
lambda	modules/convex/task/l1.hpp	/^L1<Model>::lambda = 0.;$/;"	m	class:madlib::modules::convex::L1
lambda	modules/convex/task/l2.hpp	/^    static double lambda;$/;"	m	class:madlib::modules::convex::L2
lambda	modules/convex/task/l2.hpp	/^L2<Model, Hessian>::lambda = 0.;$/;"	m	class:madlib::modules::convex::L2
lambda	modules/convex/task/mlp.hpp	/^    static double lambda;$/;"	m	class:madlib::modules::convex::MLP
lambda	modules/convex/task/mlp.hpp	/^double MLP<Model, Tuple>::lambda = 0;$/;"	m	class:madlib::modules::convex::MLP
lambda	modules/convex/type/state.hpp	/^        numeric_type lambda;$/;"	m	struct:madlib::modules::convex::MLPIGDState::TaskState
lambda	modules/convex/type/state.hpp	/^    numeric_type lambda;$/;"	m	class:madlib::modules::convex::MLPMiniBatchState
lambda	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble lambda;$/;"	m	class:madlib::modules::elastic_net::FistaState
lambda	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble lambda; \/\/ regularization control$/;"	m	class:madlib::modules::elastic_net::IgdState
last	modules/stats/kolmogorov_smirnov_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble last;$/;"	m	class:madlib::modules::stats::KSTestTransitionState	file:
last	modules/stats/mann_whitney_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble last;$/;"	m	class:madlib::modules::stats::MWTestTransitionState	file:
lastAbs	modules/stats/wilcoxon_signed_rank_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble lastAbs;$/;"	m	class:madlib::modules::stats::WSRTestTransitionState	file:
lastAbsUpperBound	modules/stats/wilcoxon_signed_rank_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble lastAbsUpperBound;$/;"	m	class:madlib::modules::stats::WSRTestTransitionState	file:
lastDiff	modules/stats/kolmogorov_smirnov_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble lastDiff;$/;"	m	class:madlib::modules::stats::KSTestTransitionState	file:
lazyConversionToDatum	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::lazyConversionToDatum() {$/;"	f	class:madlib::dbconnector::postgres::AnyType
lb	libstemmer/runtime/api.h	/^    int c; int l; int lb; int bra; int ket;$/;"	m	struct:SN_env
lbfgs	modules/crf/linear_crf.cpp	/^void LBFGS::lbfgs(int n, int m, double f, Eigen::VectorXd g, double eps,$/;"	f	class:madlib::modules::crf::LBFGS
lbfgs_state	modules/crf/linear_crf.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap lbfgs_state;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
lda	modules/lda/lda.cpp	/^namespace lda {$/;"	n	namespace:madlib::modules	file:
leave	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::DryRun::leave() {$/;"	f	class:madlib::dbal::ByteStream::DryRun
leaveDryRun	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::leaveDryRun() {$/;"	f	class:madlib::dbal::ByteStream
left_child	modules/recursive_partitioning/decision_tree.cpp	/^    SubTreeInfo * left_child;$/;"	m	struct:madlib::modules::recursive_partitioning::SubTreeInfo	file:
len	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^	int16_t len;$/;"	m	struct:madlib::dbconnector::postgres::TypeInformation
linalg	modules/linalg/average.cpp	/^namespace linalg {$/;"	n	namespace:madlib::modules	file:
linalg	modules/linalg/crossprod.cpp	/^namespace linalg {$/;"	n	namespace:madlib::modules	file:
linalg	modules/linalg/dim_conversion.cpp	/^namespace linalg {$/;"	n	namespace:madlib::modules	file:
linalg	modules/linalg/matrix_agg.cpp	/^namespace linalg {$/;"	n	namespace:madlib::modules	file:
linalg	modules/linalg/matrix_decomp.cpp	/^namespace linalg {$/;"	n	namespace:madlib::modules	file:
linalg	modules/linalg/matrix_ops.cpp	/^namespace linalg {$/;"	n	namespace:madlib::modules	file:
linalg	modules/linalg/metric.cpp	/^namespace linalg {$/;"	n	namespace:madlib::modules	file:
linalg	modules/linalg/metric.hpp	/^namespace linalg {$/;"	n	namespace:madlib::modules
linalg	modules/linalg/svd.cpp	/^namespace linalg {$/;"	n	namespace:madlib::modules	file:
linear_systems	modules/linear_systems/dense_linear_systems.cpp	/^namespace linear_systems{$/;"	n	namespace:madlib::modules	file:
linear_systems	modules/linear_systems/dense_linear_systems_states.hpp	/^namespace linear_systems {$/;"	n	namespace:madlib::modules
linear_systems	modules/linear_systems/sparse_linear_systems.cpp	/^namespace linear_systems{$/;"	n	namespace:madlib::modules	file:
linear_systems	modules/linear_systems/sparse_linear_systems_states.hpp	/^namespace linear_systems {$/;"	n	namespace:madlib::modules
link_fn	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^inline void Igd<Model>::link_fn (CVector& theta, CVector& w, double p)$/;"	f	class:madlib::modules::elastic_net::Igd
link_func	modules/glm/link.hpp	/^    static double link_func(const double &mu) { return 1.\/mu; }$/;"	f	class:madlib::modules::glm::Inverse
link_func	modules/glm/link.hpp	/^    static double link_func(const double &mu) { return 1.\/mu\/mu; }$/;"	f	class:madlib::modules::glm::SqrInverse
link_func	modules/glm/link.hpp	/^    static double link_func(const double &mu) { return log(mu); }$/;"	f	class:madlib::modules::glm::Log
link_func	modules/glm/link.hpp	/^    static double link_func(const double &mu) { return mu; }$/;"	f	class:madlib::modules::glm::Identity
link_func	modules/glm/link.hpp	/^    static double link_func(const double &mu) { return sqrt(mu); }$/;"	f	class:madlib::modules::glm::Sqrt
link_func	modules/glm/link.hpp	/^    static double link_func(const double &mu) {$/;"	f	class:madlib::modules::glm::Logit
link_func	modules/glm/link.hpp	/^    static double link_func(const double &mu) {$/;"	f	class:madlib::modules::glm::Probit
link_func	modules/glm/link.hpp	/^    static void link_func(const ColumnVector &mu, ColumnVector &ita) {$/;"	f	class:madlib::modules::glm::MultiLogit
link_func	modules/glm/link.hpp	/^    static void link_func(const ColumnVector &mu, ColumnVector &ita) {$/;"	f	class:madlib::modules::glm::OrdinalLogit
link_func	modules/glm/link.hpp	/^    static void link_func(const ColumnVector &mu, ColumnVector &ita) {$/;"	f	class:madlib::modules::glm::OrdinalProbit
load	madpack/yaml/__init__.py	/^def load(stream, Loader=Loader):$/;"	f
load_all	madpack/yaml/__init__.py	/^def load_all(stream, Loader=Loader):$/;"	f
logLikelihood	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble logLikelihood;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
logLikelihood	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble logLikelihood;$/;"	m	class:madlib::modules::regress::LogRegrIGDTransitionState	file:
logLikelihood	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble logLikelihood;$/;"	m	class:madlib::modules::regress::LogRegrIRLSTransitionState	file:
logLikelihood	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble logLikelihood;$/;"	m	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
logLikelihood	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble logLikelihood;$/;"	m	class:madlib::modules::stats::CoxPHState
logistic	modules/regress/marginal.cpp	/^inline double logistic(double x) {$/;"	f	namespace:madlib::modules::regress
loglik	modules/glm/GLM_proto.hpp	/^    double loglik;$/;"	m	class:madlib::modules::glm::GLMResult
loglik	modules/glm/GLM_proto.hpp	/^    double_type loglik;$/;"	m	class:madlib::modules::glm::GLMAccumulator
loglik	modules/glm/MultiResponseGLM_proto.hpp	/^    double loglik;$/;"	m	class:madlib::modules::glm::MultiResponseGLMResult
loglik	modules/glm/MultiResponseGLM_proto.hpp	/^    double_type loglik;$/;"	m	class:madlib::modules::glm::MultiResponseGLMAccumulator
loglik	modules/glm/Ordinal_proto.hpp	/^    double loglik;$/;"	m	class:madlib::modules::glm::OrdinalResult
loglik	modules/glm/Ordinal_proto.hpp	/^    double_type loglik;$/;"	m	class:madlib::modules::glm::OrdinalAccumulator
loglik	modules/glm/family.hpp	/^    static double loglik(const ColumnVector &y, const ColumnVector &mu,$/;"	f	class:madlib::modules::glm::Multinomial
loglik	modules/glm/family.hpp	/^    static double loglik(const double &y, const double &mu, const double &) {$/;"	f	class:madlib::modules::glm::Binomial
loglik	modules/glm/family.hpp	/^    static double loglik(const double &y, const double &mu, const double &) {$/;"	f	class:madlib::modules::glm::Poisson
loglik	modules/glm/family.hpp	/^    static double loglik(const double &y, const double &mu, const double &psi) {$/;"	f	class:madlib::modules::glm::Gamma
loglik	modules/glm/family.hpp	/^    static double loglik(const double &y, const double &mu, const double &psi) {$/;"	f	class:madlib::modules::glm::Gaussian
loglik	modules/glm/family.hpp	/^    static double loglik(const double &y, const double &mu, const double &psi) {$/;"	f	class:madlib::modules::glm::InverseGaussian
loglikelihood	modules/crf/linear_crf.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble loglikelihood;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
loglikelihood	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble loglikelihood;  \/\/ loglk for previous iteration$/;"	m	class:madlib::modules::elastic_net::FistaState
loglikelihood	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble loglikelihood;  \/\/ loglk for previous iteration$/;"	m	class:madlib::modules::elastic_net::IgdState
lose_s	libstemmer/runtime/utilities.c	/^extern void lose_s(symbol * p) {$/;"	f
loss	modules/convex/task/l1.hpp	/^L1<Model>::loss($/;"	f	class:madlib::modules::convex::L1
loss	modules/convex/task/l2.hpp	/^L2<Model, Hessian>::loss($/;"	f	class:madlib::modules::convex::L2
loss	modules/convex/task/linear_svm.hpp	/^LinearSVM<Model, Tuple>::loss($/;"	f	class:madlib::modules::convex::LinearSVM
loss	modules/convex/task/lmf.hpp	/^LMF<Model, Tuple>::loss($/;"	f	class:madlib::modules::convex::LMF
loss	modules/convex/task/mlp.hpp	/^MLP<Model, Tuple>::loss($/;"	f	class:madlib::modules::convex::MLP
loss	modules/convex/task/ols.hpp	/^OLS<Model, Tuple, Hessian>::loss($/;"	f	class:madlib::modules::convex::OLS
loss	modules/convex/type/state.hpp	/^        numeric_type loss;$/;"	m	struct:madlib::modules::convex::MLPIGDState::AlgoState
loss	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToDouble loss;$/;"	m	struct:madlib::modules::convex::GLMCGState::AlgoState
loss	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToDouble loss;$/;"	m	struct:madlib::modules::convex::GLMIGDState::AlgoState
loss	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToDouble loss;$/;"	m	struct:madlib::modules::convex::GLMNewtonState::AlgoState
loss	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToDouble loss;$/;"	m	struct:madlib::modules::convex::LMFIGDState::AlgoState
loss	modules/convex/type/state.hpp	/^    numeric_type loss;$/;"	m	class:madlib::modules::convex::MLPMiniBatchState
loss	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble loss;$/;"	m	class:madlib::modules::elastic_net::IgdState
m	modules/crf/linear_crf.cpp	/^    static const int m=7;\/\/ The number of corrections used in the LBFGS update.$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
mAllocator	dbal/OutputStreamBufferBase_proto.hpp	/^    allocator_type mAllocator;$/;"	m	class:madlib::dbal::OutputStreamBufferBase
mArray	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^    ArrayType *mArray;$/;"	m	class:madlib::dbconnector::postgres::ArrayHandle
mBegin	dbal/DynamicStruct_proto.hpp	/^    size_t mBegin;$/;"	m	class:madlib::dbal::DynamicStruct
mByteStream	dbal/DynamicStruct_proto.hpp	/^    ByteStream_type mByteStream;$/;"	m	class:madlib::dbal::DynamicStructBase
mByteStreamBuf	dbal/DynamicStruct_proto.hpp	/^    StreamBuf_type mByteStreamBuf;$/;"	m	class:madlib::dbal::DynamicStructRootContainer
mByteString	ports/postgres/dbconnector/ByteString_proto.hpp	/^    const bytea* mByteString;$/;"	m	class:madlib::dbconnector::postgres::ByteString
mChildren	ports/postgres/dbconnector/AnyType_proto.hpp	/^    std::vector<AnyType> mChildren;$/;"	m	class:madlib::dbconnector::postgres::AnyType
mContainer	dbal/DynamicStruct_proto.hpp	/^    Container_type mContainer;$/;"	m	class:madlib::dbal::DynamicStructBase
mContainer	dbal/DynamicStruct_proto.hpp	/^    Container_type& mContainer;$/;"	m	class:madlib::dbal::DynamicStructBase
mContent	ports/postgres/dbconnector/AnyType_proto.hpp	/^    boost::any mContent;$/;"	m	class:madlib::dbconnector::postgres::AnyType
mContentType	ports/postgres/dbconnector/AnyType_proto.hpp	/^    ContentType mContentType;$/;"	m	class:madlib::dbconnector::postgres::AnyType
mData	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^    T *mData;$/;"	m	class:madlib::dbconnector::postgres::ArrayHandle
mDatum	ports/postgres/dbconnector/AnyType_proto.hpp	/^    Datum mDatum;$/;"	m	class:madlib::dbconnector::postgres::AnyType
mDryRun	dbal/ByteStream_proto.hpp	/^    int32_t mDryRun;$/;"	m	class:madlib::dbal::ByteStream
mElemAlign	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^    char mElemAlign;$/;"	m	class:madlib::dbconnector::postgres::ArrayHandle
mElemByVal	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^    bool mElemByVal;$/;"	m	class:madlib::dbconnector::postgres::ArrayHandle
mElemLen	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^    int16_t mElemLen;$/;"	m	class:madlib::dbconnector::postgres::ArrayHandle
mEnd	dbal/DynamicStruct_proto.hpp	/^    size_t mEnd;$/;"	m	class:madlib::dbal::DynamicStruct
mFuncCallOptions	ports/postgres/dbconnector/FunctionHandle_proto.hpp	/^    uint32_t mFuncCallOptions;$/;"	m	class:madlib::dbconnector::postgres::FunctionHandle
mFuncInfo	ports/postgres/dbconnector/FunctionHandle_proto.hpp	/^    FunctionInformation* mFuncInfo;$/;"	m	class:madlib::dbconnector::postgres::FunctionHandle
mIsIn	dbal/ByteStream_proto.hpp	/^        bool mIsIn;$/;"	m	class:madlib::dbal::ByteStream::DryRun
mIsMutable	ports/postgres/dbconnector/AnyType_proto.hpp	/^    bool mIsMutable;$/;"	m	class:madlib::dbconnector::postgres::AnyType
mLogstateToResult	modules/regress/multilogistic.cpp	/^AnyType mLogstateToResult($/;"	f	namespace:madlib::modules::regress
mMemoryHandle	dbal/EigenIntegration/HandleMap_proto.hpp	/^    Handle mMemoryHandle;$/;"	m	class:madlib::dbal::eigen_integration::HandleMap
mNumElems	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^    int mNumElems;$/;"	m	class:madlib::dbconnector::postgres::ArrayHandle
mOrig	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    const T& mOrig;$/;"	m	class:madlib::dbconnector::postgres::convertTo
mOriginalValue	ports/postgres/dbconnector/AnyType_proto.hpp	/^        bool mOriginalValue;$/;"	m	class:madlib::dbconnector::postgres::AnyType::LazyConversionToDatumOverride
mPinv	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp	/^    MatrixType mPinv;$/;"	m	class:madlib::dbal::eigen_integration::SymmetricPositiveDefiniteEigenDecomposition
mPos	dbal/ByteStreamHandleBuf_proto.hpp	/^    size_t mPos;$/;"	m	class:madlib::dbal::ByteStreamHandleBuf
mPtr	dbal/Reference_proto.hpp	/^    val_type* mPtr;$/;"	m	class:madlib::dbal::Ref
mPtr	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^    val_type *mPtr;$/;"	m	class:madlib::dbconnector::postgres::TransparentHandle
mPtr	utils/Reference.hpp	/^    T *mPtr;$/;"	m	class:madlib::utils::Reference
mSizeIsLocked	dbal/DynamicStruct_proto.hpp	/^    bool mSizeIsLocked;$/;"	m	class:madlib::dbal::DynamicStruct
mStorage	dbal/ByteStreamHandleBuf_proto.hpp	/^    Storage mStorage;$/;"	m	class:madlib::dbal::ByteStreamHandleBuf
mStorage	dbal/OutputStreamBufferBase_proto.hpp	/^    C* mStorage;$/;"	m	class:madlib::dbal::OutputStreamBufferBase
mStorage	modules/convex/type/state.hpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::convex::GLMCGState
mStorage	modules/convex/type/state.hpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::convex::GLMIGDState
mStorage	modules/convex/type/state.hpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::convex::GLMNewtonState
mStorage	modules/convex/type/state.hpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::convex::LMFIGDState
mStorage	modules/convex/type/state.hpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::convex::MLPIGDState
mStorage	modules/convex/type/state.hpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::convex::MLPMiniBatchState
mStorage	modules/convex/utils_regularization.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::convex::ScalesState	file:
mStorage	modules/crf/linear_crf.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
mStorage	modules/elastic_net/state/fista.hpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::elastic_net::FistaState
mStorage	modules/elastic_net/state/igd.hpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::elastic_net::IgdState
mStorage	modules/linalg/average.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::linalg::AvgVectorState	file:
mStorage	modules/linalg/matrix_agg.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::linalg::MatrixAggState	file:
mStorage	modules/linalg/matrix_decomp.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::linalg::MatrixComposeState	file:
mStorage	modules/linear_systems/dense_linear_systems.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState	file:
mStorage	modules/linear_systems/sparse_linear_systems.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
mStorage	modules/linear_systems/sparse_linear_systems.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
mStorage	modules/regress/logistic.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
mStorage	modules/regress/logistic.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::regress::LogRegrIGDTransitionState	file:
mStorage	modules/regress/logistic.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::regress::LogRegrIRLSTransitionState	file:
mStorage	modules/regress/logistic.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::regress::MarginalLogRegrTransitionState	file:
mStorage	modules/regress/logistic.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::regress::RobustLogRegrTransitionState	file:
mStorage	modules/regress/marginal.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::regress::MarginsLinregrInteractionState	file:
mStorage	modules/regress/marginal.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
mStorage	modules/regress/marginal.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
mStorage	modules/regress/mlogr_margins.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
mStorage	modules/regress/multilogistic.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
mStorage	modules/regress/multilogistic.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::regress::MLogRegrRobustTransitionState	file:
mStorage	modules/stats/CoxPHState.hpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::CoxPHState
mStorage	modules/stats/chi_squared_test.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::Chi2TestTransitionState	file:
mStorage	modules/stats/clustered_variance_coxph.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::CLABTransitionState	file:
mStorage	modules/stats/cox_prop_hazards.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::ArrayElemCorrState	file:
mStorage	modules/stats/kolmogorov_smirnov_test.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::KSTestTransitionState	file:
mStorage	modules/stats/mann_whitney_test.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::MWTestTransitionState	file:
mStorage	modules/stats/marginal_cox.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
mStorage	modules/stats/one_way_anova.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::OWATransitionState	file:
mStorage	modules/stats/robust_variance_coxph.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
mStorage	modules/stats/robust_variance_coxph.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::RBHSTransitionState	file:
mStorage	modules/stats/t_test.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::TTestTransitionState	file:
mStorage	modules/stats/wilcoxon_signed_rank_test.cpp	/^    Handle mStorage;$/;"	m	class:madlib::modules::stats::WSRTestTransitionState	file:
mStorageSize	dbal/OutputStreamBufferBase_proto.hpp	/^    uint32_t mStorageSize;$/;"	m	class:madlib::dbal::OutputStreamBufferBase
mStream	dbal/ByteStream_proto.hpp	/^        ByteStream& mStream;$/;"	m	class:madlib::dbal::ByteStream::DryRun
mStreamBuf	dbal/ByteStream_proto.hpp	/^    StreamBuf_type* mStreamBuf;$/;"	m	class:madlib::dbal::ByteStream
mSysInfo	ports/postgres/dbconnector/AnyType_proto.hpp	/^    SystemInformation* mSysInfo;$/;"	m	class:madlib::dbconnector::postgres::AnyType
mSysInfo	ports/postgres/dbconnector/FunctionHandle_proto.hpp	/^    SystemInformation* mSysInfo;$/;"	m	class:madlib::dbconnector::postgres::FunctionHandle
mSysInfo	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    SystemInformation* mSysInfo;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
mToDatumFn	ports/postgres/dbconnector/AnyType_proto.hpp	/^    std::function<Datum()> mToDatumFn;$/;"	m	class:madlib::dbconnector::postgres::AnyType
mTupleHeader	ports/postgres/dbconnector/AnyType_proto.hpp	/^    HeapTupleHeader mTupleHeader;$/;"	m	class:madlib::dbconnector::postgres::AnyType
mTypeID	ports/postgres/dbconnector/AnyType_proto.hpp	/^    Oid mTypeID;$/;"	m	class:madlib::dbconnector::postgres::AnyType
mTypeName	ports/postgres/dbconnector/AnyType_proto.hpp	/^    const char* mTypeName;$/;"	m	class:madlib::dbconnector::postgres::AnyType
maddir	madpack/madpack.py	/^maddir = os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + "\/..")   # MADlib root dir$/;"	v
maddir_conf	madpack/madpack.py	/^maddir_conf = maddir + "\/config"           # Config dir$/;"	v
maddir_lib	madpack/madpack.py	/^maddir_lib = maddir + "\/lib\/libmadlib.so"  # C\/C++ libraries$/;"	v
madlib	dbal/BoostIntegration/MathToolkit_impl.hpp	/^namespace madlib {$/;"	n
madlib	dbal/ByteStreamHandleBuf_impl.hpp	/^namespace madlib {$/;"	n
madlib	dbal/ByteStreamHandleBuf_proto.hpp	/^namespace madlib {$/;"	n
madlib	dbal/ByteStream_impl.hpp	/^namespace madlib {$/;"	n
madlib	dbal/ByteStream_proto.hpp	/^namespace madlib {$/;"	n
madlib	dbal/DynamicStruct_impl.hpp	/^namespace madlib {$/;"	n
madlib	dbal/DynamicStruct_proto.hpp	/^namespace madlib {$/;"	n
madlib	dbal/EigenIntegration/EigenIntegration.hpp	/^namespace madlib {$/;"	n
madlib	dbal/EigenIntegration/HandleMap_impl.hpp	/^namespace madlib {$/;"	n
madlib	dbal/EigenIntegration/HandleMap_proto.hpp	/^namespace madlib {$/;"	n
madlib	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp	/^namespace madlib {$/;"	n
madlib	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp	/^namespace madlib {$/;"	n
madlib	dbal/Exceptions/NoSolutionFoundException_proto.hpp	/^namespace madlib {$/;"	n
madlib	dbal/OutputStreamBufferBase_impl.hpp	/^namespace madlib {$/;"	n
madlib	dbal/OutputStreamBufferBase_proto.hpp	/^namespace madlib {$/;"	n
madlib	dbal/Reference_impl.hpp	/^namespace madlib {$/;"	n
madlib	dbal/Reference_proto.hpp	/^namespace madlib {$/;"	n
madlib	dbal/dbal_proto.hpp	/^namespace madlib {$/;"	n
madlib	modules/assoc_rules/assoc_rules.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/convex/algo/gradient.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/algo/gradient_norm.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/algo/igd.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/algo/loss.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/algo/newton.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/linear_svm_igd.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/convex/lmf_igd.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/convex/mlp_igd.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/convex/newton.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/task/l1.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/task/l2.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/task/linear_svm.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/task/lmf.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/task/mlp.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/task/ols.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/type/dependent_variable.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/type/hessian.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/type/independent_variables.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/type/model.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/type/state.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/type/tuple.hpp	/^namespace madlib {$/;"	n
madlib	modules/convex/utils_regularization.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/crf/linear_crf.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/crf/viterbi.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/elastic_net/elastic_net_binomial_fista.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/elastic_net/elastic_net_binomial_igd.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/elastic_net/elastic_net_optimizer_fista.hpp	/^namespace madlib {$/;"	n
madlib	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^namespace madlib {$/;"	n
madlib	modules/elastic_net/elastic_net_utils.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/elastic_net/share/shared_utils.hpp	/^namespace madlib {$/;"	n
madlib	modules/elastic_net/state/fista.hpp	/^namespace madlib {$/;"	n
madlib	modules/elastic_net/state/igd.hpp	/^namespace madlib {$/;"	n
madlib	modules/glm/GLM_impl.hpp	/^namespace madlib {$/;"	n
madlib	modules/glm/GLM_proto.hpp	/^namespace madlib {$/;"	n
madlib	modules/glm/MultiResponseGLM_impl.hpp	/^namespace madlib {$/;"	n
madlib	modules/glm/MultiResponseGLM_proto.hpp	/^namespace madlib {$/;"	n
madlib	modules/glm/Ordinal_impl.hpp	/^namespace madlib {$/;"	n
madlib	modules/glm/Ordinal_proto.hpp	/^namespace madlib {$/;"	n
madlib	modules/glm/family.hpp	/^namespace madlib {$/;"	n
madlib	modules/glm/glm.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/glm/link.hpp	/^namespace madlib {$/;"	n
madlib	modules/glm/multi_response_glm.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/glm/ordinal.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/lda/lda.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/linalg/average.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/linalg/crossprod.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/linalg/dim_conversion.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/linalg/matrix_agg.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/linalg/matrix_decomp.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/linalg/matrix_ops.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/linalg/metric.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/linalg/metric.hpp	/^namespace madlib {$/;"	n
madlib	modules/linalg/svd.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/linear_systems/dense_linear_systems.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/linear_systems/dense_linear_systems_states.hpp	/^namespace madlib {$/;"	n
madlib	modules/linear_systems/sparse_linear_systems.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/linear_systems/sparse_linear_systems_states.hpp	/^namespace madlib {$/;"	n
madlib	modules/prob/boost.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/prob/boost.hpp	/^namespace madlib {$/;"	n
madlib	modules/prob/kolmogorov.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/prob/kolmogorov.hpp	/^namespace madlib {$/;"	n
madlib	modules/prob/student.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/prob/student.hpp	/^namespace madlib {$/;"	n
madlib	modules/recursive_partitioning/ConSplits.hpp	/^namespace madlib {$/;"	n
madlib	modules/recursive_partitioning/DT_impl.hpp	/^namespace madlib {$/;"	n
madlib	modules/recursive_partitioning/DT_proto.hpp	/^namespace madlib {$/;"	n
madlib	modules/recursive_partitioning/decision_tree.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/recursive_partitioning/feature_encoding.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/recursive_partitioning/random_forest.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/regress/LinearRegression_impl.hpp	/^namespace madlib {$/;"	n
madlib	modules/regress/LinearRegression_proto.hpp	/^namespace madlib {$/;"	n
madlib	modules/regress/clustered_errors.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/regress/clustered_errors_state.hpp	/^namespace madlib {$/;"	n
madlib	modules/regress/linear.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/regress/logistic.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/regress/marginal.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/regress/mlogr_margins.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/regress/multilogistic.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/sample/WeightedSample_impl.hpp	/^namespace madlib {$/;"	n
madlib	modules/sample/WeightedSample_proto.hpp	/^namespace madlib {$/;"	n
madlib	modules/sample/random_process.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/sample/weighted_sample.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/shared/HandleTraits.hpp	/^namespace madlib {$/;"	n
madlib	modules/stats/CoxPHState.hpp	/^namespace madlib {$/;"	n
madlib	modules/stats/chi_squared_test.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/clustered_variance_coxph.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/correlation.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/cox_prop_hazards.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/coxph_improved.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/distribution.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/kolmogorov_smirnov_test.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/mann_whitney_test.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/marginal_cox.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/one_way_anova.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/robust_variance_coxph.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/t_test.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/stats/wilcoxon_signed_rank_test.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/tsa/arima.cpp	/^namespace madlib {$/;"	n	file:
madlib	modules/utilities/path.cpp	/^namespace madlib {$/;"	n	file:
madlib	ports/greenplum/dbconnector/Compatibility.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/Allocator_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/Allocator_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/AnyType_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/AnyType_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/ArrayWithNullException_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/Backend.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/ByteString_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/ByteString_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/Compatibility.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/FunctionHandle_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/NativeRandomNumberGenerator_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/NativeRandomNumberGenerator_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/PGException_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/TransparentHandle_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/TypeTraits_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/UDF_impl.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/UDF_proto.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/dbconnector.hpp	/^namespace madlib {$/;"	n
madlib	ports/postgres/dbconnector/main.cpp	/^namespace madlib {$/;"	n	file:
madlib	utils/MallocAllocator.hpp	/^namespace madlib {$/;"	n
madlib	utils/Math.hpp	/^namespace madlib {$/;"	n
madlib	utils/Reference.hpp	/^namespace madlib {$/;"	n
madlib	utils/memory.hpp	/^namespace madlib {$/;"	n
madlib	utils/shapeToExtents.hpp	/^namespace madlib {$/;"	n
madlib_DatumGetArrayTypeP	ports/postgres/dbconnector/Backend.hpp	/^madlib_DatumGetArrayTypeP(Datum inDatum) {$/;"	f	namespace:madlib::dbconnector::postgres::__anon30
madlib_DatumGetByteaP	ports/postgres/dbconnector/Backend.hpp	/^madlib_DatumGetByteaP(Datum inDatum) {$/;"	f	namespace:madlib::dbconnector::postgres::__anon30
madlib_InitFunctionCallInfoData	ports/postgres/dbconnector/Backend.hpp	/^madlib_InitFunctionCallInfoData(FunctionCallInfoData& fcinfo, FmgrInfo* flinfo,$/;"	f	namespace:madlib::dbconnector::postgres::__anon30
madlib_assert	dbal/dbal_proto.hpp	14;"	d
madlib_construct_array	ports/greenplum/dbconnector/Compatibility.hpp	/^inline ArrayType* madlib_construct_array$/;"	f	namespace:madlib::dbconnector::postgres
madlib_construct_array	ports/postgres/dbconnector/Compatibility.hpp	/^inline ArrayType* madlib_construct_array$/;"	f	namespace:madlib::dbconnector::postgres
madlib_construct_md_array	ports/greenplum/dbconnector/Compatibility.hpp	/^inline ArrayType* madlib_construct_md_array$/;"	f	namespace:madlib::dbconnector::postgres
madlib_construct_md_array	ports/postgres/dbconnector/Compatibility.hpp	/^inline ArrayType* madlib_construct_md_array$/;"	f	namespace:madlib::dbconnector::postgres
madlib_detoast_verlena_datum_if_necessary	ports/postgres/dbconnector/Backend.hpp	/^madlib_detoast_verlena_datum_if_necessary(Datum inDatum) {$/;"	f	namespace:madlib::dbconnector::postgres::__anon30
main	madpack/madpack.py	/^def main(argv):$/;"	f
main	madpack/sort-module.py	/^def main(file_paths):$/;"	f
makeAligned	ports/postgres/dbconnector/Allocator_impl.hpp	/^Allocator::makeAligned(void *inPtr) const {$/;"	f	class:madlib::dbconnector::postgres::Allocator
make_cp_list	modules/recursive_partitioning/decision_tree.cpp	/^void make_cp_list(MutableTree & dt,$/;"	f	namespace:madlib::modules::recursive_partitioning
make_python_instance	madpack/yaml/constructor.py	/^    def make_python_instance(self, suffix, node,$/;"	m	class:Constructor
marginal_effects	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap marginal_effects;$/;"	m	class:madlib::modules::regress::MarginsLinregrInteractionState	file:
marginal_effects	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap marginal_effects;$/;"	m	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
marginal_effects	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap marginal_effects; \/\/ ME$/;"	m	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
marginal_effects	modules/stats/marginal_cox.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap marginal_effects;$/;"	m	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
marginal_effects_per_observation	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble marginal_effects_per_observation;$/;"	m	class:madlib::modules::regress::MarginalLogRegrTransitionState	file:
marginalstateToResult	modules/regress/logistic.cpp	/^AnyType marginalstateToResult($/;"	f	namespace:madlib::modules::regress
margins_matrix	modules/regress/mlogr_margins.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap margins_matrix;$/;"	m	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
margins_stateToResult	modules/regress/marginal.cpp	/^AnyType margins_stateToResult($/;"	f	namespace:madlib::modules::regress
mark_subtree_removal	modules/recursive_partitioning/decision_tree.cpp	/^void mark_subtree_removal(MutableTree &dt, int me) {$/;"	f	namespace:madlib::modules::recursive_partitioning
mark_subtree_removal_recur	modules/recursive_partitioning/decision_tree.cpp	/^void mark_subtree_removal_recur(MutableTree &dt, int me) {$/;"	f	namespace:madlib::modules::recursive_partitioning
mat	modules/linalg/dim_conversion.cpp	/^    NativeMatrix mat;$/;"	m	struct:madlib::modules::linalg::__anon14::Deconstruct2DArrayContext	file:
mat	modules/linalg/svd.cpp	/^    Matrix mat;$/;"	m	struct:madlib::modules::linalg::__sr_ctx	file:
math	dbal/BoostIntegration/MathToolkit_impl.hpp	/^namespace math {$/;"	n	namespace:boost
matrix	modules/linalg/matrix_agg.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap matrix;$/;"	m	class:madlib::modules::linalg::MatrixAggState	file:
matrix	modules/linalg/matrix_decomp.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap matrix;$/;"	m	class:madlib::modules::linalg::MatrixComposeState	file:
matrixU	modules/convex/type/model.hpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap matrixU;$/;"	m	struct:madlib::modules::convex::LMFModel
matrixV	modules/convex/type/model.hpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap matrixV;$/;"	m	struct:madlib::modules::convex::LMFModel
max	ports/postgres/dbconnector/NativeRandomNumberGenerator_impl.hpp	/^NativeRandomNumberGenerator::max() {$/;"	f	class:madlib::dbconnector::postgres::NativeRandomNumberGenerator
maxDiff	modules/stats/kolmogorov_smirnov_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble maxDiff;$/;"	m	class:madlib::modules::stats::KSTestTransitionState	file:
maxIter	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 maxIter;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
maxRank	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToInt32 maxRank;$/;"	m	struct:madlib::modules::convex::LMFIGDState::TaskState
max_LHS_size	modules/assoc_rules/assoc_rules.cpp	/^    int32    max_LHS_size;$/;"	m	struct:madlib::modules::assoc_rules::perm_fctx	file:
max_RHS_size	modules/assoc_rules/assoc_rules.cpp	/^    int32    max_RHS_size;$/;"	m	struct:madlib::modules::assoc_rules::perm_fctx	file:
max_call	modules/linalg/svd.cpp	/^    int32_t max_call;$/;"	m	struct:madlib::modules::linalg::__sr_ctx	file:
max_coef	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap max_coef;$/;"	m	class:madlib::modules::stats::CoxPHState
max_n_surr	modules/recursive_partitioning/DT_proto.hpp	/^    uint16_type max_n_surr;$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
max_size	utils/MallocAllocator.hpp	/^    size_type max_size() const throw () {$/;"	f	class:madlib::utils::MallocAllocator
max_stepsize	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble max_stepsize;$/;"	m	class:madlib::modules::elastic_net::FistaState
maxcall	modules/lda/lda.cpp	/^    int32_t maxcall;$/;"	m	struct:madlib::modules::lda::__sr_ctx	file:
maxcall	modules/linalg/matrix_ops.cpp	/^    int32_t maxcall;$/;"	m	struct:madlib::modules::linalg::__sr_ctx1	file:
maxcall	modules/linalg/matrix_ops.cpp	/^    int32_t maxcall;$/;"	m	struct:madlib::modules::linalg::__sr_ctx2	file:
maxcall	modules/regress/multilogistic.cpp	/^    int32_t maxcall;$/;"	m	struct:madlib::modules::regress::__sr_ctx	file:
maxfev	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
maximumAlignment	dbal/ByteStream_proto.hpp	/^    enum { maximumAlignment =$/;"	e	enum:madlib::dbal::ByteStream::__anon10
mcsrch	modules/crf/linear_crf.cpp	/^void LBFGS::mcsrch(int n, Eigen::VectorXd& x, double f, Eigen::VectorXd& g,$/;"	f	class:madlib::modules::crf::LBFGS
mcsrch_state	modules/crf/linear_crf.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap mcsrch_state;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
mcstep	modules/crf/linear_crf.cpp	/^void LBFGS::mcstep(double& stx, double& fx, double& dx,$/;"	f	class:madlib::modules::crf::LBFGS
mean	modules/convex/utils_regularization.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap mean;$/;"	m	class:madlib::modules::convex::ScalesState	file:
mean_derivative	modules/glm/link.hpp	/^    static double mean_derivative(const double &) { return 1.; }$/;"	f	class:madlib::modules::glm::Identity
mean_derivative	modules/glm/link.hpp	/^    static double mean_derivative(const double &ita) { return -1.\/(ita*ita); }$/;"	f	class:madlib::modules::glm::Inverse
mean_derivative	modules/glm/link.hpp	/^    static double mean_derivative(const double &ita) { return -1.\/2\/sqrt(ita*ita*ita); }$/;"	f	class:madlib::modules::glm::SqrInverse
mean_derivative	modules/glm/link.hpp	/^    static double mean_derivative(const double &ita) { return 2 * ita; }$/;"	f	class:madlib::modules::glm::Sqrt
mean_derivative	modules/glm/link.hpp	/^    static double mean_derivative(const double &ita) { return exp(ita); }$/;"	f	class:madlib::modules::glm::Log
mean_derivative	modules/glm/link.hpp	/^    static double mean_derivative(const double &ita) {$/;"	f	class:madlib::modules::glm::Logit
mean_derivative	modules/glm/link.hpp	/^    static double mean_derivative(const double &ita) {$/;"	f	class:madlib::modules::glm::Probit
mean_derivative	modules/glm/link.hpp	/^    static void mean_derivative(const ColumnVector &ita, Matrix &mu_prime) {$/;"	f	class:madlib::modules::glm::MultiLogit
mean_derivative	modules/glm/link.hpp	/^    static void mean_derivative(const ColumnVector &ita, Matrix &mu_prime) {$/;"	f	class:madlib::modules::glm::OrdinalLogit
mean_derivative	modules/glm/link.hpp	/^    static void mean_derivative(const ColumnVector &ita, Matrix &mu_prime) {$/;"	f	class:madlib::modules::glm::OrdinalProbit
mean_func	modules/glm/link.hpp	/^    static double mean_func(const double &ita) { return 1.\/ita; }$/;"	f	class:madlib::modules::glm::Inverse
mean_func	modules/glm/link.hpp	/^    static double mean_func(const double &ita) { return 1.\/sqrt(ita); }$/;"	f	class:madlib::modules::glm::SqrInverse
mean_func	modules/glm/link.hpp	/^    static double mean_func(const double &ita) { return exp(ita); }$/;"	f	class:madlib::modules::glm::Log
mean_func	modules/glm/link.hpp	/^    static double mean_func(const double &ita) { return ita * ita; }$/;"	f	class:madlib::modules::glm::Sqrt
mean_func	modules/glm/link.hpp	/^    static double mean_func(const double &ita) { return ita; }$/;"	f	class:madlib::modules::glm::Identity
mean_func	modules/glm/link.hpp	/^    static double mean_func(const double &ita) {$/;"	f	class:madlib::modules::glm::Logit
mean_func	modules/glm/link.hpp	/^    static double mean_func(const double &ita) {$/;"	f	class:madlib::modules::glm::Probit
mean_func	modules/glm/link.hpp	/^    static void mean_func(const ColumnVector &ita, ColumnVector &mu) {$/;"	f	class:madlib::modules::glm::MultiLogit
mean_func	modules/glm/link.hpp	/^    static void mean_func(const ColumnVector &ita, ColumnVector &mu) {$/;"	f	class:madlib::modules::glm::OrdinalLogit
mean_func	modules/glm/link.hpp	/^    static void mean_func(const ColumnVector &ita, ColumnVector &mu) {$/;"	f	class:madlib::modules::glm::OrdinalProbit
meat	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap meat;$/;"	m	class:madlib::modules::regress::RobustLogRegrTransitionState	file:
meat	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap meat;$/;"	m	class:madlib::modules::regress::MLogRegrRobustTransitionState	file:
meat_half	modules/regress/clustered_errors_state.hpp	/^    Matrix_type meat_half;$/;"	m	class:madlib::modules::regress::ClusteredState
memory	utils/memory.hpp	/^namespace memory {$/;"	n	namespace:madlib::utils
memoryHandle	dbal/EigenIntegration/HandleMap_impl.hpp	/^HandleMap<EigenType, Handle, MapOptions>::memoryHandle() const {$/;"	f	class:madlib::dbal::eigen_integration::HandleMap
merge	modules/convex/algo/gradient.hpp	/^Gradient<State, ConstState, Task>::merge(state_type &state,$/;"	f	class:madlib::modules::convex::Gradient
merge	modules/convex/algo/gradient_norm.hpp	/^Gradient<State, ConstState, Task>::merge(state_type &state,$/;"	f	class:madlib::modules::convex::Gradient
merge	modules/convex/algo/igd.hpp	/^IGD<State, ConstState, Task>::merge(state_type &state,$/;"	f	class:madlib::modules::convex::IGD
merge	modules/convex/algo/loss.hpp	/^Loss<State, ConstState, Task>::merge(state_type &state,$/;"	f	class:madlib::modules::convex::Loss
merge	modules/convex/algo/newton.hpp	/^Newton<State, ConstState, Task>::merge(state_type &state,$/;"	f	class:madlib::modules::convex::Newton
mergeInPlace	modules/convex/algo/igd.hpp	/^IGD<State, ConstState, Task>::mergeInPlace(state_type &state,$/;"	f	class:madlib::modules::convex::IGD
merge_intercept	modules/elastic_net/elastic_net_binomial_fista.cpp	/^inline void BinomialFista::merge_intercept($/;"	f	class:madlib::modules::elastic_net::BinomialFista
merge_intercept	modules/elastic_net/elastic_net_binomial_igd.cpp	/^inline void BinomialIgd::merge_intercept  (IgdState<MutableArrayHandle<double> >& state1,$/;"	f	class:madlib::modules::elastic_net::BinomialIgd
merge_intercept	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^inline void GaussianFista::merge_intercept($/;"	f	class:madlib::modules::elastic_net::GaussianFista
merge_intercept	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^inline void GaussianIgd::merge_intercept  ($/;"	f	class:madlib::modules::elastic_net::GaussianIgd
min	ports/postgres/dbconnector/NativeRandomNumberGenerator_impl.hpp	/^NativeRandomNumberGenerator::min() {$/;"	f	class:madlib::dbconnector::postgres::NativeRandomNumberGenerator
mlogregrMarginalTransitionState	modules/regress/mlogr_margins.cpp	/^    mlogregrMarginalTransitionState(const AnyType &inArray)$/;"	f	class:madlib::modules::regress::mlogregrMarginalTransitionState
mlogregrMarginalTransitionState	modules/regress/mlogr_margins.cpp	/^class mlogregrMarginalTransitionState {$/;"	c	namespace:madlib::modules::regress	file:
mlogregr_marginalstateToResult	modules/regress/mlogr_margins.cpp	/^AnyType mlogregr_marginalstateToResult($/;"	f	namespace:madlib::modules::regress
model	modules/convex/type/state.hpp	/^        LMFModel<Handle> model;$/;"	m	struct:madlib::modules::convex::LMFIGDState::TaskState
model	modules/convex/type/state.hpp	/^        MLPModel<Handle> model;$/;"	m	struct:madlib::modules::convex::MLPIGDState::TaskState
model	modules/convex/type/state.hpp	/^        TransparentColumnVector model;$/;"	m	struct:madlib::modules::convex::GLMCGState::TaskState
model	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap model;$/;"	m	struct:madlib::modules::convex::GLMIGDState::TaskState
model	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap model;$/;"	m	struct:madlib::modules::convex::GLMNewtonState::TaskState
model	modules/convex/type/state.hpp	/^    MLPModel<Handle> model;$/;"	m	class:madlib::modules::convex::MLPMiniBatchState
model_type	modules/convex/algo/gradient.hpp	/^    typedef typename Task::model_type model_type;$/;"	t	class:madlib::modules::convex::Gradient
model_type	modules/convex/algo/gradient_norm.hpp	/^    typedef typename Task::model_type model_type;$/;"	t	class:madlib::modules::convex::Gradient
model_type	modules/convex/algo/igd.hpp	/^    typedef typename Task::model_type model_type;$/;"	t	class:madlib::modules::convex::IGD
model_type	modules/convex/algo/loss.hpp	/^    typedef typename Task::model_type model_type;$/;"	t	class:madlib::modules::convex::Loss
model_type	modules/convex/algo/newton.hpp	/^    typedef typename Task::model_type model_type;$/;"	t	class:madlib::modules::convex::Newton
model_type	modules/convex/task/l1.hpp	/^    typedef Model model_type;$/;"	t	class:madlib::modules::convex::L1
model_type	modules/convex/task/l2.hpp	/^    typedef Model model_type;$/;"	t	class:madlib::modules::convex::L2
model_type	modules/convex/task/linear_svm.hpp	/^    typedef Model model_type;$/;"	t	class:madlib::modules::convex::LinearSVM
model_type	modules/convex/task/lmf.hpp	/^    typedef Model model_type;$/;"	t	class:madlib::modules::convex::LMF
model_type	modules/convex/task/mlp.hpp	/^    typedef Model model_type;$/;"	t	class:madlib::modules::convex::MLP
model_type	modules/convex/task/ols.hpp	/^    typedef Model model_type;$/;"	t	class:madlib::modules::convex::OLS
module_order	madpack/sort-module.py	/^module_order = get_modules_in_order()$/;"	v
modules	libstemmer/libstemmer/modules.h	/^static struct stemmer_modules modules[] = {$/;"	v	typeref:struct:stemmer_modules
modules	modules/assoc_rules/assoc_rules.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/convex/algo/gradient.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/algo/gradient_norm.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/algo/igd.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/algo/loss.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/algo/newton.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/linear_svm_igd.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/convex/lmf_igd.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/convex/mlp_igd.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/convex/newton.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/task/l1.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/task/l2.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/task/linear_svm.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/task/lmf.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/task/mlp.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/task/ols.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/type/dependent_variable.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/type/hessian.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/type/independent_variables.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/type/model.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/type/state.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/type/tuple.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/convex/utils_regularization.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/crf/linear_crf.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/crf/viterbi.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/elastic_net/elastic_net_binomial_fista.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/elastic_net/elastic_net_binomial_igd.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/elastic_net/elastic_net_optimizer_fista.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/elastic_net/elastic_net_utils.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/elastic_net/share/shared_utils.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/elastic_net/state/fista.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/elastic_net/state/igd.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/glm/GLM_impl.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/glm/GLM_proto.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/glm/MultiResponseGLM_impl.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/glm/MultiResponseGLM_proto.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/glm/Ordinal_impl.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/glm/Ordinal_proto.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/glm/family.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/glm/glm.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/glm/link.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/glm/multi_response_glm.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/glm/ordinal.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/lda/lda.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/linalg/average.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/linalg/crossprod.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/linalg/dim_conversion.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/linalg/matrix_agg.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/linalg/matrix_decomp.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/linalg/matrix_ops.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/linalg/metric.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/linalg/metric.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/linalg/svd.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/linear_systems/dense_linear_systems.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/linear_systems/dense_linear_systems_states.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/linear_systems/sparse_linear_systems.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/linear_systems/sparse_linear_systems_states.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/prob/boost.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/prob/boost.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/prob/kolmogorov.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/prob/kolmogorov.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/prob/student.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/prob/student.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/recursive_partitioning/ConSplits.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/recursive_partitioning/DT_impl.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/recursive_partitioning/DT_proto.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/recursive_partitioning/decision_tree.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/recursive_partitioning/feature_encoding.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/recursive_partitioning/random_forest.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/regress/LinearRegression_impl.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/regress/LinearRegression_proto.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/regress/clustered_errors.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/regress/clustered_errors_state.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/regress/linear.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/regress/logistic.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/regress/marginal.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/regress/mlogr_margins.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/regress/multilogistic.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/sample/WeightedSample_impl.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/sample/WeightedSample_proto.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/sample/random_process.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/sample/weighted_sample.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/shared/HandleTraits.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/stats/CoxPHState.hpp	/^namespace modules {$/;"	n	namespace:madlib
modules	modules/stats/chi_squared_test.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/clustered_variance_coxph.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/correlation.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/cox_prop_hazards.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/coxph_improved.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/distribution.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/kolmogorov_smirnov_test.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/mann_whitney_test.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/marginal_cox.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/one_way_anova.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/robust_variance_coxph.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/t_test.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/stats/wilcoxon_signed_rank_test.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/tsa/arima.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
modules	modules/utilities/path.cpp	/^namespace modules {$/;"	n	namespace:madlib	file:
momentum	modules/convex/type/model.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble momentum;$/;"	m	struct:madlib::modules::convex::MLPModel
mult	modules/crf/linear_crf.cpp	/^Eigen::VectorXd mult(Eigen::MatrixXd Mi, Eigen::VectorXd Vi, bool trans,$/;"	f	namespace:madlib::modules::crf
multiplier	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble multiplier;$/;"	m	class:madlib::modules::stats::CoxPHState
multiplier	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble multiplier;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
nEpochs	modules/convex/type/state.hpp	/^    dimension_type nEpochs;$/;"	m	class:madlib::modules::convex::MLPMiniBatchState
n_bins	modules/recursive_partitioning/DT_proto.hpp	/^    uint16_type n_bins;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
n_cat_features	modules/recursive_partitioning/DT_proto.hpp	/^    uint16_type n_cat_features;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
n_con_features	modules/recursive_partitioning/DT_proto.hpp	/^    uint16_type n_con_features;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
n_leaf_nodes	modules/recursive_partitioning/DT_proto.hpp	/^    uint32_type n_leaf_nodes;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
n_reachable_leaf_nodes	modules/recursive_partitioning/DT_proto.hpp	/^    uint32_type n_reachable_leaf_nodes;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
n_rows	modules/recursive_partitioning/DT_proto.hpp	/^    uint64_type n_rows;  \/\/ number of rows mapped to this node$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
n_split	modules/recursive_partitioning/decision_tree.cpp	/^    int n_split;$/;"	m	struct:madlib::modules::recursive_partitioning::SubTreeInfo	file:
n_tuples	modules/convex/task/l1.hpp	/^    static int n_tuples;$/;"	m	class:madlib::modules::convex::L1
n_tuples	modules/convex/task/l1.hpp	/^L1<Model>::n_tuples = 1;$/;"	m	class:madlib::modules::convex::L1
n_tuples	modules/convex/task/l2.hpp	/^    static int n_tuples;$/;"	m	class:madlib::modules::convex::L2
n_tuples	modules/convex/task/l2.hpp	/^L2<Model, Hessian>::n_tuples = 1;$/;"	m	class:madlib::modules::convex::L2
n_y_labels	modules/recursive_partitioning/DT_proto.hpp	/^    uint16_type n_y_labels;$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
name	libstemmer/libstemmer/modules.h	/^  const char * name;$/;"	m	struct:stemmer_encoding
name	libstemmer/libstemmer/modules.h	/^  const char * name;$/;"	m	struct:stemmer_modules
name	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    char name[NAMEDATALEN];$/;"	m	struct:madlib::dbconnector::postgres::TypeInformation
nan_value	madpack/yaml/constructor.py	/^    nan_value = -inf_value\/inf_value   # Trying to make a quiet NaN (like C99).$/;"	v	class:SafeConstructor
nargs	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    uint16_t nargs;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
need_events	madpack/yaml/emitter.py	/^    def need_events(self, count):$/;"	m	class:Emitter
need_more_events	madpack/yaml/emitter.py	/^    def need_more_events(self):$/;"	m	class:Emitter
need_more_tokens	madpack/yaml/scanner.py	/^    def need_more_tokens(self):$/;"	m	class:Scanner
newColumn	modules/linalg/matrix_agg.cpp	/^    newColumn(const Allocator& inAllocator) {$/;"	f	class:madlib::modules::linalg::MatrixAggState
new_madlib_ver	madpack/madpack.py	/^new_madlib_ver = configyml.get_version(maddir_conf)  # MADlib OS-level version$/;"	v
new_vers	madpack/create_changelist.py	/^new_vers = sys.argv[3]$/;"	v
newmodule	madpack/upgrade_util.py	/^    def newmodule(self):$/;"	m	class:ChangeHandler
nextPowerOfTwo	utils/Math.hpp	/^nextPowerOfTwo(T inValue) {$/;"	f	namespace:madlib::utils
next_possible_simple_key	madpack/yaml/scanner.py	/^    def next_possible_simple_key(self):$/;"	m	class:Scanner
nfev	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
nfun	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
ngettext	ports/postgres/dbconnector/dbconnector.hpp	73;"	d
nnz_processed	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 nnz_processed;$/;"	m	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
nnz_processed	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 nnz_processed;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
nodeCount	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::nodeCount(const Index node_index) const{$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
nodeWeightedCount	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::nodeWeightedCount(const Index node_index) const{$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
node_stats	modules/recursive_partitioning/DT_proto.hpp	/^    Matrix_type node_stats;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
nonnull_split_count	modules/recursive_partitioning/DT_proto.hpp	/^    ColumnVector_type nonnull_split_count;$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
norm	modules/convex/type/model.hpp	/^    double norm() const {$/;"	f	struct:madlib::modules::convex::MLPModel
normal_transition	modules/elastic_net/elastic_net_binomial_fista.cpp	/^inline void BinomialFista::normal_transition(FistaState<MutableArrayHandle<double> >& state,$/;"	f	class:madlib::modules::elastic_net::BinomialFista
normal_transition	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^inline void GaussianFista::normal_transition (FistaState<MutableArrayHandle<double> >& state,$/;"	f	class:madlib::modules::elastic_net::GaussianFista
norwegian_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^extern void norwegian_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
norwegian_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^extern struct SN_env * norwegian_ISO_8859_1_create_env(void) { return SN_create_env(0, 2, 0); }$/;"	f
norwegian_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^extern int norwegian_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
norwegian_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_norwegian.c	/^extern void norwegian_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
norwegian_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_norwegian.c	/^extern struct SN_env * norwegian_UTF_8_create_env(void) { return SN_create_env(0, 2, 0); }$/;"	f
norwegian_UTF_8_stem	libstemmer/src_c/stem_UTF_8_norwegian.c	/^extern int norwegian_UTF_8_stem(struct SN_env * z) {$/;"	f
npt	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
num	modules/stats/kolmogorov_smirnov_test.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap num;$/;"	m	class:madlib::modules::stats::KSTestTransitionState	file:
num	modules/stats/mann_whitney_test.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap num;$/;"	m	class:madlib::modules::stats::MWTestTransitionState	file:
num	modules/stats/one_way_anova.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap num;$/;"	m	class:madlib::modules::stats::OWATransitionState	file:
num	modules/stats/wilcoxon_signed_rank_test.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap num;$/;"	m	class:madlib::modules::stats::WSRTestTransitionState	file:
numBasis	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 numBasis;       \/\/ M$/;"	m	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
numBasis	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 numBasis;$/;"	m	class:madlib::modules::regress::MarginsLinregrInteractionState	file:
numBasis	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 numBasis;$/;"	m	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
numBasis	modules/stats/marginal_cox.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 numBasis;$/;"	m	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
numCategoricalVarsInSubset	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 numCategoricalVarsInSubset;$/;"	m	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
numCategoricalVarsInSubset	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 numCategoricalVarsInSubset;$/;"	m	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
numCategoricalVarsInSubset	modules/stats/marginal_cox.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 numCategoricalVarsInSubset;$/;"	m	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
numCategories	modules/regress/clustered_errors_state.hpp	/^    uint16_type numCategories;$/;"	m	class:madlib::modules::regress::ClusteredState
numCategories	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 numCategories;  \/\/ L$/;"	m	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
numCategories	modules/regress/mlogr_margins.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 numCategories;$/;"	m	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
numCategories	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 numCategories;$/;"	m	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
numCategories	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 numCategories;$/;"	m	class:madlib::modules::regress::MLogRegrRobustTransitionState	file:
numCols	modules/linalg/matrix_agg.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numCols;$/;"	m	class:madlib::modules::linalg::MatrixAggState	file:
numCols	modules/linalg/matrix_decomp.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numCols;$/;"	m	class:madlib::modules::linalg::MatrixComposeState	file:
numDimensions	modules/linalg/average.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 numDimensions;$/;"	m	class:madlib::modules::linalg::AvgVectorState	file:
numEquations	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 numEquations;$/;"	m	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
numEquations	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 numEquations;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
numFields	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::numFields() const {$/;"	f	class:madlib::dbconnector::postgres::AnyType
numGroups	modules/stats/one_way_anova.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 numGroups;$/;"	m	class:madlib::modules::stats::OWATransitionState	file:
numRows	modules/convex/type/state.hpp	/^        count_type numRows;$/;"	m	struct:madlib::modules::convex::MLPIGDState::AlgoState
numRows	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	struct:madlib::modules::convex::GLMCGState::AlgoState
numRows	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	struct:madlib::modules::convex::GLMIGDState::AlgoState
numRows	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	struct:madlib::modules::convex::GLMNewtonState::AlgoState
numRows	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	struct:madlib::modules::convex::LMFIGDState::AlgoState
numRows	modules/convex/type/state.hpp	/^    count_type numRows;$/;"	m	class:madlib::modules::convex::MLPMiniBatchState
numRows	modules/convex/utils_regularization.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::convex::ScalesState	file:
numRows	modules/crf/linear_crf.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
numRows	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::elastic_net::FistaState
numRows	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::elastic_net::IgdState
numRows	modules/linalg/average.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::linalg::AvgVectorState	file:
numRows	modules/linalg/matrix_agg.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::linalg::MatrixAggState	file:
numRows	modules/linalg/matrix_decomp.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::linalg::MatrixComposeState	file:
numRows	modules/linear_systems/dense_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 numRows;$/;"	m	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState	file:
numRows	modules/linear_systems/dense_linear_systems_states.hpp	/^    uint64_type numRows;$/;"	m	class:madlib::modules::linear_systems::ResidualState
numRows	modules/linear_systems/sparse_linear_systems_states.hpp	/^    uint64_type numRows;$/;"	m	class:madlib::modules::linear_systems::ResidualState
numRows	modules/regress/LinearRegression_proto.hpp	/^    uint64_type numRows;$/;"	m	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
numRows	modules/regress/LinearRegression_proto.hpp	/^    uint64_type numRows;$/;"	m	class:madlib::modules::regress::LinearRegressionAccumulator
numRows	modules/regress/LinearRegression_proto.hpp	/^    uint64_type numRows;$/;"	m	class:madlib::modules::regress::RobustLinearRegressionAccumulator
numRows	modules/regress/clustered_errors_state.hpp	/^    uint64_type numRows;$/;"	m	class:madlib::modules::regress::ClusteredState
numRows	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
numRows	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::regress::LogRegrIGDTransitionState	file:
numRows	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::regress::LogRegrIRLSTransitionState	file:
numRows	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::regress::MarginalLogRegrTransitionState	file:
numRows	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::regress::RobustLogRegrTransitionState	file:
numRows	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::regress::MarginsLinregrInteractionState	file:
numRows	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
numRows	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
numRows	modules/regress/mlogr_margins.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
numRows	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
numRows	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::regress::MLogRegrRobustTransitionState	file:
numRows	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::stats::CoxPHState
numRows	modules/stats/chi_squared_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::stats::Chi2TestTransitionState	file:
numRows	modules/stats/clustered_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::stats::CLABTransitionState	file:
numRows	modules/stats/cox_prop_hazards.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::stats::ArrayElemCorrState	file:
numRows	modules/stats/marginal_cox.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
numRows	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
numRows	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numRows;$/;"	m	class:madlib::modules::stats::RBHSTransitionState	file:
numTies	modules/stats/mann_whitney_test.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap numTies;$/;"	m	class:madlib::modules::stats::MWTestTransitionState	file:
numTies	modules/stats/wilcoxon_signed_rank_test.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap numTies;$/;"	m	class:madlib::modules::stats::WSRTestTransitionState	file:
numVars	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 numVars;$/;"	m	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
numVars	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 numVars;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
numX	modules/stats/t_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numX;$/;"	m	class:madlib::modules::stats::TTestTransitionState	file:
numY	modules/stats/t_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 numY;$/;"	m	class:madlib::modules::stats::TTestTransitionState	file:
num_calls	modules/assoc_rules/assoc_rules.cpp	/^    int32    num_calls;$/;"	m	struct:madlib::modules::assoc_rules::perm_fctx	file:
num_categories	modules/glm/MultiResponseGLM_proto.hpp	/^    uint16_type num_categories;$/;"	m	class:madlib::modules::glm::MultiResponseGLMAccumulator
num_categories	modules/glm/Ordinal_proto.hpp	/^    uint16_type num_categories;$/;"	m	class:madlib::modules::glm::OrdinalAccumulator
num_category	modules/regress/multilogistic.cpp	/^    int32_t num_category;$/;"	m	struct:madlib::modules::regress::__sr_ctx	file:
num_censored	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 num_censored;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
num_coef	modules/convex/newton.hpp	/^    uint16_type         num_coef;   \/\/ number of variables$/;"	m	class:madlib::modules::convex::Newton
num_coef	modules/glm/GLM_proto.hpp	/^    uint16_type         num_coef;   \/\/ number of variables$/;"	m	class:madlib::modules::glm::GLMAccumulator
num_elems	modules/assoc_rules/assoc_rules.cpp	/^    int32    num_elems;$/;"	m	struct:madlib::modules::assoc_rules::perm_fctx	file:
num_feature	modules/regress/multilogistic.cpp	/^    int32_t num_feature;$/;"	m	struct:madlib::modules::regress::__sr_ctx	file:
num_features	modules/crf/linear_crf.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 num_features;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
num_features	modules/glm/MultiResponseGLM_proto.hpp	/^    uint16_type num_features;$/;"	m	class:madlib::modules::glm::MultiResponseGLMAccumulator
num_features	modules/glm/Ordinal_proto.hpp	/^    uint16_type num_features;$/;"	m	class:madlib::modules::glm::OrdinalAccumulator
num_features	modules/recursive_partitioning/ConSplits.hpp	/^    uint16_type num_features;$/;"	m	class:madlib::modules::recursive_partitioning::ConSplitsResult
num_features	modules/recursive_partitioning/ConSplits.hpp	/^    uint16_type num_features;$/;"	m	class:madlib::modules::recursive_partitioning::ConSplitsSample
num_labels	modules/crf/linear_crf.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 num_labels;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
num_layers	modules/convex/type/model.hpp	/^    uint16_t num_layers;$/;"	m	struct:madlib::modules::convex::MLPModel
num_rows	modules/glm/GLM_proto.hpp	/^    uint64_type num_rows;$/;"	m	class:madlib::modules::glm::GLMAccumulator
num_rows	modules/glm/MultiResponseGLM_proto.hpp	/^    uint64_type num_rows;$/;"	m	class:madlib::modules::glm::MultiResponseGLMAccumulator
num_rows	modules/glm/Ordinal_proto.hpp	/^    uint64_type num_rows;$/;"	m	class:madlib::modules::glm::OrdinalAccumulator
num_rows	modules/recursive_partitioning/ConSplits.hpp	/^    uint32_type num_rows;$/;"	m	class:madlib::modules::recursive_partitioning::ConSplitsSample
num_rows_processed	modules/glm/GLM_proto.hpp	/^    uint64_t num_rows_processed;$/;"	m	class:madlib::modules::glm::GLMResult
num_rows_processed	modules/glm/MultiResponseGLM_proto.hpp	/^    uint64_t num_rows_processed;$/;"	m	class:madlib::modules::glm::MultiResponseGLMResult
num_rows_processed	modules/glm/Ordinal_proto.hpp	/^    uint64_t num_rows_processed;$/;"	m	class:madlib::modules::glm::OrdinalResult
num_splits	modules/recursive_partitioning/ConSplits.hpp	/^    uint16_type num_splits;$/;"	m	class:madlib::modules::recursive_partitioning::ConSplitsResult
num_splits	modules/recursive_partitioning/ConSplits.hpp	/^    uint16_type num_splits;$/;"	m	class:madlib::modules::recursive_partitioning::ConSplitsSample
numberOfStages	modules/convex/type/state.hpp	/^        dimension_type numberOfStages;$/;"	m	struct:madlib::modules::convex::MLPIGDState::TaskState
numberOfStages	modules/convex/type/state.hpp	/^    dimension_type numberOfStages;$/;"	m	class:madlib::modules::convex::MLPMiniBatchState
numbersOfUnits	modules/convex/type/state.hpp	/^        dimension_pointer_type numbersOfUnits;$/;"	m	struct:madlib::modules::convex::MLPIGDState::TaskState
numbersOfUnits	modules/convex/type/state.hpp	/^    dimension_pointer_type numbersOfUnits;$/;"	m	class:madlib::modules::convex::MLPMiniBatchState
numeric_type	modules/convex/type/state.hpp	/^    typedef typename HandleTraits<Handle>::ReferenceToDouble numeric_type;$/;"	t	class:madlib::modules::convex::MLPIGDState
numeric_type	modules/convex/type/state.hpp	/^    typedef typename HandleTraits<Handle>::ReferenceToDouble numeric_type;$/;"	t	class:madlib::modules::convex::MLPMiniBatchState
oid	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    Oid oid;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
oid	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    Oid oid;$/;"	m	struct:madlib::dbconnector::postgres::TypeInformation
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = BOOLOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon51
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = FLOAT8ARRAYOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon67
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = FLOAT8ARRAYOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon75
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = FLOAT8ARRAYOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon79
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = FLOAT8ARRAYOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon83
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = FLOAT8ARRAYOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon89
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = FLOAT8OID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon37
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT2OID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon47
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT2OID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon49
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT4ARRAYOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon55
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT4ARRAYOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon58
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT4ARRAYOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon71
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT4ARRAYOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon86
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT4OID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon43
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT4OID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon45
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT8ARRAYOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon61
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT8ARRAYOID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon64
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT8OID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon39
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = INT8OID };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon41
oid	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { oid = InvalidOid };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraitsBase::__anon33
old_vers	madpack/create_changelist.py	/^old_vers = sys.argv[2]$/;"	v
ols_coef	modules/regress/LinearRegression_proto.hpp	/^    ColumnVector_type ols_coef;$/;"	m	class:madlib::modules::regress::RobustLinearRegressionAccumulator
oneSidedStudentsT_CDF	modules/prob/student.hpp	/^oneSidedStudentsT_CDF(const RealType& t,  uint64_t nu) {$/;"	f	namespace:madlib::modules::prob::__anon13
open	madpack/yaml/serializer.py	/^    def open(self):$/;"	m	class:Serializer
operator !=	utils/MallocAllocator.hpp	/^operator!=(const MallocAllocator<T>&, const MallocAllocator<T>&)$/;"	f	namespace:madlib::utils
operator ()	modules/linalg/metric.cpp	/^    bool operator()(const TupleType& inTuple1, const TupleType& inTuple2) {$/;"	f	struct:madlib::modules::linalg::__anon15::ReverseLexicographicComparator
operator ()	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::operator()() {$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle
operator ()	ports/postgres/dbconnector/NativeRandomNumberGenerator_impl.hpp	/^NativeRandomNumberGenerator::operator()() {$/;"	f	class:madlib::dbconnector::postgres::NativeRandomNumberGenerator
operator ()	utils/memory.hpp	/^    void operator()(T * \/* p *\/) { }$/;"	f	struct:madlib::utils::memory::NoDeleter
operator ()	utils/memory.hpp	/^    void operator()(T *p) {$/;"	f	struct:madlib::utils::memory::ArrayDeleter
operator *=	modules/convex/type/model.hpp	/^    LMFModel &operator*=(const double &c) {$/;"	f	struct:madlib::modules::convex::LMFModel
operator *=	modules/convex/type/model.hpp	/^    MLPModel& operator*=(const double &c) {$/;"	f	struct:madlib::modules::convex::MLPModel
operator ++	utils/Reference.hpp	/^    MutableReference& operator++() {$/;"	f	class:madlib::utils::MutableReference
operator ++	utils/Reference.hpp	/^    U operator++(int) {$/;"	f	class:madlib::utils::MutableReference
operator +=	modules/convex/type/model.hpp	/^    LMFModel &operator+=(const LMFModel<OtherHandle> &inOtherModel) {$/;"	f	struct:madlib::modules::convex::LMFModel
operator +=	modules/convex/type/model.hpp	/^    MLPModel& operator+=(const MLPModel<OtherHandle> &inOtherModel) {$/;"	f	struct:madlib::modules::convex::MLPModel
operator +=	modules/crf/linear_crf.cpp	/^    LinCrfLBFGSTransitionState &operator+=($/;"	f	class:madlib::modules::crf::LinCrfLBFGSTransitionState
operator +=	modules/linalg/average.cpp	/^    AvgVectorState &operator+=($/;"	f	class:madlib::modules::linalg::AvgVectorState
operator +=	modules/linalg/matrix_decomp.cpp	/^    MatrixComposeState &operator+=($/;"	f	class:madlib::modules::linalg::MatrixComposeState
operator +=	modules/linear_systems/dense_linear_systems.cpp	/^    DenseDirectLinearSystemTransitionState &operator+=($/;"	f	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState
operator +=	modules/linear_systems/sparse_linear_systems.cpp	/^    SparseDirectLinearSystemTransitionState &operator+=($/;"	f	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState
operator +=	modules/linear_systems/sparse_linear_systems.cpp	/^    SparseInMemIterativeLinearSystemTransitionState &operator+=($/;"	f	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState
operator +=	modules/regress/logistic.cpp	/^    LogRegrCGTransitionState &operator+=($/;"	f	class:madlib::modules::regress::LogRegrCGTransitionState
operator +=	modules/regress/logistic.cpp	/^    LogRegrIGDTransitionState &operator+=($/;"	f	class:madlib::modules::regress::LogRegrIGDTransitionState
operator +=	modules/regress/logistic.cpp	/^    LogRegrIRLSTransitionState &operator+=($/;"	f	class:madlib::modules::regress::LogRegrIRLSTransitionState
operator +=	modules/regress/logistic.cpp	/^    MarginalLogRegrTransitionState &operator+=($/;"	f	class:madlib::modules::regress::MarginalLogRegrTransitionState
operator +=	modules/regress/logistic.cpp	/^    RobustLogRegrTransitionState &operator+=($/;"	f	class:madlib::modules::regress::RobustLogRegrTransitionState
operator +=	modules/regress/marginal.cpp	/^    MarginsLinregrInteractionState &operator+=($/;"	f	class:madlib::modules::regress::MarginsLinregrInteractionState
operator +=	modules/regress/marginal.cpp	/^    MarginsLogregrInteractionState &operator+=($/;"	f	class:madlib::modules::regress::MarginsLogregrInteractionState
operator +=	modules/regress/marginal.cpp	/^    MarginsMLogregrInteractionState &operator+=($/;"	f	class:madlib::modules::regress::MarginsMLogregrInteractionState
operator +=	modules/regress/mlogr_margins.cpp	/^    template <class OtherHandle> mlogregrMarginalTransitionState &operator+=($/;"	f	class:madlib::modules::regress::mlogregrMarginalTransitionState
operator +=	modules/regress/multilogistic.cpp	/^    template <class OtherHandle> MLogRegrIRLSTransitionState &operator+=($/;"	f	class:madlib::modules::regress::MLogRegrIRLSTransitionState
operator +=	modules/regress/multilogistic.cpp	/^    template <class OtherHandle> MLogRegrRobustTransitionState &operator+=($/;"	f	class:madlib::modules::regress::MLogRegrRobustTransitionState
operator +=	modules/stats/CoxPHState.hpp	/^    CoxPHState &operator+=($/;"	f	class:madlib::modules::stats::CoxPHState
operator +=	modules/stats/cox_prop_hazards.cpp	/^    ArrayElemCorrState &operator+=($/;"	f	class:madlib::modules::stats::ArrayElemCorrState
operator +=	modules/stats/marginal_cox.cpp	/^    MarginsCoxPropHazardState &operator+=($/;"	f	class:madlib::modules::stats::MarginsCoxPropHazardState
operator +=	utils/Reference.hpp	/^    MutableReference& operator+=(const U &inValue) {$/;"	f	class:madlib::utils::MutableReference
operator -=	modules/convex/type/model.hpp	/^    LMFModel &operator-=(const LMFModel<OtherHandle> &inOtherModel) {$/;"	f	struct:madlib::modules::convex::LMFModel
operator -=	modules/convex/type/model.hpp	/^    MLPModel& operator-=(const MLPModel<OtherHandle> &inOtherModel) {$/;"	f	struct:madlib::modules::convex::MLPModel
operator -=	utils/Reference.hpp	/^    MutableReference& operator-=(const U &inValue) {$/;"	f	class:madlib::utils::MutableReference
operator <<	modules/glm/GLM_impl.hpp	/^GLMAccumulator<Container,Family,Link>::operator<<($/;"	f	class:madlib::modules::glm::GLMAccumulator
operator <<	modules/glm/MultiResponseGLM_impl.hpp	/^MultiResponseGLMAccumulator<Container,Family,Link>::operator<<($/;"	f	class:madlib::modules::glm::MultiResponseGLMAccumulator
operator <<	modules/glm/Ordinal_impl.hpp	/^OrdinalAccumulator<Container,Family,Link>::operator<<($/;"	f	class:madlib::modules::glm::OrdinalAccumulator
operator <<	modules/recursive_partitioning/ConSplits.hpp	/^    ConSplitsSample& operator<<(const MappedColumnVector& inVec) {$/;"	f	class:madlib::modules::recursive_partitioning::ConSplitsSample
operator <<	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::operator<<($/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
operator <<	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::operator<<(const surr_tuple_type& inTuple) {$/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
operator <<	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::operator<<(const tuple_type& inTuple) {$/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
operator <<	modules/regress/LinearRegression_impl.hpp	/^HeteroLinearRegressionAccumulator<Container>::operator<<($/;"	f	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
operator <<	modules/regress/LinearRegression_impl.hpp	/^HeteroLinearRegressionAccumulator<Container>::operator<<(const hetero_tuple_type& inTuple) {$/;"	f	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
operator <<	modules/regress/LinearRegression_impl.hpp	/^LinearRegressionAccumulator<Container>::operator<<($/;"	f	class:madlib::modules::regress::LinearRegressionAccumulator
operator <<	modules/regress/LinearRegression_impl.hpp	/^LinearRegressionAccumulator<Container>::operator<<(const tuple_type& inTuple) {$/;"	f	class:madlib::modules::regress::LinearRegressionAccumulator
operator <<	modules/regress/LinearRegression_impl.hpp	/^RobustLinearRegressionAccumulator<Container>::operator<<($/;"	f	class:madlib::modules::regress::RobustLinearRegressionAccumulator
operator <<	modules/regress/LinearRegression_impl.hpp	/^RobustLinearRegressionAccumulator<Container>::operator<<(const tuple_type& inTuple) {$/;"	f	class:madlib::modules::regress::RobustLinearRegressionAccumulator
operator <<	modules/sample/WeightedSample_impl.hpp	/^WeightedSampleAccumulator<Container, T>::operator<<($/;"	f	class:madlib::modules::sample::WeightedSampleAccumulator
operator <<	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::operator<<(const AnyType &inValue) {$/;"	f	class:madlib::dbconnector::postgres::AnyType
operator =	dbal/EigenIntegration/HandleMap_impl.hpp	/^HandleMap<EigenType, Handle, MapOptions>::operator=($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
operator =	dbal/Reference_impl.hpp	/^Ref<T, IsMutable>::operator=(const Ref& inRef) {$/;"	f	class:madlib::dbal::Ref
operator =	dbal/Reference_impl.hpp	/^Ref<T, true>::operator=(Ref<T, true>& inRef) {$/;"	f	class:madlib::dbal::Ref
operator =	dbal/Reference_impl.hpp	/^Ref<T, true>::operator=(const val_type& inValue) {$/;"	f	class:madlib::dbal::Ref
operator =	modules/convex/type/model.hpp	/^    LMFModel &operator=(const LMFModel<OtherHandle> &inOtherModel) {$/;"	f	struct:madlib::modules::convex::LMFModel
operator =	modules/convex/type/model.hpp	/^    MLPModel& operator=(const MLPModel<OtherHandle> &inOtherModel) {$/;"	f	struct:madlib::modules::convex::MLPModel
operator =	modules/convex/type/state.hpp	/^    GLMCGState &operator=(const GLMCGState<OtherHandle> &inOtherState) {$/;"	f	class:madlib::modules::convex::GLMCGState
operator =	modules/convex/type/state.hpp	/^    GLMIGDState &operator=(const GLMIGDState<OtherHandle> &inOtherState) {$/;"	f	class:madlib::modules::convex::GLMIGDState
operator =	modules/convex/type/state.hpp	/^    GLMNewtonState &operator=(const GLMNewtonState<OtherHandle> &inOtherState) {$/;"	f	class:madlib::modules::convex::GLMNewtonState
operator =	modules/convex/type/state.hpp	/^    LMFIGDState &operator=(const LMFIGDState<OtherHandle> &inOtherState) {$/;"	f	class:madlib::modules::convex::LMFIGDState
operator =	modules/convex/type/state.hpp	/^    MLPIGDState &operator=(const MLPIGDState<OtherHandle> &inOtherState) {$/;"	f	class:madlib::modules::convex::MLPIGDState
operator =	modules/convex/type/state.hpp	/^    MLPMiniBatchState &operator=(const MLPMiniBatchState<OtherHandle> &inOtherState) {$/;"	f	class:madlib::modules::convex::MLPMiniBatchState
operator =	modules/convex/type/tuple.hpp	/^    ExampleTuple& operator=(const ExampleTuple &rhs) {$/;"	f	struct:madlib::modules::convex::ExampleTuple
operator =	modules/convex/utils_regularization.cpp	/^    ScalesState& operator= (const ScalesState<OtherHandle>& inOtherState)$/;"	f	class:madlib::modules::convex::ScalesState
operator =	modules/crf/linear_crf.cpp	/^    LinCrfLBFGSTransitionState &operator=($/;"	f	class:madlib::modules::crf::LinCrfLBFGSTransitionState
operator =	modules/elastic_net/state/fista.hpp	/^    FistaState& operator= (const FistaState<OtherHandle>& inOtherState)$/;"	f	class:madlib::modules::elastic_net::FistaState
operator =	modules/elastic_net/state/igd.hpp	/^    IgdState &operator= (const IgdState<OtherHandle>& inOtherState)$/;"	f	class:madlib::modules::elastic_net::IgdState
operator =	modules/glm/GLM_impl.hpp	/^GLMAccumulator<Container,Family,Link>::operator=($/;"	f	class:madlib::modules::glm::GLMAccumulator
operator =	modules/glm/MultiResponseGLM_impl.hpp	/^MultiResponseGLMAccumulator<Container,Family,Link>::operator=($/;"	f	class:madlib::modules::glm::MultiResponseGLMAccumulator
operator =	modules/glm/Ordinal_impl.hpp	/^OrdinalAccumulator<Container,Family,Link>::operator=($/;"	f	class:madlib::modules::glm::OrdinalAccumulator
operator =	modules/linalg/matrix_decomp.cpp	/^    MatrixComposeState &operator=($/;"	f	class:madlib::modules::linalg::MatrixComposeState
operator =	modules/linear_systems/dense_linear_systems.cpp	/^    DenseDirectLinearSystemTransitionState &operator=($/;"	f	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState
operator =	modules/linear_systems/dense_linear_systems_states.hpp	/^inline ResidualState<Container>& ResidualState<Container>::operator= ($/;"	f	class:madlib::modules::linear_systems::ResidualState
operator =	modules/linear_systems/sparse_linear_systems.cpp	/^    SparseDirectLinearSystemTransitionState &operator=($/;"	f	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState
operator =	modules/linear_systems/sparse_linear_systems.cpp	/^    SparseInMemIterativeLinearSystemTransitionState &operator=($/;"	f	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState
operator =	modules/linear_systems/sparse_linear_systems_states.hpp	/^inline ResidualState<Container>& ResidualState<Container>::operator= ($/;"	f	class:madlib::modules::linear_systems::ResidualState
operator =	modules/regress/LinearRegression_impl.hpp	/^HeteroLinearRegressionAccumulator<Container>::operator=($/;"	f	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
operator =	modules/regress/LinearRegression_impl.hpp	/^LinearRegressionAccumulator<Container>::operator=($/;"	f	class:madlib::modules::regress::LinearRegressionAccumulator
operator =	modules/regress/LinearRegression_impl.hpp	/^RobustLinearRegressionAccumulator<Container>::operator=($/;"	f	class:madlib::modules::regress::RobustLinearRegressionAccumulator
operator =	modules/regress/clustered_errors_state.hpp	/^inline ClusteredState<Container>& ClusteredState<Container>::operator= ($/;"	f	class:madlib::modules::regress::ClusteredState
operator =	modules/regress/logistic.cpp	/^    LogRegrCGTransitionState &operator=($/;"	f	class:madlib::modules::regress::LogRegrCGTransitionState
operator =	modules/regress/logistic.cpp	/^    LogRegrIGDTransitionState &operator=($/;"	f	class:madlib::modules::regress::LogRegrIGDTransitionState
operator =	modules/regress/logistic.cpp	/^    LogRegrIRLSTransitionState &operator=($/;"	f	class:madlib::modules::regress::LogRegrIRLSTransitionState
operator =	modules/regress/logistic.cpp	/^    MarginalLogRegrTransitionState &operator=($/;"	f	class:madlib::modules::regress::MarginalLogRegrTransitionState
operator =	modules/regress/logistic.cpp	/^    RobustLogRegrTransitionState &operator=($/;"	f	class:madlib::modules::regress::RobustLogRegrTransitionState
operator =	modules/regress/marginal.cpp	/^    MarginsLinregrInteractionState &operator=($/;"	f	class:madlib::modules::regress::MarginsLinregrInteractionState
operator =	modules/regress/marginal.cpp	/^    MarginsLogregrInteractionState &operator=($/;"	f	class:madlib::modules::regress::MarginsLogregrInteractionState
operator =	modules/regress/marginal.cpp	/^    MarginsMLogregrInteractionState &operator=($/;"	f	class:madlib::modules::regress::MarginsMLogregrInteractionState
operator =	modules/regress/mlogr_margins.cpp	/^    template <class OtherHandle> mlogregrMarginalTransitionState &operator=($/;"	f	class:madlib::modules::regress::mlogregrMarginalTransitionState
operator =	modules/regress/multilogistic.cpp	/^    template <class OtherHandle> MLogRegrIRLSTransitionState &operator=($/;"	f	class:madlib::modules::regress::MLogRegrIRLSTransitionState
operator =	modules/regress/multilogistic.cpp	/^    template <class OtherHandle> MLogRegrRobustTransitionState &operator=($/;"	f	class:madlib::modules::regress::MLogRegrRobustTransitionState
operator =	modules/sample/WeightedSample_impl.hpp	/^WeightedSampleAccumulator<Container, T>::operator=($/;"	f	class:madlib::modules::sample::WeightedSampleAccumulator
operator =	modules/stats/CoxPHState.hpp	/^    CoxPHState &operator=($/;"	f	class:madlib::modules::stats::CoxPHState
operator =	modules/stats/cox_prop_hazards.cpp	/^    ArrayElemCorrState &operator=($/;"	f	class:madlib::modules::stats::ArrayElemCorrState
operator =	modules/stats/marginal_cox.cpp	/^    MarginsCoxPropHazardState &operator=($/;"	f	class:madlib::modules::stats::MarginsCoxPropHazardState
operator =	utils/Reference.hpp	/^    MutableReference& operator=(const Base &inReference) {$/;"	f	class:madlib::utils::MutableReference
operator =	utils/Reference.hpp	/^    MutableReference& operator=(const MutableReference& inReference) {$/;"	f	class:madlib::utils::MutableReference
operator =	utils/Reference.hpp	/^    MutableReference& operator=(const U &inValue) {$/;"	f	class:madlib::utils::MutableReference
operator =	utils/Reference.hpp	/^    Reference& operator=(const Reference&) {$/;"	f	class:madlib::utils::Reference
operator ==	utils/MallocAllocator.hpp	/^operator==(const MallocAllocator<T>&, const MallocAllocator<T>&)$/;"	f	namespace:madlib::utils
operator >>	dbal/ByteStream_impl.hpp	/^operator>>($/;"	f	namespace:madlib::dbal
operator >>	dbal/DynamicStruct_proto.hpp	/^    operator>>(ByteStream_type& inStream, Derived& inStruct) {$/;"	f	class:madlib::dbal::DynamicStruct
operator AnyType	modules/convex/type/state.hpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::convex::GLMCGState
operator AnyType	modules/convex/type/state.hpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::convex::GLMIGDState
operator AnyType	modules/convex/type/state.hpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::convex::GLMNewtonState
operator AnyType	modules/convex/type/state.hpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::convex::LMFIGDState
operator AnyType	modules/convex/type/state.hpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::convex::MLPIGDState
operator AnyType	modules/convex/type/state.hpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::convex::MLPMiniBatchState
operator AnyType	modules/convex/utils_regularization.cpp	/^    inline operator AnyType () const$/;"	f	class:madlib::modules::convex::ScalesState
operator AnyType	modules/crf/linear_crf.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::crf::LinCrfLBFGSTransitionState
operator AnyType	modules/elastic_net/state/fista.hpp	/^    inline operator AnyType () const$/;"	f	class:madlib::modules::elastic_net::FistaState
operator AnyType	modules/elastic_net/state/igd.hpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::elastic_net::IgdState
operator AnyType	modules/linalg/average.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::linalg::AvgVectorState
operator AnyType	modules/linalg/matrix_agg.cpp	/^    operator AnyType() const {$/;"	f	class:madlib::modules::linalg::MatrixAggState
operator AnyType	modules/linalg/matrix_decomp.cpp	/^    operator AnyType() const {$/;"	f	class:madlib::modules::linalg::MatrixComposeState
operator AnyType	modules/linear_systems/dense_linear_systems.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState
operator AnyType	modules/linear_systems/sparse_linear_systems.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState
operator AnyType	modules/linear_systems/sparse_linear_systems.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState
operator AnyType	modules/regress/logistic.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::regress::LogRegrCGTransitionState
operator AnyType	modules/regress/logistic.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::regress::LogRegrIGDTransitionState
operator AnyType	modules/regress/logistic.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::regress::LogRegrIRLSTransitionState
operator AnyType	modules/regress/logistic.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::regress::MarginalLogRegrTransitionState
operator AnyType	modules/regress/logistic.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::regress::RobustLogRegrTransitionState
operator AnyType	modules/regress/marginal.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::regress::MarginsLinregrInteractionState
operator AnyType	modules/regress/marginal.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::regress::MarginsLogregrInteractionState
operator AnyType	modules/regress/marginal.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::regress::MarginsMLogregrInteractionState
operator AnyType	modules/regress/mlogr_margins.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::regress::mlogregrMarginalTransitionState
operator AnyType	modules/regress/multilogistic.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::regress::MLogRegrIRLSTransitionState
operator AnyType	modules/regress/multilogistic.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::regress::MLogRegrRobustTransitionState
operator AnyType	modules/stats/CoxPHState.hpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::CoxPHState
operator AnyType	modules/stats/chi_squared_test.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::Chi2TestTransitionState
operator AnyType	modules/stats/clustered_variance_coxph.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::CLABTransitionState
operator AnyType	modules/stats/cox_prop_hazards.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::ArrayElemCorrState
operator AnyType	modules/stats/kolmogorov_smirnov_test.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::KSTestTransitionState
operator AnyType	modules/stats/mann_whitney_test.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::MWTestTransitionState
operator AnyType	modules/stats/marginal_cox.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::MarginsCoxPropHazardState
operator AnyType	modules/stats/one_way_anova.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::OWATransitionState
operator AnyType	modules/stats/robust_variance_coxph.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::RBCoxPHTransitionState
operator AnyType	modules/stats/robust_variance_coxph.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::RBHSTransitionState
operator AnyType	modules/stats/t_test.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::TTestTransitionState
operator AnyType	modules/stats/wilcoxon_signed_rank_test.cpp	/^    inline operator AnyType() const {$/;"	f	class:madlib::modules::stats::WSRTestTransitionState
operator U	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    operator U() {$/;"	f	class:madlib::dbconnector::postgres::convertTo
operator U	utils/Reference.hpp	/^    operator U() const {$/;"	f	class:madlib::utils::Reference
operator []	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::operator[](uint16_t inID) const {$/;"	f	class:madlib::dbconnector::postgres::AnyType
operator []	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^ArrayHandle<T>::operator[](size_t inIndex) const {$/;"	f	class:madlib::dbconnector::postgres::ArrayHandle
operator []	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^MutableArrayHandle<T>::operator[](size_t inIndex) {$/;"	f	class:madlib::dbconnector::postgres::MutableArrayHandle
operator []	ports/postgres/dbconnector/ByteString_impl.hpp	/^ByteString::operator[](size_t inIndex) const {$/;"	f	class:madlib::dbconnector::postgres::ByteString
operator []	ports/postgres/dbconnector/ByteString_impl.hpp	/^MutableByteString::operator[](size_t inIndex) {$/;"	f	class:madlib::dbconnector::postgres::MutableByteString
operator const val_type&	dbal/Reference_impl.hpp	/^Ref<T, true>::operator const val_type&() const {$/;"	f	class:madlib::dbal::Ref
operator delete	ports/postgres/dbconnector/NewDelete.cpp	/^operator delete(void *ptr) throw() {$/;"	f
operator delete	ports/postgres/dbconnector/NewDelete.cpp	/^operator delete(void *ptr, const std::nothrow_t&) throw() {$/;"	f
operator delete[]	ports/postgres/dbconnector/NewDelete.cpp	/^operator delete[](void *ptr) throw() {$/;"	f
operator delete[]	ports/postgres/dbconnector/NewDelete.cpp	/^operator delete[](void *ptr, const std::nothrow_t&) throw() {$/;"	f
operator new	ports/postgres/dbconnector/NewDelete.cpp	/^operator new(std::size_t size) throw (std::bad_alloc) {$/;"	f
operator new	ports/postgres/dbconnector/NewDelete.cpp	/^operator new(std::size_t size, const std::nothrow_t&) throw() {$/;"	f
operator new[]	ports/postgres/dbconnector/NewDelete.cpp	/^operator new[](std::size_t size) throw (std::bad_alloc) {$/;"	f
operator new[]	ports/postgres/dbconnector/NewDelete.cpp	/^operator new[](std::size_t size, const std::nothrow_t&) throw() {$/;"	f
operator val_type&	dbal/Reference_impl.hpp	/^Ref<T, IsMutable>::operator val_type&() const {$/;"	f	class:madlib::dbal::Ref
operator val_type&	dbal/Reference_impl.hpp	/^Ref<T, true>::operator val_type&() {$/;"	f	class:madlib::dbal::Ref
optimizer	modules/glm/MultiResponseGLM_proto.hpp	/^    convex::Newton<Container,MultiResponseGLMAccumulator> optimizer;$/;"	m	class:madlib::modules::glm::MultiResponseGLMAccumulator
optimizer	modules/glm/Ordinal_proto.hpp	/^    convex::Newton<Container,OrdinalAccumulator> optimizer;$/;"	m	class:madlib::modules::glm::OrdinalAccumulator
os	madpack/create_changelist.py	/^import os$/;"	i
os	madpack/madpack.py	/^import os$/;"	i
os	madpack/upgrade_util.py	/^import os$/;"	i
os	madpack/utilities.py	/^import os$/;"	i
other	utils/MallocAllocator.hpp	/^    template <class U> struct rebind { typedef MallocAllocator<U> other; };$/;"	t	struct:madlib::utils::MallocAllocator::rebind
out_grouping	libstemmer/runtime/utilities.c	/^extern int out_grouping(struct SN_env * z, const unsigned char * s, int min, int max, int repeat) {$/;"	f
out_grouping_U	libstemmer/runtime/utilities.c	/^extern int out_grouping_U(struct SN_env * z, const unsigned char * s, int min, int max, int repeat) {$/;"	f
out_grouping_b	libstemmer/runtime/utilities.c	/^extern int out_grouping_b(struct SN_env * z, const unsigned char * s, int min, int max, int repeat) {$/;"	f
out_grouping_b_U	libstemmer/runtime/utilities.c	/^extern int out_grouping_b_U(struct SN_env * z, const unsigned char * s, int min, int max, int repeat) {$/;"	f
out_of_range_err_msg	modules/glm/family.hpp	/^    static std::string out_of_range_err_msg() {$/;"	f	class:madlib::modules::glm::Binomial
out_of_range_err_msg	modules/glm/family.hpp	/^    static std::string out_of_range_err_msg() {$/;"	f	class:madlib::modules::glm::Gamma
out_of_range_err_msg	modules/glm/family.hpp	/^    static std::string out_of_range_err_msg() {$/;"	f	class:madlib::modules::glm::Gaussian
out_of_range_err_msg	modules/glm/family.hpp	/^    static std::string out_of_range_err_msg() {$/;"	f	class:madlib::modules::glm::InverseGaussian
out_of_range_err_msg	modules/glm/family.hpp	/^    static std::string out_of_range_err_msg() {$/;"	f	class:madlib::modules::glm::Poisson
output	dbal/OutputStreamBufferBase_impl.hpp	/^OutputStreamBufferBase<Derived, C, Allocator>::output(C* inMsg,$/;"	f	class:madlib::dbal::OutputStreamBufferBase
output	ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp	/^OutputStreamBuffer<ErrorLevel, Allocator>::output(char *inMsg,$/;"	f	class:madlib::dbconnector::postgres::OutputStreamBuffer
overflow	dbal/OutputStreamBufferBase_impl.hpp	/^OutputStreamBufferBase<Derived, C, Allocator>::overflow(int_type c) {$/;"	f	class:madlib::dbal::OutputStreamBufferBase
p	libstemmer/runtime/api.h	/^    symbol * p;$/;"	m	struct:SN_env
p	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble p; \/\/ used for mirror truncation$/;"	m	class:madlib::modules::elastic_net::IgdState
p5	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
p66	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
pValue	modules/regress/LinearRegression_proto.hpp	/^    double pValue;$/;"	m	class:madlib::modules::regress::HeteroLinearRegression
pValues	modules/regress/LinearRegression_proto.hpp	/^    MutableNativeColumnVector pValues;$/;"	m	class:madlib::modules::regress::LinearRegression
pValues	modules/regress/LinearRegression_proto.hpp	/^    MutableNativeColumnVector pValues;$/;"	m	class:madlib::modules::regress::RobustLinearRegression
p_abs	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^inline double Igd<Model>::p_abs (CVector& v, double r)$/;"	f	class:madlib::modules::elastic_net::Igd
p_log2_p	modules/recursive_partitioning/feature_encoding.cpp	/^p_log2_p(const double &p) {$/;"	f	namespace:madlib::modules::recursive_partitioning::__anon26
p_values	modules/glm/GLM_proto.hpp	/^    MutableNativeColumnVector p_values;$/;"	m	class:madlib::modules::glm::GLMResult
p_values	modules/glm/MultiResponseGLM_proto.hpp	/^    MutableNativeMatrix p_values;$/;"	m	class:madlib::modules::glm::MultiResponseGLMResult
p_values_alpha	modules/glm/Ordinal_proto.hpp	/^    MutableNativeColumnVector p_values_alpha;$/;"	m	class:madlib::modules::glm::OrdinalResult
p_values_beta	modules/glm/Ordinal_proto.hpp	/^    MutableNativeColumnVector p_values_beta;$/;"	m	class:madlib::modules::glm::OrdinalResult
parentIndex	modules/recursive_partitioning/DT_proto.hpp	/^    Index parentIndex(Index current) const {$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
parse	madpack/yaml/__init__.py	/^def parse(stream, Loader=Loader):$/;"	f
parseConnectionStr	madpack/madpack.py	/^def parseConnectionStr(connectionStr):$/;"	f
parse_args	madpack/argparse.py	/^    def parse_args(self, args=None, namespace=None):$/;"	m	class:ArgumentParser
parse_arguments	madpack/madpack.py	/^def parse_arguments():$/;"	f
parse_block_mapping_first_key	madpack/yaml/parser.py	/^    def parse_block_mapping_first_key(self):$/;"	m	class:Parser
parse_block_mapping_key	madpack/yaml/parser.py	/^    def parse_block_mapping_key(self):$/;"	m	class:Parser
parse_block_mapping_value	madpack/yaml/parser.py	/^    def parse_block_mapping_value(self):$/;"	m	class:Parser
parse_block_node	madpack/yaml/parser.py	/^    def parse_block_node(self):$/;"	m	class:Parser
parse_block_node_or_indentless_sequence	madpack/yaml/parser.py	/^    def parse_block_node_or_indentless_sequence(self):$/;"	m	class:Parser
parse_block_sequence_entry	madpack/yaml/parser.py	/^    def parse_block_sequence_entry(self):$/;"	m	class:Parser
parse_block_sequence_first_entry	madpack/yaml/parser.py	/^    def parse_block_sequence_first_entry(self):$/;"	m	class:Parser
parse_document_content	madpack/yaml/parser.py	/^    def parse_document_content(self):$/;"	m	class:Parser
parse_document_end	madpack/yaml/parser.py	/^    def parse_document_end(self):$/;"	m	class:Parser
parse_document_start	madpack/yaml/parser.py	/^    def parse_document_start(self):$/;"	m	class:Parser
parse_flow_mapping_empty_value	madpack/yaml/parser.py	/^    def parse_flow_mapping_empty_value(self):$/;"	m	class:Parser
parse_flow_mapping_first_key	madpack/yaml/parser.py	/^    def parse_flow_mapping_first_key(self):$/;"	m	class:Parser
parse_flow_mapping_key	madpack/yaml/parser.py	/^    def parse_flow_mapping_key(self, first=False):$/;"	m	class:Parser
parse_flow_mapping_value	madpack/yaml/parser.py	/^    def parse_flow_mapping_value(self):$/;"	m	class:Parser
parse_flow_node	madpack/yaml/parser.py	/^    def parse_flow_node(self):$/;"	m	class:Parser
parse_flow_sequence_entry	madpack/yaml/parser.py	/^    def parse_flow_sequence_entry(self, first=False):$/;"	m	class:Parser
parse_flow_sequence_entry_mapping_end	madpack/yaml/parser.py	/^    def parse_flow_sequence_entry_mapping_end(self):$/;"	m	class:Parser
parse_flow_sequence_entry_mapping_key	madpack/yaml/parser.py	/^    def parse_flow_sequence_entry_mapping_key(self):$/;"	m	class:Parser
parse_flow_sequence_entry_mapping_value	madpack/yaml/parser.py	/^    def parse_flow_sequence_entry_mapping_value(self):$/;"	m	class:Parser
parse_flow_sequence_first_entry	madpack/yaml/parser.py	/^    def parse_flow_sequence_first_entry(self):$/;"	m	class:Parser
parse_implicit_document_start	madpack/yaml/parser.py	/^    def parse_implicit_document_start(self):$/;"	m	class:Parser
parse_indentless_sequence_entry	madpack/yaml/parser.py	/^    def parse_indentless_sequence_entry(self):$/;"	m	class:Parser
parse_known_args	madpack/argparse.py	/^    def parse_known_args(self, args=None, namespace=None):$/;"	m	class:ArgumentParser
parse_node	madpack/yaml/parser.py	/^    def parse_node(self, block=False, indentless_sequence=False):$/;"	m	class:Parser
parse_stream_start	madpack/yaml/parser.py	/^    def parse_stream_start(self):$/;"	m	class:Parser
pdf	modules/prob/boost.hpp	/^    static ProbFnOverride pdf(const Distribution& inDist, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
pdf	modules/prob/boost.hpp	/^    static ProbFnOverride pdf(const Distribution& inDist, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::IntegerDomainCheck
pdf	modules/prob/boost.hpp	/^    static ProbFnOverride pdf(const Distribution& inDist, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::NonNegativeIntegerDomainCheck
pdf	modules/prob/boost.hpp	/^    static ProbFnOverride pdf(const Distribution& inDist, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::PositiveDomainCheck
pdf	modules/prob/boost.hpp	/^    static ProbFnOverride pdf(const Distribution& inDist,$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
pdf	modules/prob/boost.hpp	/^    static ProbFnOverride pdf(const Distribution&, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::RealDomainCheck
pdf	modules/prob/boost.hpp	/^    static ProbFnOverride pdf(const Distribution&, const RealType& inX,$/;"	f	struct:madlib::modules::prob::__anon12::ZeroOneDomainCheck
pdf	modules/prob/boost.hpp	/^    static ProbFnOverride pdf(const Distribution&, const RealType&, RealType&) {$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
pdf	modules/prob/student.hpp	/^pdf($/;"	f	namespace:madlib::modules::prob
pdf	modules/prob/student.hpp	/^pdf(const boost::math::students_t_distribution<RealType, Policy>& dist,$/;"	f	namespace:madlib::modules::prob
peek	madpack/yaml/reader.py	/^    def peek(self, index=0):$/;"	m	class:Reader
peek_event	madpack/yaml/parser.py	/^    def peek_event(self):$/;"	m	class:Parser
peek_token	madpack/yaml/scanner.py	/^    def peek_token(self):$/;"	m	class:Scanner
perm_fctx	modules/assoc_rules/assoc_rules.cpp	/^typedef struct perm_fctx$/;"	s	namespace:madlib::modules::assoc_rules	file:
perm_fctx	modules/assoc_rules/assoc_rules.cpp	/^} perm_fctx;$/;"	t	namespace:madlib::modules::assoc_rules	typeref:struct:madlib::modules::assoc_rules::perm_fctx	file:
pickSurrogates	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::pickSurrogates($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
point	modules/crf/linear_crf.cpp	/^    int  iflag, iter, nfun, point, ispt, iypt, maxfev, info, bound, npt, cp, nfev, inmc, iycn, iscn;$/;"	m	class:madlib::modules::crf::LBFGS	file:
pointer	utils/MallocAllocator.hpp	/^    typedef T* pointer;$/;"	t	class:madlib::utils::MallocAllocator
pointer	utils/MallocAllocator.hpp	/^    typedef void* pointer;$/;"	t	class:madlib::utils::MallocAllocator
policies	dbal/BoostIntegration/MathToolkit_impl.hpp	/^namespace policies {$/;"	n	namespace:boost::math
policy_type	modules/prob/kolmogorov.hpp	/^    typedef Policy policy_type;$/;"	t	class:madlib::modules::prob::kolmogorov_distribution
polymorphic	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    bool polymorphic;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
porter_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^extern void porter_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
porter_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^extern struct SN_env * porter_ISO_8859_1_create_env(void) { return SN_create_env(0, 2, 1); }$/;"	f
porter_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^extern int porter_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
porter_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_porter.c	/^extern void porter_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
porter_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_porter.c	/^extern struct SN_env * porter_UTF_8_create_env(void) { return SN_create_env(0, 2, 1); }$/;"	f
porter_UTF_8_stem	libstemmer/src_c/stem_UTF_8_porter.c	/^extern int porter_UTF_8_stem(struct SN_env * z) {$/;"	f
portid	madpack/madpack.py	/^portid = None       # Target port ID (eg: pg90, gp40)$/;"	v
portid_list	madpack/madpack.py	/^portid_list = []$/;"	v
ports	madpack/madpack.py	/^ports = configyml.get_ports(maddir_conf)  # object made of Ports.yml$/;"	v
portuguese_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^extern void portuguese_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
portuguese_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^extern struct SN_env * portuguese_ISO_8859_1_create_env(void) { return SN_create_env(0, 3, 0); }$/;"	f
portuguese_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^extern int portuguese_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
portuguese_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_portuguese.c	/^extern void portuguese_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
portuguese_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_portuguese.c	/^extern struct SN_env * portuguese_UTF_8_create_env(void) { return SN_create_env(0, 3, 0); }$/;"	f
portuguese_UTF_8_stem	libstemmer/src_c/stem_UTF_8_portuguese.c	/^extern int portuguese_UTF_8_stem(struct SN_env * z) {$/;"	f
posToIndices	modules/stats/one_way_anova.cpp	/^    typename HandleTraits<Handle>::DoublePtr posToIndices;$/;"	m	class:madlib::modules::stats::OWATransitionState	file:
pos_len	modules/assoc_rules/assoc_rules.cpp	/^    int32    pos_len;$/;"	m	struct:madlib::modules::assoc_rules::perm_fctx	file:
positions	modules/assoc_rules/assoc_rules.cpp	/^    char*    positions;$/;"	m	struct:madlib::modules::assoc_rules::perm_fctx	file:
postgres	ports/greenplum/dbconnector/Compatibility.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/Allocator_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/Allocator_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/AnyType_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/AnyType_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/ArrayHandle_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/ArrayWithNullException_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/Backend.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/ByteString_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/ByteString_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/Compatibility.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/FunctionHandle_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/NativeRandomNumberGenerator_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/NativeRandomNumberGenerator_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/PGException_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/TransparentHandle_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/TypeTraits_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/UDF_impl.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/UDF_proto.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/dbconnector.hpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector
postgres	ports/postgres/dbconnector/main.cpp	/^namespace postgres {$/;"	n	namespace:madlib::dbconnector	file:
predict	modules/convex/task/linear_svm.hpp	/^LinearSVM<Model, Tuple>::predict($/;"	f	class:madlib::modules::convex::LinearSVM
predict	modules/convex/task/lmf.hpp	/^LMF<Model, Tuple>::predict($/;"	f	class:madlib::modules::convex::LMF
predict	modules/convex/task/mlp.hpp	/^MLP<Model, Tuple>::predict($/;"	f	class:madlib::modules::convex::MLP
predict	modules/convex/task/ols.hpp	/^OLS<Model, Tuple, Hessian>::predict($/;"	f	class:madlib::modules::convex::OLS
predict	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::predict(MappedIntegerVector cat_features,$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
predict_response	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::predict_response($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
predict_response	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::predict_response(Index leaf_index) const {$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
predictions	modules/recursive_partitioning/DT_proto.hpp	/^    Matrix_type predictions;   \/\/ used as integer if we do classification$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
prefix	madpack/yaml/reader.py	/^    def prefix(self, length=1):$/;"	m	class:Reader
prepareSample	modules/sample/WeightedSample_impl.hpp	/^prepareSample($/;"	f	namespace:madlib::modules::sample
prepareSample	modules/sample/WeightedSample_impl.hpp	/^prepareSample(WeightedSampleAccumulator<Container, T>&, const T&) { }$/;"	f	namespace:madlib::modules::sample
prepare_anchor	madpack/yaml/emitter.py	/^    def prepare_anchor(self, anchor):$/;"	m	class:Emitter
prepare_tag	madpack/yaml/emitter.py	/^    def prepare_tag(self, tag):$/;"	m	class:Emitter
prepare_tag_handle	madpack/yaml/emitter.py	/^    def prepare_tag_handle(self, handle):$/;"	m	class:Emitter
prepare_tag_prefix	madpack/yaml/emitter.py	/^    def prepare_tag_prefix(self, prefix):$/;"	m	class:Emitter
prepare_version	madpack/yaml/emitter.py	/^    def prepare_version(self, version):$/;"	m	class:Emitter
print	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::print($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
print_debug_list	modules/recursive_partitioning/decision_tree.cpp	/^string print_debug_list(IterableContainer debug_list){$/;"	f	namespace:madlib::modules::recursive_partitioning
print_help	madpack/argparse.py	/^    def print_help(self, file=None):$/;"	m	class:ArgumentParser
print_split	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::print_split($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
print_usage	madpack/argparse.py	/^    def print_usage(self, file=None):$/;"	m	class:ArgumentParser
print_version	madpack/argparse.py	/^    def print_version(self, file=None):$/;"	m	class:ArgumentParser
prob	modules/prob/boost.cpp	/^namespace prob {$/;"	n	namespace:madlib::modules	file:
prob	modules/prob/boost.hpp	/^namespace prob {$/;"	n	namespace:madlib::modules
prob	modules/prob/kolmogorov.cpp	/^namespace prob {$/;"	n	namespace:madlib::modules	file:
prob	modules/prob/kolmogorov.hpp	/^namespace prob {$/;"	n	namespace:madlib::modules
prob	modules/prob/student.cpp	/^namespace prob {$/;"	n	namespace:madlib::modules	file:
prob	modules/prob/student.hpp	/^namespace prob {$/;"	n	namespace:madlib::modules
process_anchor	madpack/yaml/emitter.py	/^    def process_anchor(self, indicator):$/;"	m	class:Emitter
process_directives	madpack/yaml/parser.py	/^    def process_directives(self):$/;"	m	class:Parser
process_empty_scalar	madpack/yaml/parser.py	/^    def process_empty_scalar(self, mark):$/;"	m	class:Parser
process_scalar	madpack/yaml/emitter.py	/^    def process_scalar(self):$/;"	m	class:Emitter
process_tag	madpack/yaml/emitter.py	/^    def process_tag(self):$/;"	m	class:Emitter
proxy	modules/elastic_net/elastic_net_optimizer_fista.hpp	/^inline void Fista<Model>::proxy (CVector& y, CVector& gradient_y, CVector& x,$/;"	f	class:madlib::modules::elastic_net::Fista
prune_tree	modules/recursive_partitioning/decision_tree.cpp	/^SubTreeInfo prune_tree(MutableTree &dt,$/;"	f	namespace:madlib::modules::recursive_partitioning
pseudoInverse	dbal/EigenIntegration/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp	/^SymmetricPositiveDefiniteEigenDecomposition<MatrixType>::pseudoInverse() const {$/;"	f	class:madlib::dbal::eigen_integration::SymmetricPositiveDefiniteEigenDecomposition
ptr	dbal/ByteStreamHandleBuf_impl.hpp	/^ByteStreamHandleBuf<Storage, CharType, IsMutable>::ptr() const {$/;"	f	class:madlib::dbal::ByteStreamHandleBuf
ptr	dbal/ByteStreamHandleBuf_impl.hpp	/^ByteStreamHandleBuf<Storage, CharType, Mutable>::ptr() {$/;"	f	class:madlib::dbal::ByteStreamHandleBuf
ptr	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::ptr() const {$/;"	f	class:madlib::dbal::ByteStream
ptr	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, IsMutable>::ptr() const {$/;"	f	class:madlib::dbal::DynamicStruct
ptr	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, IsMutable>::ptr() {$/;"	f	class:madlib::dbal::DynamicStruct
ptr	dbal/Reference_impl.hpp	/^Ref<T, IsMutable>::ptr() const {$/;"	f	class:madlib::dbal::Ref
ptr	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^ArrayHandle<T>::ptr() const {$/;"	f	class:madlib::dbconnector::postgres::ArrayHandle
ptr	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^MutableArrayHandle<T>::ptr() {$/;"	f	class:madlib::dbconnector::postgres::MutableArrayHandle
ptr	ports/postgres/dbconnector/ByteString_impl.hpp	/^ByteString::ptr() const {$/;"	f	class:madlib::dbconnector::postgres::ByteString
ptr	ports/postgres/dbconnector/ByteString_impl.hpp	/^MutableByteString::ptr() {$/;"	f	class:madlib::dbconnector::postgres::MutableByteString
ptr	ports/postgres/dbconnector/TransparentHandle_impl.hpp	/^TransparentHandle<T, IsMutable>::ptr() const {$/;"	f	class:madlib::dbconnector::postgres::TransparentHandle
ptr	ports/postgres/dbconnector/TransparentHandle_impl.hpp	/^TransparentHandle<T, dbal::Mutable>::ptr() {$/;"	f	class:madlib::dbconnector::postgres::TransparentHandle
ptr	utils/Reference.hpp	/^    T* ptr() {$/;"	f	class:madlib::utils::MutableReference
ptr	utils/Reference.hpp	/^    const T* ptr() const {$/;"	f	class:madlib::utils::Reference
py_min_ver	madpack/madpack.py	/^py_min_ver = [2, 6]$/;"	v
q	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble q; \/\/ used for mirror truncation$/;"	m	class:madlib::modules::elastic_net::IgdState
quantile	modules/prob/boost.hpp	/^    static ProbFnOverride quantile(const Distribution& inDist,$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
quantile	modules/prob/boost.hpp	/^    static ProbFnOverride quantile(const Distribution&, const RealType&, RealType&) {$/;"	f	struct:madlib::modules::prob::__anon12::RealDomainCheck
quantile	modules/prob/boost.hpp	/^    static ProbFnOverride quantile(const Distribution&, const RealType&,$/;"	f	struct:madlib::modules::prob::__anon12::DomainCheck
quantile	modules/prob/student.hpp	/^quantile($/;"	f	namespace:madlib::modules::prob
quantile	modules/prob/student.hpp	/^quantile(const boost::math::students_t_distribution<RealType, Policy>& dist,$/;"	f	namespace:madlib::modules::prob
r	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap r;$/;"	m	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
r	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap r;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
r2	modules/regress/LinearRegression_proto.hpp	/^    double r2;$/;"	m	class:madlib::modules::regress::LinearRegression
r_LONG	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static int r_LONG(struct SN_env * z) {$/;"	f	file:
r_LONG	libstemmer/src_c/stem_UTF_8_finnish.c	/^static int r_LONG(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_UTF_8_dutch.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_UTF_8_german.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_UTF_8_italian.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_UTF_8_porter.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_UTF_8_romanian.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static int r_R1(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_KOI8_R_russian.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_UTF_8_dutch.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_UTF_8_finnish.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_UTF_8_german.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_UTF_8_italian.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_UTF_8_porter.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_UTF_8_romanian.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_UTF_8_russian.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_R2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static int r_R2(struct SN_env * z) {$/;"	f	file:
r_RV	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_RV(struct SN_env * z) {$/;"	f	file:
r_RV	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static int r_RV(struct SN_env * z) {$/;"	f	file:
r_RV	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static int r_RV(struct SN_env * z) {$/;"	f	file:
r_RV	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static int r_RV(struct SN_env * z) {$/;"	f	file:
r_RV	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static int r_RV(struct SN_env * z) {$/;"	f	file:
r_RV	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_RV(struct SN_env * z) {$/;"	f	file:
r_RV	libstemmer/src_c/stem_UTF_8_italian.c	/^static int r_RV(struct SN_env * z) {$/;"	f	file:
r_RV	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static int r_RV(struct SN_env * z) {$/;"	f	file:
r_RV	libstemmer/src_c/stem_UTF_8_romanian.c	/^static int r_RV(struct SN_env * z) {$/;"	f	file:
r_RV	libstemmer/src_c/stem_UTF_8_spanish.c	/^static int r_RV(struct SN_env * z) {$/;"	f	file:
r_Step_1a	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_Step_1a(struct SN_env * z) {$/;"	f	file:
r_Step_1a	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static int r_Step_1a(struct SN_env * z) {$/;"	f	file:
r_Step_1a	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_Step_1a(struct SN_env * z) {$/;"	f	file:
r_Step_1a	libstemmer/src_c/stem_UTF_8_porter.c	/^static int r_Step_1a(struct SN_env * z) {$/;"	f	file:
r_Step_1b	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_Step_1b(struct SN_env * z) {$/;"	f	file:
r_Step_1b	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static int r_Step_1b(struct SN_env * z) {$/;"	f	file:
r_Step_1b	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_Step_1b(struct SN_env * z) {$/;"	f	file:
r_Step_1b	libstemmer/src_c/stem_UTF_8_porter.c	/^static int r_Step_1b(struct SN_env * z) {$/;"	f	file:
r_Step_1c	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_Step_1c(struct SN_env * z) {$/;"	f	file:
r_Step_1c	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static int r_Step_1c(struct SN_env * z) {$/;"	f	file:
r_Step_1c	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_Step_1c(struct SN_env * z) {$/;"	f	file:
r_Step_1c	libstemmer/src_c/stem_UTF_8_porter.c	/^static int r_Step_1c(struct SN_env * z) {$/;"	f	file:
r_Step_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_Step_2(struct SN_env * z) {$/;"	f	file:
r_Step_2	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static int r_Step_2(struct SN_env * z) {$/;"	f	file:
r_Step_2	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_Step_2(struct SN_env * z) {$/;"	f	file:
r_Step_2	libstemmer/src_c/stem_UTF_8_porter.c	/^static int r_Step_2(struct SN_env * z) {$/;"	f	file:
r_Step_3	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_Step_3(struct SN_env * z) {$/;"	f	file:
r_Step_3	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static int r_Step_3(struct SN_env * z) {$/;"	f	file:
r_Step_3	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_Step_3(struct SN_env * z) {$/;"	f	file:
r_Step_3	libstemmer/src_c/stem_UTF_8_porter.c	/^static int r_Step_3(struct SN_env * z) {$/;"	f	file:
r_Step_4	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_Step_4(struct SN_env * z) {$/;"	f	file:
r_Step_4	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static int r_Step_4(struct SN_env * z) {$/;"	f	file:
r_Step_4	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_Step_4(struct SN_env * z) {$/;"	f	file:
r_Step_4	libstemmer/src_c/stem_UTF_8_porter.c	/^static int r_Step_4(struct SN_env * z) {$/;"	f	file:
r_Step_5	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_Step_5(struct SN_env * z) {$/;"	f	file:
r_Step_5	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_Step_5(struct SN_env * z) {$/;"	f	file:
r_Step_5a	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static int r_Step_5a(struct SN_env * z) {$/;"	f	file:
r_Step_5a	libstemmer/src_c/stem_UTF_8_porter.c	/^static int r_Step_5a(struct SN_env * z) {$/;"	f	file:
r_Step_5b	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static int r_Step_5b(struct SN_env * z) {$/;"	f	file:
r_Step_5b	libstemmer/src_c/stem_UTF_8_porter.c	/^static int r_Step_5b(struct SN_env * z) {$/;"	f	file:
r_VI	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static int r_VI(struct SN_env * z) {$/;"	f	file:
r_VI	libstemmer/src_c/stem_UTF_8_finnish.c	/^static int r_VI(struct SN_env * z) {$/;"	f	file:
r_adjectival	libstemmer/src_c/stem_KOI8_R_russian.c	/^static int r_adjectival(struct SN_env * z) {$/;"	f	file:
r_adjectival	libstemmer/src_c/stem_UTF_8_russian.c	/^static int r_adjectival(struct SN_env * z) {$/;"	f	file:
r_adjective	libstemmer/src_c/stem_KOI8_R_russian.c	/^static int r_adjective(struct SN_env * z) {$/;"	f	file:
r_adjective	libstemmer/src_c/stem_UTF_8_russian.c	/^static int r_adjective(struct SN_env * z) {$/;"	f	file:
r_append_U_to_stems_ending_with_d_or_g	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_append_U_to_stems_ending_with_d_or_g(struct SN_env * z) {$/;"	f	file:
r_attached_pronoun	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static int r_attached_pronoun(struct SN_env * z) {$/;"	f	file:
r_attached_pronoun	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static int r_attached_pronoun(struct SN_env * z) {$/;"	f	file:
r_attached_pronoun	libstemmer/src_c/stem_UTF_8_italian.c	/^static int r_attached_pronoun(struct SN_env * z) {$/;"	f	file:
r_attached_pronoun	libstemmer/src_c/stem_UTF_8_spanish.c	/^static int r_attached_pronoun(struct SN_env * z) {$/;"	f	file:
r_case	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_case(struct SN_env * z) {$/;"	f	file:
r_case	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_case(struct SN_env * z) {$/;"	f	file:
r_case_ending	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static int r_case_ending(struct SN_env * z) {$/;"	f	file:
r_case_ending	libstemmer/src_c/stem_UTF_8_finnish.c	/^static int r_case_ending(struct SN_env * z) {$/;"	f	file:
r_case_other	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_case_other(struct SN_env * z) {$/;"	f	file:
r_case_other	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_case_other(struct SN_env * z) {$/;"	f	file:
r_case_special	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_case_special(struct SN_env * z) {$/;"	f	file:
r_case_special	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_case_special(struct SN_env * z) {$/;"	f	file:
r_check_vowel_harmony	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_check_vowel_harmony(struct SN_env * z) {$/;"	f	file:
r_combo_suffix	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static int r_combo_suffix(struct SN_env * z) {$/;"	f	file:
r_combo_suffix	libstemmer/src_c/stem_UTF_8_romanian.c	/^static int r_combo_suffix(struct SN_env * z) {$/;"	f	file:
r_consonant_pair	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static int r_consonant_pair(struct SN_env * z) {$/;"	f	file:
r_consonant_pair	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static int r_consonant_pair(struct SN_env * z) {$/;"	f	file:
r_consonant_pair	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static int r_consonant_pair(struct SN_env * z) {$/;"	f	file:
r_consonant_pair	libstemmer/src_c/stem_UTF_8_danish.c	/^static int r_consonant_pair(struct SN_env * z) {$/;"	f	file:
r_consonant_pair	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static int r_consonant_pair(struct SN_env * z) {$/;"	f	file:
r_consonant_pair	libstemmer/src_c/stem_UTF_8_swedish.c	/^static int r_consonant_pair(struct SN_env * z) {$/;"	f	file:
r_derivational	libstemmer/src_c/stem_KOI8_R_russian.c	/^static int r_derivational(struct SN_env * z) {$/;"	f	file:
r_derivational	libstemmer/src_c/stem_UTF_8_russian.c	/^static int r_derivational(struct SN_env * z) {$/;"	f	file:
r_double	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_double(struct SN_env * z) {$/;"	f	file:
r_double	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_double(struct SN_env * z) {$/;"	f	file:
r_e_ending	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static int r_e_ending(struct SN_env * z) {$/;"	f	file:
r_e_ending	libstemmer/src_c/stem_UTF_8_dutch.c	/^static int r_e_ending(struct SN_env * z) {$/;"	f	file:
r_en_ending	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static int r_en_ending(struct SN_env * z) {$/;"	f	file:
r_en_ending	libstemmer/src_c/stem_UTF_8_dutch.c	/^static int r_en_ending(struct SN_env * z) {$/;"	f	file:
r_exception1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_exception1(struct SN_env * z) {$/;"	f	file:
r_exception1	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_exception1(struct SN_env * z) {$/;"	f	file:
r_exception2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_exception2(struct SN_env * z) {$/;"	f	file:
r_exception2	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_exception2(struct SN_env * z) {$/;"	f	file:
r_factive	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_factive(struct SN_env * z) {$/;"	f	file:
r_factive	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_factive(struct SN_env * z) {$/;"	f	file:
r_i_plural	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static int r_i_plural(struct SN_env * z) {$/;"	f	file:
r_i_plural	libstemmer/src_c/stem_UTF_8_finnish.c	/^static int r_i_plural(struct SN_env * z) {$/;"	f	file:
r_i_verb_suffix	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_i_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_i_verb_suffix	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_i_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_instrum	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_instrum(struct SN_env * z) {$/;"	f	file:
r_instrum	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_instrum(struct SN_env * z) {$/;"	f	file:
r_is_reserved_word	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_is_reserved_word(struct SN_env * z) {$/;"	f	file:
r_main_suffix	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static int r_main_suffix(struct SN_env * z) {$/;"	f	file:
r_main_suffix	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static int r_main_suffix(struct SN_env * z) {$/;"	f	file:
r_main_suffix	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static int r_main_suffix(struct SN_env * z) {$/;"	f	file:
r_main_suffix	libstemmer/src_c/stem_UTF_8_danish.c	/^static int r_main_suffix(struct SN_env * z) {$/;"	f	file:
r_main_suffix	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static int r_main_suffix(struct SN_env * z) {$/;"	f	file:
r_main_suffix	libstemmer/src_c/stem_UTF_8_swedish.c	/^static int r_main_suffix(struct SN_env * z) {$/;"	f	file:
r_mark_DA	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_DA(struct SN_env * z) {$/;"	f	file:
r_mark_DAn	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_DAn(struct SN_env * z) {$/;"	f	file:
r_mark_DUr	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_DUr(struct SN_env * z) {$/;"	f	file:
r_mark_cAsInA	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_cAsInA(struct SN_env * z) {$/;"	f	file:
r_mark_ki	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_ki(struct SN_env * z) {$/;"	f	file:
r_mark_lAr	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_lAr(struct SN_env * z) {$/;"	f	file:
r_mark_lArI	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_lArI(struct SN_env * z) {$/;"	f	file:
r_mark_nA	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_nA(struct SN_env * z) {$/;"	f	file:
r_mark_nU	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_nU(struct SN_env * z) {$/;"	f	file:
r_mark_nUn	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_nUn(struct SN_env * z) {$/;"	f	file:
r_mark_nUz	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_nUz(struct SN_env * z) {$/;"	f	file:
r_mark_ncA	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_ncA(struct SN_env * z) {$/;"	f	file:
r_mark_ndA	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_ndA(struct SN_env * z) {$/;"	f	file:
r_mark_ndAn	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_ndAn(struct SN_env * z) {$/;"	f	file:
r_mark_possessives	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_possessives(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_KOI8_R_russian.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_danish.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_dutch.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_finnish.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_german.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_italian.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_romanian.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_russian.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_spanish.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_regions	libstemmer/src_c/stem_UTF_8_swedish.c	/^static int r_mark_regions(struct SN_env * z) {$/;"	f	file:
r_mark_sU	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_sU(struct SN_env * z) {$/;"	f	file:
r_mark_sUn	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_sUn(struct SN_env * z) {$/;"	f	file:
r_mark_sUnUz	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_sUnUz(struct SN_env * z) {$/;"	f	file:
r_mark_suffix_with_optional_U_vowel	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_suffix_with_optional_U_vowel(struct SN_env * z) {$/;"	f	file:
r_mark_suffix_with_optional_n_consonant	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_suffix_with_optional_n_consonant(struct SN_env * z) {$/;"	f	file:
r_mark_suffix_with_optional_s_consonant	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_suffix_with_optional_s_consonant(struct SN_env * z) {$/;"	f	file:
r_mark_suffix_with_optional_y_consonant	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_suffix_with_optional_y_consonant(struct SN_env * z) {$/;"	f	file:
r_mark_yA	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_yA(struct SN_env * z) {$/;"	f	file:
r_mark_yDU	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_yDU(struct SN_env * z) {$/;"	f	file:
r_mark_yU	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_yU(struct SN_env * z) {$/;"	f	file:
r_mark_yUm	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_yUm(struct SN_env * z) {$/;"	f	file:
r_mark_yUz	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_yUz(struct SN_env * z) {$/;"	f	file:
r_mark_yken	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_yken(struct SN_env * z) {$/;"	f	file:
r_mark_ylA	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_ylA(struct SN_env * z) {$/;"	f	file:
r_mark_ymUs_	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_ymUs_(struct SN_env * z) {$/;"	f	file:
r_mark_ysA	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_mark_ysA(struct SN_env * z) {$/;"	f	file:
r_more_than_one_syllable_word	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_more_than_one_syllable_word(struct SN_env * z) {$/;"	f	file:
r_noun	libstemmer/src_c/stem_KOI8_R_russian.c	/^static int r_noun(struct SN_env * z) {$/;"	f	file:
r_noun	libstemmer/src_c/stem_UTF_8_russian.c	/^static int r_noun(struct SN_env * z) {$/;"	f	file:
r_other_endings	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static int r_other_endings(struct SN_env * z) {$/;"	f	file:
r_other_endings	libstemmer/src_c/stem_UTF_8_finnish.c	/^static int r_other_endings(struct SN_env * z) {$/;"	f	file:
r_other_suffix	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static int r_other_suffix(struct SN_env * z) {$/;"	f	file:
r_other_suffix	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static int r_other_suffix(struct SN_env * z) {$/;"	f	file:
r_other_suffix	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static int r_other_suffix(struct SN_env * z) {$/;"	f	file:
r_other_suffix	libstemmer/src_c/stem_UTF_8_danish.c	/^static int r_other_suffix(struct SN_env * z) {$/;"	f	file:
r_other_suffix	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static int r_other_suffix(struct SN_env * z) {$/;"	f	file:
r_other_suffix	libstemmer/src_c/stem_UTF_8_swedish.c	/^static int r_other_suffix(struct SN_env * z) {$/;"	f	file:
r_owned	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_owned(struct SN_env * z) {$/;"	f	file:
r_owned	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_owned(struct SN_env * z) {$/;"	f	file:
r_particle_etc	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static int r_particle_etc(struct SN_env * z) {$/;"	f	file:
r_particle_etc	libstemmer/src_c/stem_UTF_8_finnish.c	/^static int r_particle_etc(struct SN_env * z) {$/;"	f	file:
r_perfective_gerund	libstemmer/src_c/stem_KOI8_R_russian.c	/^static int r_perfective_gerund(struct SN_env * z) {$/;"	f	file:
r_perfective_gerund	libstemmer/src_c/stem_UTF_8_russian.c	/^static int r_perfective_gerund(struct SN_env * z) {$/;"	f	file:
r_plur_owner	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_plur_owner(struct SN_env * z) {$/;"	f	file:
r_plur_owner	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_plur_owner(struct SN_env * z) {$/;"	f	file:
r_plural	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_plural(struct SN_env * z) {$/;"	f	file:
r_plural	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_plural(struct SN_env * z) {$/;"	f	file:
r_possessive	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static int r_possessive(struct SN_env * z) {$/;"	f	file:
r_possessive	libstemmer/src_c/stem_UTF_8_finnish.c	/^static int r_possessive(struct SN_env * z) {$/;"	f	file:
r_post_process_last_consonants	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_post_process_last_consonants(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_UTF_8_dutch.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_UTF_8_german.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_UTF_8_italian.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_UTF_8_romanian.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_UTF_8_spanish.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_postlude	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_postlude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_UTF_8_dutch.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_UTF_8_german.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_UTF_8_italian.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_prelude	libstemmer/src_c/stem_UTF_8_romanian.c	/^static int r_prelude(struct SN_env * z) {$/;"	f	file:
r_reflexive	libstemmer/src_c/stem_KOI8_R_russian.c	/^static int r_reflexive(struct SN_env * z) {$/;"	f	file:
r_reflexive	libstemmer/src_c/stem_UTF_8_russian.c	/^static int r_reflexive(struct SN_env * z) {$/;"	f	file:
r_residual_form	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static int r_residual_form(struct SN_env * z) {$/;"	f	file:
r_residual_form	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static int r_residual_form(struct SN_env * z) {$/;"	f	file:
r_residual_suffix	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_residual_suffix(struct SN_env * z) {$/;"	f	file:
r_residual_suffix	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static int r_residual_suffix(struct SN_env * z) {$/;"	f	file:
r_residual_suffix	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static int r_residual_suffix(struct SN_env * z) {$/;"	f	file:
r_residual_suffix	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_residual_suffix(struct SN_env * z) {$/;"	f	file:
r_residual_suffix	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static int r_residual_suffix(struct SN_env * z) {$/;"	f	file:
r_residual_suffix	libstemmer/src_c/stem_UTF_8_spanish.c	/^static int r_residual_suffix(struct SN_env * z) {$/;"	f	file:
r_shortv	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static int r_shortv(struct SN_env * z) {$/;"	f	file:
r_shortv	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static int r_shortv(struct SN_env * z) {$/;"	f	file:
r_shortv	libstemmer/src_c/stem_UTF_8_english.c	/^static int r_shortv(struct SN_env * z) {$/;"	f	file:
r_shortv	libstemmer/src_c/stem_UTF_8_porter.c	/^static int r_shortv(struct SN_env * z) {$/;"	f	file:
r_sing_owner	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_sing_owner(struct SN_env * z) {$/;"	f	file:
r_sing_owner	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_sing_owner(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_UTF_8_dutch.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_UTF_8_german.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_UTF_8_italian.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_UTF_8_romanian.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_standard_suffix	libstemmer/src_c/stem_UTF_8_spanish.c	/^static int r_standard_suffix(struct SN_env * z) {$/;"	f	file:
r_stem_nominal_verb_suffixes	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_stem_nominal_verb_suffixes(struct SN_env * z) {$/;"	f	file:
r_stem_noun_suffixes	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_stem_noun_suffixes(struct SN_env * z) {$/;"	f	file:
r_stem_suffix_chain_before_ki	libstemmer/src_c/stem_UTF_8_turkish.c	/^static int r_stem_suffix_chain_before_ki(struct SN_env * z) {$/;"	f	file:
r_step_0	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static int r_step_0(struct SN_env * z) {$/;"	f	file:
r_step_0	libstemmer/src_c/stem_UTF_8_romanian.c	/^static int r_step_0(struct SN_env * z) {$/;"	f	file:
r_t_plural	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static int r_t_plural(struct SN_env * z) {$/;"	f	file:
r_t_plural	libstemmer/src_c/stem_UTF_8_finnish.c	/^static int r_t_plural(struct SN_env * z) {$/;"	f	file:
r_tidy	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static int r_tidy(struct SN_env * z) {$/;"	f	file:
r_tidy	libstemmer/src_c/stem_UTF_8_finnish.c	/^static int r_tidy(struct SN_env * z) {$/;"	f	file:
r_tidy_up	libstemmer/src_c/stem_KOI8_R_russian.c	/^static int r_tidy_up(struct SN_env * z) {$/;"	f	file:
r_tidy_up	libstemmer/src_c/stem_UTF_8_russian.c	/^static int r_tidy_up(struct SN_env * z) {$/;"	f	file:
r_un_accent	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_un_accent(struct SN_env * z) {$/;"	f	file:
r_un_accent	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_un_accent(struct SN_env * z) {$/;"	f	file:
r_un_double	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_un_double(struct SN_env * z) {$/;"	f	file:
r_un_double	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_un_double(struct SN_env * z) {$/;"	f	file:
r_undouble	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static int r_undouble(struct SN_env * z) {$/;"	f	file:
r_undouble	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static int r_undouble(struct SN_env * z) {$/;"	f	file:
r_undouble	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_undouble(struct SN_env * z) {$/;"	f	file:
r_undouble	libstemmer/src_c/stem_UTF_8_danish.c	/^static int r_undouble(struct SN_env * z) {$/;"	f	file:
r_undouble	libstemmer/src_c/stem_UTF_8_dutch.c	/^static int r_undouble(struct SN_env * z) {$/;"	f	file:
r_undouble	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_undouble(struct SN_env * z) {$/;"	f	file:
r_v_ending	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static int r_v_ending(struct SN_env * z) {$/;"	f	file:
r_v_ending	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static int r_v_ending(struct SN_env * z) {$/;"	f	file:
r_verb	libstemmer/src_c/stem_KOI8_R_russian.c	/^static int r_verb(struct SN_env * z) {$/;"	f	file:
r_verb	libstemmer/src_c/stem_UTF_8_russian.c	/^static int r_verb(struct SN_env * z) {$/;"	f	file:
r_verb_suffix	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static int r_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_verb_suffix	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static int r_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_verb_suffix	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static int r_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_verb_suffix	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static int r_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_verb_suffix	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static int r_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_verb_suffix	libstemmer/src_c/stem_UTF_8_french.c	/^static int r_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_verb_suffix	libstemmer/src_c/stem_UTF_8_italian.c	/^static int r_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_verb_suffix	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static int r_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_verb_suffix	libstemmer/src_c/stem_UTF_8_romanian.c	/^static int r_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_verb_suffix	libstemmer/src_c/stem_UTF_8_spanish.c	/^static int r_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_vowel_suffix	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static int r_vowel_suffix(struct SN_env * z) {$/;"	f	file:
r_vowel_suffix	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static int r_vowel_suffix(struct SN_env * z) {$/;"	f	file:
r_vowel_suffix	libstemmer/src_c/stem_UTF_8_italian.c	/^static int r_vowel_suffix(struct SN_env * z) {$/;"	f	file:
r_vowel_suffix	libstemmer/src_c/stem_UTF_8_romanian.c	/^static int r_vowel_suffix(struct SN_env * z) {$/;"	f	file:
r_y_verb_suffix	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static int r_y_verb_suffix(struct SN_env * z) {$/;"	f	file:
r_y_verb_suffix	libstemmer/src_c/stem_UTF_8_spanish.c	/^static int r_y_verb_suffix(struct SN_env * z) {$/;"	f	file:
random_stepsize	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 random_stepsize;$/;"	m	class:madlib::modules::elastic_net::FistaState
range	modules/prob/kolmogorov.hpp	/^range(const kolmogorov_distribution<RealType, Policy>& \/*dist*\/) {$/;"	f	namespace:madlib::modules::prob
rankSum	modules/stats/mann_whitney_test.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap rankSum;$/;"	m	class:madlib::modules::stats::MWTestTransitionState	file:
rankSum	modules/stats/wilcoxon_signed_rank_test.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap rankSum;$/;"	m	class:madlib::modules::stats::WSRTestTransitionState	file:
rdstate	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::rdstate() const {$/;"	f	class:madlib::dbal::ByteStream
re	madpack/configyml.py	/^import re$/;"	i
re	madpack/madpack.py	/^import re$/;"	i
re	madpack/sort-module.py	/^import re$/;"	i
re	madpack/upgrade_util.py	/^import re$/;"	i
re	madpack/utilities.py	/^import re$/;"	i
re	madpack/yaml/constructor.py	/^import binascii, re, sys, types$/;"	i
re	madpack/yaml/emitter.py	/^import re$/;"	i
re	madpack/yaml/reader.py	/^import codecs, re$/;"	i
re	madpack/yaml/resolver.py	/^import re$/;"	i
read	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::read(size_t inCount) {$/;"	f	class:madlib::dbal::ByteStream
read	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, Mutable>::read(size_t inCount) {$/;"	f	class:madlib::dbal::ByteStream
reallocate	ports/postgres/dbconnector/Allocator_impl.hpp	/^Allocator::reallocate(void *inPtr, const size_t inSize) const {$/;"	f	class:madlib::dbconnector::postgres::Allocator
rebind	dbal/EigenIntegration/HandleMap_impl.hpp	/^HandleMap<EigenType, Handle, MapOptions>::rebind($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
rebind	dbal/Reference_impl.hpp	/^Ref<T, IsMutable>::rebind(val_type* inPtr) {$/;"	f	class:madlib::dbal::Ref
rebind	dbal/Reference_impl.hpp	/^Ref<T, true>::rebind(val_type* inPtr) {$/;"	f	class:madlib::dbal::Ref
rebind	modules/convex/type/model.hpp	/^    size_t rebind(const double *is_classification_in,$/;"	f	struct:madlib::modules::convex::MLPModel
rebind	modules/convex/type/state.hpp	/^    void rebind() {$/;"	f	class:madlib::modules::convex::GLMCGState
rebind	modules/convex/type/state.hpp	/^    void rebind() {$/;"	f	class:madlib::modules::convex::GLMIGDState
rebind	modules/convex/type/state.hpp	/^    void rebind() {$/;"	f	class:madlib::modules::convex::GLMNewtonState
rebind	modules/convex/type/state.hpp	/^    void rebind() {$/;"	f	class:madlib::modules::convex::LMFIGDState
rebind	modules/convex/type/state.hpp	/^    void rebind() {$/;"	f	class:madlib::modules::convex::MLPIGDState
rebind	modules/convex/type/state.hpp	/^    void rebind() {$/;"	f	class:madlib::modules::convex::MLPMiniBatchState
rebind	modules/convex/utils_regularization.cpp	/^    void rebind ()$/;"	f	class:madlib::modules::convex::ScalesState
rebind	modules/crf/linear_crf.cpp	/^    void rebind(uint32_t inWidthOfFeature) {$/;"	f	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
rebind	modules/elastic_net/state/fista.hpp	/^    void rebind ()$/;"	f	class:madlib::modules::elastic_net::FistaState
rebind	modules/elastic_net/state/igd.hpp	/^    void rebind ()$/;"	f	class:madlib::modules::elastic_net::IgdState
rebind	modules/linalg/average.cpp	/^    void rebind(uint32_t inNumDimensions) {$/;"	f	class:madlib::modules::linalg::AvgVectorState	file:
rebind	modules/linalg/matrix_agg.cpp	/^    void rebind(uint64_t inNumRows, uint64_t inNumCols) {$/;"	f	class:madlib::modules::linalg::MatrixAggState	file:
rebind	modules/linalg/matrix_decomp.cpp	/^    void rebind(uint64_t inNumRows, uint64_t inNumCols) {$/;"	f	class:madlib::modules::linalg::MatrixComposeState	file:
rebind	modules/linear_systems/dense_linear_systems.cpp	/^    void rebind(uint32_t inWidthOfA, uint32_t inWidthOfb) {$/;"	f	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState	file:
rebind	modules/linear_systems/sparse_linear_systems.cpp	/^    void rebind(uint32_t innumEquations, uint32_t inNNZA) {$/;"	f	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
rebind	modules/linear_systems/sparse_linear_systems.cpp	/^    void rebind(uint32_t innumEquations, uint32_t inNNZA) {$/;"	f	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
rebind	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::rebind(const uint16_t in_tree_depth,$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
rebind	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::rebind($/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
rebind	modules/regress/logistic.cpp	/^    void rebind(uint16_t inWidthOfX = 0) {$/;"	f	class:madlib::modules::regress::LogRegrIRLSTransitionState	file:
rebind	modules/regress/logistic.cpp	/^    void rebind(uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::LogRegrCGTransitionState	file:
rebind	modules/regress/logistic.cpp	/^    void rebind(uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::LogRegrIGDTransitionState	file:
rebind	modules/regress/logistic.cpp	/^    void rebind(uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::MarginalLogRegrTransitionState	file:
rebind	modules/regress/logistic.cpp	/^    void rebind(uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::regress::RobustLogRegrTransitionState	file:
rebind	modules/regress/marginal.cpp	/^    void rebind(const uint16_t inWidthOfX,$/;"	f	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
rebind	modules/regress/marginal.cpp	/^    void rebind(uint16_t inWidthOfX, uint16_t inNumBasis) {$/;"	f	class:madlib::modules::regress::MarginsLinregrInteractionState	file:
rebind	modules/regress/marginal.cpp	/^    void rebind(uint16_t inWidthOfX, uint16_t inNumBasis, uint16_t inNumCategoricals) {$/;"	f	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
rebind	modules/regress/mlogr_margins.cpp	/^    void rebind(uint16_t inWidthOfX = 0, uint16_t inNumCategories = 0) {$/;"	f	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
rebind	modules/regress/multilogistic.cpp	/^    void rebind(uint16_t inWidthOfX = 0, uint16_t inNumCategories = 0) {$/;"	f	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
rebind	modules/regress/multilogistic.cpp	/^    void rebind(uint16_t inWidthOfX = 0, uint16_t inNumCategories = 0) {$/;"	f	class:madlib::modules::regress::MLogRegrRobustTransitionState	file:
rebind	modules/stats/CoxPHState.hpp	/^    void rebind(uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::CoxPHState
rebind	modules/stats/clustered_variance_coxph.cpp	/^    void rebind(uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::CLABTransitionState	file:
rebind	modules/stats/cox_prop_hazards.cpp	/^    void rebind(uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::ArrayElemCorrState	file:
rebind	modules/stats/marginal_cox.cpp	/^    void rebind(const uint16_t inWidthOfX,$/;"	f	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
rebind	modules/stats/one_way_anova.cpp	/^    void rebind(uint32_t inNumGroupsReserved) {$/;"	f	class:madlib::modules::stats::OWATransitionState	file:
rebind	modules/stats/robust_variance_coxph.cpp	/^    void rebind(uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::RBCoxPHTransitionState	file:
rebind	modules/stats/robust_variance_coxph.cpp	/^    void rebind(uint16_t inWidthOfX) {$/;"	f	class:madlib::modules::stats::RBHSTransitionState	file:
rebind	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<ColumnVector, MutableArrayHandle<double> >::rebind($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
rebind	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<IntegerVector, MutableArrayHandle<int> >::rebind($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
rebind	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<Matrix, MutableArrayHandle<double> >::rebind($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
rebind	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<const ColumnVector, ArrayHandle<double> >::rebind($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
rebind	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<const IntegerVector, ArrayHandle<int> >::rebind($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
rebind	ports/postgres/dbconnector/EigenIntegration_impl.hpp	/^HandleMap<const Matrix, ArrayHandle<double> >::rebind($/;"	f	class:madlib::dbal::eigen_integration::HandleMap
rebind	utils/MallocAllocator.hpp	/^    template <class U> struct rebind { typedef MallocAllocator<U> other; };$/;"	s	class:madlib::utils::MallocAllocator
rebind	utils/Reference.hpp	/^    Reference& rebind(const T *inPtr) {$/;"	f	class:madlib::utils::Reference
recomputeTreeDepth	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::recomputeTreeDepth() const{$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
recursive_partitioning	modules/recursive_partitioning/ConSplits.hpp	/^namespace recursive_partitioning {$/;"	n	namespace:madlib::modules
recursive_partitioning	modules/recursive_partitioning/DT_impl.hpp	/^namespace recursive_partitioning {$/;"	n	namespace:madlib::modules
recursive_partitioning	modules/recursive_partitioning/DT_proto.hpp	/^namespace recursive_partitioning {$/;"	n	namespace:madlib::modules
recursive_partitioning	modules/recursive_partitioning/decision_tree.cpp	/^namespace recursive_partitioning {$/;"	n	namespace:madlib::modules	file:
recursive_partitioning	modules/recursive_partitioning/feature_encoding.cpp	/^namespace recursive_partitioning {$/;"	n	namespace:madlib::modules	file:
recursive_partitioning	modules/recursive_partitioning/random_forest.cpp	/^namespace recursive_partitioning {$/;"	n	namespace:madlib::modules	file:
reduceVariance	modules/stats/wilcoxon_signed_rank_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble reduceVariance;$/;"	m	class:madlib::modules::stats::WSRTestTransitionState	file:
ref	utils/Reference.hpp	/^    T& ref() {$/;"	f	class:madlib::utils::MutableReference
ref	utils/Reference.hpp	/^    const T& ref() const {$/;"	f	class:madlib::utils::Reference
refCategory	modules/regress/clustered_errors_state.hpp	/^    uint16_type refCategory;$/;"	m	class:madlib::modules::regress::ClusteredState
ref_category	modules/regress/mlogr_margins.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 ref_category;$/;"	m	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
ref_category	modules/regress/multilogistic.cpp	/^    int32_t ref_category;$/;"	m	struct:madlib::modules::regress::__sr_ctx	file:
ref_category	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 ref_category;$/;"	m	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
ref_category	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 ref_category;$/;"	m	class:madlib::modules::regress::MLogRegrRobustTransitionState	file:
reference	utils/MallocAllocator.hpp	/^    typedef T& reference;$/;"	t	class:madlib::utils::MallocAllocator
reference_margins	modules/regress/mlogr_margins.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap reference_margins;$/;"	m	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
register	madpack/argparse.py	/^    def register(self, registry_name, value, object):$/;"	m	class:_ActionsContainer
regress	modules/regress/LinearRegression_impl.hpp	/^namespace regress {$/;"	n	namespace:madlib::modules
regress	modules/regress/LinearRegression_proto.hpp	/^namespace regress {$/;"	n	namespace:madlib::modules
regress	modules/regress/clustered_errors.cpp	/^namespace regress {$/;"	n	namespace:madlib::modules	file:
regress	modules/regress/clustered_errors_state.hpp	/^namespace regress {$/;"	n	namespace:madlib::modules
regress	modules/regress/linear.cpp	/^namespace regress {$/;"	n	namespace:madlib::modules	file:
regress	modules/regress/logistic.cpp	/^namespace regress {$/;"	n	namespace:madlib::modules	file:
regress	modules/regress/marginal.cpp	/^namespace regress {$/;"	n	namespace:madlib::modules	file:
regress	modules/regress/mlogr_margins.cpp	/^namespace regress {$/;"	n	namespace:madlib::modules	file:
regress	modules/regress/multilogistic.cpp	/^namespace regress {$/;"	n	namespace:madlib::modules	file:
reindex	modules/regress/marginal.cpp	/^reindex(Index outer, Index inner, Index block) { return outer * block + inner; }$/;"	f	namespace:madlib::modules::regress::__anon17
relu	modules/convex/task/mlp.hpp	/^    static double relu(const double &xi) {$/;"	f	class:madlib::modules::convex::MLP
reluDerivative	modules/convex/task/mlp.hpp	/^    static double reluDerivative(const double &xi) {$/;"	f	class:madlib::modules::convex::MLP
remove_comments_from_sql	madpack/madpack.py	/^from utilities import remove_comments_from_sql$/;"	i
remove_comments_from_sql	madpack/upgrade_util.py	/^from utilities import remove_comments_from_sql$/;"	i
remove_comments_from_sql	madpack/utilities.py	/^def remove_comments_from_sql(sql):$/;"	f
remove_possible_simple_key	madpack/yaml/scanner.py	/^    def remove_possible_simple_key(self):$/;"	m	class:Scanner
replace_s	libstemmer/runtime/utilities.c	/^extern int replace_s(struct SN_env * z, int c_bra, int c_ket, int s_size, const symbol * s, int * adjptr)$/;"	f
represent	madpack/yaml/representer.py	/^    def represent(self, data):$/;"	m	class:BaseRepresenter
represent_bool	madpack/yaml/representer.py	/^    def represent_bool(self, data):$/;"	m	class:SafeRepresenter
represent_complex	madpack/yaml/representer.py	/^    def represent_complex(self, data):$/;"	m	class:Representer
represent_data	madpack/yaml/representer.py	/^    def represent_data(self, data):$/;"	m	class:BaseRepresenter
represent_date	madpack/yaml/representer.py	/^    def represent_date(self, data):$/;"	m	class:SafeRepresenter
represent_datetime	madpack/yaml/representer.py	/^    def represent_datetime(self, data):$/;"	m	class:SafeRepresenter
represent_dict	madpack/yaml/representer.py	/^    def represent_dict(self, data):$/;"	m	class:SafeRepresenter
represent_float	madpack/yaml/representer.py	/^    def represent_float(self, data):$/;"	m	class:SafeRepresenter
represent_instance	madpack/yaml/representer.py	/^    def represent_instance(self, data):$/;"	m	class:Representer
represent_int	madpack/yaml/representer.py	/^    def represent_int(self, data):$/;"	m	class:SafeRepresenter
represent_list	madpack/yaml/representer.py	/^    def represent_list(self, data):$/;"	m	class:SafeRepresenter
represent_long	madpack/yaml/representer.py	/^    def represent_long(self, data):$/;"	m	class:Representer
represent_long	madpack/yaml/representer.py	/^    def represent_long(self, data):$/;"	m	class:SafeRepresenter
represent_mapping	madpack/yaml/representer.py	/^    def represent_mapping(self, tag, mapping, flow_style=None):$/;"	m	class:BaseRepresenter
represent_module	madpack/yaml/representer.py	/^    def represent_module(self, data):$/;"	m	class:Representer
represent_name	madpack/yaml/representer.py	/^    def represent_name(self, data):$/;"	m	class:Representer
represent_none	madpack/yaml/representer.py	/^    def represent_none(self, data):$/;"	m	class:SafeRepresenter
represent_object	madpack/yaml/representer.py	/^    def represent_object(self, data):$/;"	m	class:Representer
represent_scalar	madpack/yaml/representer.py	/^    def represent_scalar(self, tag, value, style=None):$/;"	m	class:BaseRepresenter
represent_sequence	madpack/yaml/representer.py	/^    def represent_sequence(self, tag, sequence, flow_style=None):$/;"	m	class:BaseRepresenter
represent_set	madpack/yaml/representer.py	/^    def represent_set(self, data):$/;"	m	class:SafeRepresenter
represent_str	madpack/yaml/representer.py	/^    def represent_str(self, data):$/;"	m	class:Representer
represent_str	madpack/yaml/representer.py	/^    def represent_str(self, data):$/;"	m	class:SafeRepresenter
represent_tuple	madpack/yaml/representer.py	/^    def represent_tuple(self, data):$/;"	m	class:Representer
represent_undefined	madpack/yaml/representer.py	/^    def represent_undefined(self, data):$/;"	m	class:SafeRepresenter
represent_unicode	madpack/yaml/representer.py	/^    def represent_unicode(self, data):$/;"	m	class:Representer
represent_unicode	madpack/yaml/representer.py	/^    def represent_unicode(self, data):$/;"	m	class:SafeRepresenter
represent_yaml_object	madpack/yaml/representer.py	/^    def represent_yaml_object(self, tag, data, cls, flow_style=None):$/;"	m	class:SafeRepresenter
reset	modules/convex/newton.hpp	/^    void reset() {$/;"	f	class:madlib::modules::convex::Newton
reset	modules/convex/type/state.hpp	/^    inline void reset() {$/;"	f	class:madlib::modules::convex::GLMCGState
reset	modules/convex/type/state.hpp	/^    inline void reset() {$/;"	f	class:madlib::modules::convex::GLMIGDState
reset	modules/convex/type/state.hpp	/^    inline void reset() {$/;"	f	class:madlib::modules::convex::GLMNewtonState
reset	modules/convex/type/state.hpp	/^    inline void reset() {$/;"	f	class:madlib::modules::convex::LMFIGDState
reset	modules/convex/type/state.hpp	/^    inline void reset() {$/;"	f	class:madlib::modules::convex::MLPIGDState
reset	modules/convex/type/state.hpp	/^    inline void reset() {$/;"	f	class:madlib::modules::convex::MLPMiniBatchState
reset	modules/crf/linear_crf.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::crf::LinCrfLBFGSTransitionState
reset	modules/glm/GLM_impl.hpp	/^GLMAccumulator<Container,Family,Link>::reset() {$/;"	f	class:madlib::modules::glm::GLMAccumulator
reset	modules/glm/MultiResponseGLM_impl.hpp	/^MultiResponseGLMAccumulator<Container,Family,Link>::reset() {$/;"	f	class:madlib::modules::glm::MultiResponseGLMAccumulator
reset	modules/glm/Ordinal_impl.hpp	/^OrdinalAccumulator<Container,Family,Link>::reset() {$/;"	f	class:madlib::modules::glm::OrdinalAccumulator
reset	modules/linear_systems/dense_linear_systems.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState
reset	modules/linear_systems/sparse_linear_systems.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState
reset	modules/linear_systems/sparse_linear_systems.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState
reset	modules/regress/logistic.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::regress::LogRegrCGTransitionState
reset	modules/regress/logistic.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::regress::LogRegrIGDTransitionState
reset	modules/regress/logistic.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::regress::LogRegrIRLSTransitionState
reset	modules/regress/logistic.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::regress::MarginalLogRegrTransitionState
reset	modules/regress/logistic.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::regress::RobustLogRegrTransitionState
reset	modules/regress/marginal.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::regress::MarginsLinregrInteractionState
reset	modules/regress/marginal.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::regress::MarginsLogregrInteractionState
reset	modules/regress/marginal.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::regress::MarginsMLogregrInteractionState
reset	modules/regress/mlogr_margins.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::regress::mlogregrMarginalTransitionState
reset	modules/regress/multilogistic.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::regress::MLogRegrIRLSTransitionState
reset	modules/regress/multilogistic.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::regress::MLogRegrRobustTransitionState
reset	modules/stats/CoxPHState.hpp	/^    inline void reset() {$/;"	f	class:madlib::modules::stats::CoxPHState
reset	modules/stats/clustered_variance_coxph.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::stats::CLABTransitionState
reset	modules/stats/cox_prop_hazards.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::stats::ArrayElemCorrState
reset	modules/stats/marginal_cox.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::stats::MarginsCoxPropHazardState
reset	modules/stats/robust_variance_coxph.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::stats::RBCoxPHTransitionState
reset	modules/stats/robust_variance_coxph.cpp	/^    inline void reset() {$/;"	f	class:madlib::modules::stats::RBHSTransitionState
residual_norm	modules/linear_systems/dense_linear_systems_states.hpp	/^    double_type residual_norm;$/;"	m	class:madlib::modules::linear_systems::ResidualState
residual_norm	modules/linear_systems/sparse_linear_systems_states.hpp	/^    double_type residual_norm;$/;"	m	class:madlib::modules::linear_systems::ResidualState
resize	dbal/ByteStreamHandleBuf_impl.hpp	/^ByteStreamHandleBuf<Storage, CharType, Mutable>::resize($/;"	f	class:madlib::dbal::ByteStreamHandleBuf
resize	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, Mutable>::resize() {$/;"	f	class:madlib::dbal::DynamicStruct
resolve	madpack/yaml/resolver.py	/^    def resolve(self, kind, value, implicit):$/;"	m	class:BaseResolver
restore	madpack/upgrade_util.py	/^    def restore(self):$/;"	m	class:ViewDependency
result	libstemmer/runtime/header.h	/^    int result;     \/* result of the lookup *\/$/;"	m	struct:among
result_type	ports/postgres/dbconnector/NativeRandomNumberGenerator_proto.hpp	/^    typedef double result_type;$/;"	t	class:madlib::dbconnector::postgres::NativeRandomNumberGenerator
rettype	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    Oid rettype;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
right_child	modules/recursive_partitioning/decision_tree.cpp	/^    SubTreeInfo * right_child;$/;"	m	struct:madlib::modules::recursive_partitioning::SubTreeInfo	file:
risk	modules/recursive_partitioning/decision_tree.cpp	/^    double risk;$/;"	m	struct:madlib::modules::recursive_partitioning::SubTreeInfo	file:
robuststateToResult	modules/regress/logistic.cpp	/^AnyType robuststateToResult($/;"	f	namespace:madlib::modules::regress
romanian_ISO_8859_2_close_env	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^extern void romanian_ISO_8859_2_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
romanian_ISO_8859_2_create_env	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^extern struct SN_env * romanian_ISO_8859_2_create_env(void) { return SN_create_env(0, 3, 1); }$/;"	f
romanian_ISO_8859_2_stem	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^extern int romanian_ISO_8859_2_stem(struct SN_env * z) {$/;"	f
romanian_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_romanian.c	/^extern void romanian_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
romanian_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_romanian.c	/^extern struct SN_env * romanian_UTF_8_create_env(void) { return SN_create_env(0, 3, 1); }$/;"	f
romanian_UTF_8_stem	libstemmer/src_c/stem_UTF_8_romanian.c	/^extern int romanian_UTF_8_stem(struct SN_env * z) {$/;"	f
rootContainer	dbal/DynamicStruct_impl.hpp	/^    ::rootContainer() const {$/;"	f	class:madlib::dbal::DynamicStructBase
rootContainer	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, IsMutable>::rootContainer() {$/;"	f	class:madlib::dbal::DynamicStruct
rootContainer	dbal/DynamicStruct_impl.hpp	/^DynamicStructBase<Derived, Container, IsMutable>::rootContainer() const {$/;"	f	class:madlib::dbal::DynamicStructBase
root_id	modules/recursive_partitioning/decision_tree.cpp	/^    int root_id;$/;"	m	struct:madlib::modules::recursive_partitioning::SubTreeInfo	file:
rowDim	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToInt32 rowDim;$/;"	m	struct:madlib::modules::convex::LMFIGDState::TaskState
row_id	modules/linalg/svd.cpp	/^    int32_t row_id;$/;"	m	struct:madlib::modules::linalg::__sr_ctx	file:
run	modules/convex/linear_svm_igd.cpp	/^internal_linear_svm_igd_distance::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::internal_linear_svm_igd_distance
run	modules/convex/linear_svm_igd.cpp	/^internal_linear_svm_igd_result::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::internal_linear_svm_igd_result
run	modules/convex/linear_svm_igd.cpp	/^linear_svm_igd_final::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::linear_svm_igd_final
run	modules/convex/linear_svm_igd.cpp	/^linear_svm_igd_merge::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::linear_svm_igd_merge
run	modules/convex/linear_svm_igd.cpp	/^linear_svm_igd_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::linear_svm_igd_transition
run	modules/convex/lmf_igd.cpp	/^internal_lmf_igd_distance::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::internal_lmf_igd_distance
run	modules/convex/lmf_igd.cpp	/^internal_lmf_igd_result::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::internal_lmf_igd_result
run	modules/convex/lmf_igd.cpp	/^lmf_igd_final::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::lmf_igd_final
run	modules/convex/lmf_igd.cpp	/^lmf_igd_merge::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::lmf_igd_merge
run	modules/convex/lmf_igd.cpp	/^lmf_igd_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::lmf_igd_transition
run	modules/convex/mlp_igd.cpp	/^internal_mlp_igd_distance::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::internal_mlp_igd_distance
run	modules/convex/mlp_igd.cpp	/^internal_mlp_igd_result::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::internal_mlp_igd_result
run	modules/convex/mlp_igd.cpp	/^internal_mlp_minibatch_distance::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::internal_mlp_minibatch_distance
run	modules/convex/mlp_igd.cpp	/^internal_mlp_minibatch_result::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::internal_mlp_minibatch_result
run	modules/convex/mlp_igd.cpp	/^internal_predict_mlp::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::internal_predict_mlp
run	modules/convex/mlp_igd.cpp	/^mlp_igd_final::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::mlp_igd_final
run	modules/convex/mlp_igd.cpp	/^mlp_igd_merge::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::mlp_igd_merge
run	modules/convex/mlp_igd.cpp	/^mlp_igd_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::mlp_igd_transition
run	modules/convex/mlp_igd.cpp	/^mlp_minibatch_final::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::mlp_minibatch_final
run	modules/convex/mlp_igd.cpp	/^mlp_minibatch_merge::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::mlp_minibatch_merge
run	modules/convex/mlp_igd.cpp	/^mlp_minibatch_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::convex::mlp_minibatch_transition
run	modules/convex/utils_regularization.cpp	/^AnyType __utils_var_scales_result::run (AnyType& args)$/;"	f	class:madlib::modules::convex::__utils_var_scales_result
run	modules/convex/utils_regularization.cpp	/^AnyType utils_normalize_data::run (AnyType& args)$/;"	f	class:madlib::modules::convex::utils_normalize_data
run	modules/convex/utils_regularization.cpp	/^AnyType utils_var_scales_final::run (AnyType& args)$/;"	f	class:madlib::modules::convex::utils_var_scales_final
run	modules/convex/utils_regularization.cpp	/^AnyType utils_var_scales_merge::run (AnyType& args)$/;"	f	class:madlib::modules::convex::utils_var_scales_merge
run	modules/convex/utils_regularization.cpp	/^AnyType utils_var_scales_non_zero_std_final::run (AnyType& args)$/;"	f	class:madlib::modules::convex::utils_var_scales_non_zero_std_final
run	modules/convex/utils_regularization.cpp	/^AnyType utils_var_scales_transition::run (AnyType& args)$/;"	f	class:madlib::modules::convex::utils_var_scales_transition
run	modules/crf/linear_crf.cpp	/^internal_lincrf_lbfgs_converge::run(AnyType &args) {$/;"	f	class:madlib::modules::crf::internal_lincrf_lbfgs_converge
run	modules/crf/linear_crf.cpp	/^internal_lincrf_lbfgs_result::run(AnyType &args) {$/;"	f	class:madlib::modules::crf::internal_lincrf_lbfgs_result
run	modules/crf/linear_crf.cpp	/^lincrf_lbfgs_step_final::run(AnyType &args) {$/;"	f	class:madlib::modules::crf::lincrf_lbfgs_step_final
run	modules/crf/linear_crf.cpp	/^lincrf_lbfgs_step_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::crf::lincrf_lbfgs_step_merge_states
run	modules/crf/linear_crf.cpp	/^lincrf_lbfgs_step_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::crf::lincrf_lbfgs_step_transition
run	modules/crf/viterbi.cpp	/^AnyType vcrf_top1_label::run(AnyType& args) {$/;"	f	class:madlib::modules::crf::vcrf_top1_label
run	modules/elastic_net/elastic_net_binomial_fista.cpp	/^AnyType __binomial_fista_result::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__binomial_fista_result
run	modules/elastic_net/elastic_net_binomial_fista.cpp	/^AnyType __binomial_fista_state_diff::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__binomial_fista_state_diff
run	modules/elastic_net/elastic_net_binomial_fista.cpp	/^AnyType binomial_fista_final::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::binomial_fista_final
run	modules/elastic_net/elastic_net_binomial_fista.cpp	/^AnyType binomial_fista_merge::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::binomial_fista_merge
run	modules/elastic_net/elastic_net_binomial_fista.cpp	/^AnyType binomial_fista_transition::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::binomial_fista_transition
run	modules/elastic_net/elastic_net_binomial_igd.cpp	/^__binomial_igd_result::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__binomial_igd_result
run	modules/elastic_net/elastic_net_binomial_igd.cpp	/^__binomial_igd_state_diff::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__binomial_igd_state_diff
run	modules/elastic_net/elastic_net_binomial_igd.cpp	/^binomial_igd_final::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::binomial_igd_final
run	modules/elastic_net/elastic_net_binomial_igd.cpp	/^binomial_igd_merge::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::binomial_igd_merge
run	modules/elastic_net/elastic_net_binomial_igd.cpp	/^binomial_igd_transition::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::binomial_igd_transition
run	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^AnyType __gaussian_fista_result::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__gaussian_fista_result
run	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^AnyType __gaussian_fista_state_diff::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__gaussian_fista_state_diff
run	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^AnyType gaussian_fista_final::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::gaussian_fista_final
run	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^AnyType gaussian_fista_merge::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::gaussian_fista_merge
run	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^AnyType gaussian_fista_transition::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::gaussian_fista_transition
run	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^__gaussian_igd_result::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__gaussian_igd_result
run	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^__gaussian_igd_state_diff::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__gaussian_igd_state_diff
run	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^gaussian_igd_final::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::gaussian_igd_final
run	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^gaussian_igd_merge::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::gaussian_igd_merge
run	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^gaussian_igd_transition::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::gaussian_igd_transition
run	modules/elastic_net/elastic_net_utils.cpp	/^AnyType __elastic_net_binomial_loglikelihood::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__elastic_net_binomial_loglikelihood
run	modules/elastic_net/elastic_net_utils.cpp	/^AnyType __elastic_net_binomial_predict::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__elastic_net_binomial_predict
run	modules/elastic_net/elastic_net_utils.cpp	/^AnyType __elastic_net_binomial_prob::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__elastic_net_binomial_prob
run	modules/elastic_net/elastic_net_utils.cpp	/^AnyType __elastic_net_gaussian_predict::run (AnyType& args)$/;"	f	class:madlib::modules::elastic_net::__elastic_net_gaussian_predict
run	modules/glm/glm.cpp	/^AnyType glm_predict::run(AnyType &args) {$/;"	f	class:madlib::modules::glm::glm_predict
run	modules/glm/glm.cpp	/^AnyType glm_predict_binomial::run(AnyType &args) {$/;"	f	class:madlib::modules::glm::glm_predict_binomial
run	modules/glm/glm.cpp	/^AnyType glm_predict_poisson::run(AnyType &args) {$/;"	f	class:madlib::modules::glm::glm_predict_poisson
run	modules/glm/glm.cpp	/^glm_binomial_logit_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_binomial_logit_transition
run	modules/glm/glm.cpp	/^glm_binomial_probit_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_binomial_probit_transition
run	modules/glm/glm.cpp	/^glm_final::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_final
run	modules/glm/glm.cpp	/^glm_gamma_identity_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_gamma_identity_transition
run	modules/glm/glm.cpp	/^glm_gamma_inverse_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_gamma_inverse_transition
run	modules/glm/glm.cpp	/^glm_gamma_log_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_gamma_log_transition
run	modules/glm/glm.cpp	/^glm_gaussian_identity_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_gaussian_identity_transition
run	modules/glm/glm.cpp	/^glm_gaussian_inverse_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_gaussian_inverse_transition
run	modules/glm/glm.cpp	/^glm_gaussian_log_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_gaussian_log_transition
run	modules/glm/glm.cpp	/^glm_inverse_gaussian_identity_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_inverse_gaussian_identity_transition
run	modules/glm/glm.cpp	/^glm_inverse_gaussian_inverse_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_inverse_gaussian_inverse_transition
run	modules/glm/glm.cpp	/^glm_inverse_gaussian_log_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_inverse_gaussian_log_transition
run	modules/glm/glm.cpp	/^glm_inverse_gaussian_sqr_inverse_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_inverse_gaussian_sqr_inverse_transition
run	modules/glm/glm.cpp	/^glm_loglik_diff::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_loglik_diff
run	modules/glm/glm.cpp	/^glm_merge_states::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_merge_states
run	modules/glm/glm.cpp	/^glm_poisson_identity_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_poisson_identity_transition
run	modules/glm/glm.cpp	/^glm_poisson_log_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_poisson_log_transition
run	modules/glm/glm.cpp	/^glm_poisson_sqrt_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_poisson_sqrt_transition
run	modules/glm/glm.cpp	/^glm_result_t_stats::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_result_t_stats
run	modules/glm/glm.cpp	/^glm_result_z_stats::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::glm_result_z_stats
run	modules/glm/multi_response_glm.cpp	/^multi_response_glm_final::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::multi_response_glm_final
run	modules/glm/multi_response_glm.cpp	/^multi_response_glm_loglik_diff::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::multi_response_glm_loglik_diff
run	modules/glm/multi_response_glm.cpp	/^multi_response_glm_merge_states::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::multi_response_glm_merge_states
run	modules/glm/multi_response_glm.cpp	/^multi_response_glm_multinom_logit_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::multi_response_glm_multinom_logit_transition
run	modules/glm/multi_response_glm.cpp	/^multi_response_glm_result_z_stats::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::multi_response_glm_result_z_stats
run	modules/glm/ordinal.cpp	/^ordinal_final::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::ordinal_final
run	modules/glm/ordinal.cpp	/^ordinal_logit_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::ordinal_logit_transition
run	modules/glm/ordinal.cpp	/^ordinal_loglik_diff::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::ordinal_loglik_diff
run	modules/glm/ordinal.cpp	/^ordinal_merge_states::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::ordinal_merge_states
run	modules/glm/ordinal.cpp	/^ordinal_probit_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::ordinal_probit_transition
run	modules/glm/ordinal.cpp	/^ordinal_result::run(AnyType& args) {$/;"	f	class:madlib::modules::glm::ordinal_result
run	modules/lda/lda.cpp	/^AnyType l1_norm_with_smoothing::run(AnyType & args){$/;"	f	class:madlib::modules::lda::l1_norm_with_smoothing
run	modules/lda/lda.cpp	/^AnyType lda_count_topic_prefunc::run(AnyType & args)$/;"	f	class:madlib::modules::lda::lda_count_topic_prefunc
run	modules/lda/lda.cpp	/^AnyType lda_count_topic_sfunc::run(AnyType & args)$/;"	f	class:madlib::modules::lda::lda_count_topic_sfunc
run	modules/lda/lda.cpp	/^AnyType lda_gibbs_sample::run(AnyType & args)$/;"	f	class:madlib::modules::lda::lda_gibbs_sample
run	modules/lda/lda.cpp	/^AnyType lda_parse_model::run(AnyType & args){$/;"	f	class:madlib::modules::lda::lda_parse_model
run	modules/lda/lda.cpp	/^AnyType lda_perplexity_ffunc::run(AnyType & args){$/;"	f	class:madlib::modules::lda::lda_perplexity_ffunc
run	modules/lda/lda.cpp	/^AnyType lda_perplexity_prefunc::run(AnyType & args){$/;"	f	class:madlib::modules::lda::lda_perplexity_prefunc
run	modules/lda/lda.cpp	/^AnyType lda_perplexity_sfunc::run(AnyType & args){$/;"	f	class:madlib::modules::lda::lda_perplexity_sfunc
run	modules/lda/lda.cpp	/^AnyType lda_random_assign::run(AnyType & args)$/;"	f	class:madlib::modules::lda::lda_random_assign
run	modules/lda/lda.cpp	/^AnyType lda_transpose::run(AnyType & args)$/;"	f	class:madlib::modules::lda::lda_transpose
run	modules/lda/lda.cpp	/^lda_check_count_ceiling::run(AnyType &args) {$/;"	f	class:madlib::modules::lda::lda_check_count_ceiling
run	modules/linalg/average.cpp	/^avg_vector_final::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::avg_vector_final
run	modules/linalg/average.cpp	/^avg_vector_merge::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::avg_vector_merge
run	modules/linalg/average.cpp	/^avg_vector_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::avg_vector_transition
run	modules/linalg/average.cpp	/^normalized_avg_vector_final::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::normalized_avg_vector_final
run	modules/linalg/average.cpp	/^normalized_avg_vector_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::normalized_avg_vector_transition
run	modules/linalg/crossprod.cpp	/^AnyType __pivotalr_crossprod_merge::run (AnyType& args)$/;"	f	class:madlib::modules::linalg::__pivotalr_crossprod_merge
run	modules/linalg/crossprod.cpp	/^AnyType __pivotalr_crossprod_sym_transition::run (AnyType& args)$/;"	f	class:madlib::modules::linalg::__pivotalr_crossprod_sym_transition
run	modules/linalg/crossprod.cpp	/^AnyType __pivotalr_crossprod_transition::run (AnyType& args)$/;"	f	class:madlib::modules::linalg::__pivotalr_crossprod_transition
run	modules/linalg/dim_conversion.cpp	/^array_to_1d::run(AnyType & args) {$/;"	f	class:madlib::modules::linalg::array_to_1d
run	modules/linalg/dim_conversion.cpp	/^array_to_2d::run(AnyType & args) {$/;"	f	class:madlib::modules::linalg::array_to_2d
run	modules/linalg/dim_conversion.cpp	/^get_col_from_2d_array::run(AnyType & args) {$/;"	f	class:madlib::modules::linalg::get_col_from_2d_array
run	modules/linalg/dim_conversion.cpp	/^get_row_from_2d_array::run(AnyType & args) {$/;"	f	class:madlib::modules::linalg::get_row_from_2d_array
run	modules/linalg/matrix_agg.cpp	/^matrix_agg_final::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::matrix_agg_final
run	modules/linalg/matrix_agg.cpp	/^matrix_agg_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::matrix_agg_transition
run	modules/linalg/matrix_agg.cpp	/^matrix_column::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::matrix_column
run	modules/linalg/matrix_decomp.cpp	/^matrix_cholesky::run(AnyType& args){$/;"	f	class:madlib::modules::linalg::matrix_cholesky
run	modules/linalg/matrix_decomp.cpp	/^matrix_compose_dense_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::matrix_compose_dense_transition
run	modules/linalg/matrix_decomp.cpp	/^matrix_compose_merge::run(AnyType &args) {$/;"	f	class:madlib::modules::linalg::matrix_compose_merge
run	modules/linalg/matrix_decomp.cpp	/^matrix_compose_sparse_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::matrix_compose_sparse_transition
run	modules/linalg/matrix_decomp.cpp	/^matrix_eigen::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::matrix_eigen
run	modules/linalg/matrix_decomp.cpp	/^matrix_inv::run(AnyType& args){$/;"	f	class:madlib::modules::linalg::matrix_inv
run	modules/linalg/matrix_decomp.cpp	/^matrix_lu::run(AnyType& args){$/;"	f	class:madlib::modules::linalg::matrix_lu
run	modules/linalg/matrix_decomp.cpp	/^matrix_nuclear_norm::run(AnyType& args){$/;"	f	class:madlib::modules::linalg::matrix_nuclear_norm
run	modules/linalg/matrix_decomp.cpp	/^matrix_pinv::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::matrix_pinv
run	modules/linalg/matrix_decomp.cpp	/^matrix_qr::run(AnyType& args){$/;"	f	class:madlib::modules::linalg::matrix_qr
run	modules/linalg/matrix_decomp.cpp	/^matrix_rank::run(AnyType& args){$/;"	f	class:madlib::modules::linalg::matrix_rank
run	modules/linalg/matrix_ops.cpp	/^AnyType bernoulli_vector::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::bernoulli_vector
run	modules/linalg/matrix_ops.cpp	/^AnyType matrix_blockize_sfunc::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::matrix_blockize_sfunc
run	modules/linalg/matrix_ops.cpp	/^AnyType matrix_densify_sfunc::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::matrix_densify_sfunc
run	modules/linalg/matrix_ops.cpp	/^AnyType matrix_mem_mult::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::matrix_mem_mult
run	modules/linalg/matrix_ops.cpp	/^AnyType matrix_mem_sum_sfunc::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::matrix_mem_sum_sfunc
run	modules/linalg/matrix_ops.cpp	/^AnyType matrix_mem_trans::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::matrix_mem_trans
run	modules/linalg/matrix_ops.cpp	/^AnyType matrix_unblockize_sfunc::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::matrix_unblockize_sfunc
run	modules/linalg/matrix_ops.cpp	/^AnyType matrix_vec_mult_in_mem_1d::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::matrix_vec_mult_in_mem_1d
run	modules/linalg/matrix_ops.cpp	/^AnyType matrix_vec_mult_in_mem_2d::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::matrix_vec_mult_in_mem_2d
run	modules/linalg/matrix_ops.cpp	/^AnyType normal_vector::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::normal_vector
run	modules/linalg/matrix_ops.cpp	/^AnyType rand_block::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::rand_block
run	modules/linalg/matrix_ops.cpp	/^AnyType rand_vector::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::rand_vector
run	modules/linalg/matrix_ops.cpp	/^AnyType row_fold::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::row_fold
run	modules/linalg/matrix_ops.cpp	/^AnyType uniform_vector::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::uniform_vector
run	modules/linalg/metric.cpp	/^closest_column::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::closest_column
run	modules/linalg/metric.cpp	/^closest_columns::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::closest_columns
run	modules/linalg/metric.cpp	/^cosine_similarity::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::cosine_similarity
run	modules/linalg/metric.cpp	/^dist_angle::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::dist_angle
run	modules/linalg/metric.cpp	/^dist_inf_norm::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::dist_inf_norm
run	modules/linalg/metric.cpp	/^dist_jaccard::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::dist_jaccard
run	modules/linalg/metric.cpp	/^dist_norm1::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::dist_norm1
run	modules/linalg/metric.cpp	/^dist_norm2::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::dist_norm2
run	modules/linalg/metric.cpp	/^dist_pnorm::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::dist_pnorm
run	modules/linalg/metric.cpp	/^dist_tanimoto::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::dist_tanimoto
run	modules/linalg/metric.cpp	/^norm1::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::norm1
run	modules/linalg/metric.cpp	/^norm2::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::norm2
run	modules/linalg/metric.cpp	/^squared_dist_norm2::run(AnyType& args) {$/;"	f	class:madlib::modules::linalg::squared_dist_norm2
run	modules/linalg/svd.cpp	/^AnyType svd_block_lanczos_sfunc::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_block_lanczos_sfunc
run	modules/linalg/svd.cpp	/^AnyType svd_decompose_bidiag::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_decompose_bidiag
run	modules/linalg/svd.cpp	/^AnyType svd_decompose_bidiagonal_ffunc::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_decompose_bidiagonal_ffunc
run	modules/linalg/svd.cpp	/^AnyType svd_decompose_bidiagonal_prefunc::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_decompose_bidiagonal_prefunc
run	modules/linalg/svd.cpp	/^AnyType svd_decompose_bidiagonal_sfunc::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_decompose_bidiagonal_sfunc
run	modules/linalg/svd.cpp	/^AnyType svd_gram_schmidt_orthogonalize_ffunc::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_gram_schmidt_orthogonalize_ffunc
run	modules/linalg/svd.cpp	/^AnyType svd_gram_schmidt_orthogonalize_prefunc::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_gram_schmidt_orthogonalize_prefunc
run	modules/linalg/svd.cpp	/^AnyType svd_gram_schmidt_orthogonalize_sfunc::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_gram_schmidt_orthogonalize_sfunc
run	modules/linalg/svd.cpp	/^AnyType svd_lanczos_prefunc::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_lanczos_prefunc
run	modules/linalg/svd.cpp	/^AnyType svd_lanczos_pvec::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_lanczos_pvec
run	modules/linalg/svd.cpp	/^AnyType svd_lanczos_qvec::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_lanczos_qvec
run	modules/linalg/svd.cpp	/^AnyType svd_lanczos_sfunc::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_lanczos_sfunc
run	modules/linalg/svd.cpp	/^AnyType svd_sparse_lanczos_sfunc::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_sparse_lanczos_sfunc
run	modules/linalg/svd.cpp	/^AnyType svd_unit_vector::run(AnyType & args)$/;"	f	class:madlib::modules::linalg::svd_unit_vector
run	modules/linalg/svd.cpp	/^AnyType svd_vec_mult_matrix::run(AnyType & args){$/;"	f	class:madlib::modules::linalg::svd_vec_mult_matrix
run	modules/linear_systems/dense_linear_systems.cpp	/^AnyType dense_residual_norm_final::run(AnyType& args)$/;"	f	class:madlib::modules::linear_systems::dense_residual_norm_final
run	modules/linear_systems/dense_linear_systems.cpp	/^AnyType dense_residual_norm_merge_states::run(AnyType& args)$/;"	f	class:madlib::modules::linear_systems::dense_residual_norm_merge_states
run	modules/linear_systems/dense_linear_systems.cpp	/^AnyType dense_residual_norm_transition::run(AnyType& args){$/;"	f	class:madlib::modules::linear_systems::dense_residual_norm_transition
run	modules/linear_systems/dense_linear_systems.cpp	/^dense_direct_linear_system_final::run(AnyType &args) {$/;"	f	class:madlib::modules::linear_systems::dense_direct_linear_system_final
run	modules/linear_systems/dense_linear_systems.cpp	/^dense_direct_linear_system_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::linear_systems::dense_direct_linear_system_merge_states
run	modules/linear_systems/dense_linear_systems.cpp	/^dense_direct_linear_system_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::linear_systems::dense_direct_linear_system_transition
run	modules/linear_systems/sparse_linear_systems.cpp	/^sparse_direct_linear_system_final::run(AnyType &args) {$/;"	f	class:madlib::modules::linear_systems::sparse_direct_linear_system_final
run	modules/linear_systems/sparse_linear_systems.cpp	/^sparse_direct_linear_system_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::linear_systems::sparse_direct_linear_system_merge_states
run	modules/linear_systems/sparse_linear_systems.cpp	/^sparse_direct_linear_system_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::linear_systems::sparse_direct_linear_system_transition
run	modules/linear_systems/sparse_linear_systems.cpp	/^sparse_inmem_iterative_linear_system_final::run(AnyType &args) {$/;"	f	class:madlib::modules::linear_systems::sparse_inmem_iterative_linear_system_final
run	modules/linear_systems/sparse_linear_systems.cpp	/^sparse_inmem_iterative_linear_system_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::linear_systems::sparse_inmem_iterative_linear_system_merge_states
run	modules/linear_systems/sparse_linear_systems.cpp	/^sparse_inmem_iterative_linear_system_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::linear_systems::sparse_inmem_iterative_linear_system_transition
run	modules/prob/kolmogorov.cpp	/^kolmogorov_cdf::run(AnyType &args) {$/;"	f	class:madlib::modules::prob::kolmogorov_cdf
run	modules/prob/student.cpp	/^students_t_cdf::run(AnyType &args) {$/;"	f	class:madlib::modules::prob::students_t_cdf
run	modules/prob/student.cpp	/^students_t_pdf::run(AnyType &args) {$/;"	f	class:madlib::modules::prob::students_t_pdf
run	modules/prob/student.cpp	/^students_t_quantile::run(AnyType &args) {$/;"	f	class:madlib::modules::prob::students_t_quantile
run	modules/recursive_partitioning/decision_tree.cpp	/^AnyType convert_to_rpart_format::run(AnyType &args) {$/;"	f	class:madlib::modules::recursive_partitioning::convert_to_rpart_format
run	modules/recursive_partitioning/decision_tree.cpp	/^compute_leaf_stats_merge::run(AnyType & args){$/;"	f	class:madlib::modules::recursive_partitioning::compute_leaf_stats_merge
run	modules/recursive_partitioning/decision_tree.cpp	/^compute_leaf_stats_transition::run(AnyType & args){$/;"	f	class:madlib::modules::recursive_partitioning::compute_leaf_stats_transition
run	modules/recursive_partitioning/decision_tree.cpp	/^compute_surr_stats_transition::run(AnyType & args){$/;"	f	class:madlib::modules::recursive_partitioning::compute_surr_stats_transition
run	modules/recursive_partitioning/decision_tree.cpp	/^compute_variable_importance::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::compute_variable_importance
run	modules/recursive_partitioning/decision_tree.cpp	/^convert_to_random_forest_format::run(AnyType &args) {$/;"	f	class:madlib::modules::recursive_partitioning::convert_to_random_forest_format
run	modules/recursive_partitioning/decision_tree.cpp	/^display_decision_tree::run(AnyType &args) {$/;"	f	class:madlib::modules::recursive_partitioning::display_decision_tree
run	modules/recursive_partitioning/decision_tree.cpp	/^display_decision_tree_surrogate::run(AnyType &args) {$/;"	f	class:madlib::modules::recursive_partitioning::display_decision_tree_surrogate
run	modules/recursive_partitioning/decision_tree.cpp	/^display_text_tree::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::display_text_tree
run	modules/recursive_partitioning/decision_tree.cpp	/^dt_apply::run(AnyType & args){$/;"	f	class:madlib::modules::recursive_partitioning::dt_apply
run	modules/recursive_partitioning/decision_tree.cpp	/^dt_surr_apply::run(AnyType & args){$/;"	f	class:madlib::modules::recursive_partitioning::dt_surr_apply
run	modules/recursive_partitioning/decision_tree.cpp	/^get_split_thresholds::run(AnyType &args) {$/;"	f	class:madlib::modules::recursive_partitioning::get_split_thresholds
run	modules/recursive_partitioning/decision_tree.cpp	/^initialize_decision_tree::run(AnyType & args){$/;"	f	class:madlib::modules::recursive_partitioning::initialize_decision_tree
run	modules/recursive_partitioning/decision_tree.cpp	/^predict_dt_prob::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::predict_dt_prob
run	modules/recursive_partitioning/decision_tree.cpp	/^predict_dt_response::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::predict_dt_response
run	modules/recursive_partitioning/decision_tree.cpp	/^print_decision_tree::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::print_decision_tree
run	modules/recursive_partitioning/decision_tree.cpp	/^prune_and_cplist::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::prune_and_cplist
run	modules/recursive_partitioning/feature_encoding.cpp	/^dst_compute_con_splits_final::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::dst_compute_con_splits_final
run	modules/recursive_partitioning/feature_encoding.cpp	/^dst_compute_con_splits_transition::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::dst_compute_con_splits_transition
run	modules/recursive_partitioning/feature_encoding.cpp	/^dst_compute_entropy_final::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::dst_compute_entropy_final
run	modules/recursive_partitioning/feature_encoding.cpp	/^dst_compute_entropy_merge::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::dst_compute_entropy_merge
run	modules/recursive_partitioning/feature_encoding.cpp	/^dst_compute_entropy_transition::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::dst_compute_entropy_transition
run	modules/recursive_partitioning/feature_encoding.cpp	/^get_bin_index_by_value::run(AnyType &args) {$/;"	f	class:madlib::modules::recursive_partitioning::get_bin_index_by_value
run	modules/recursive_partitioning/feature_encoding.cpp	/^get_bin_indices_by_values::run(AnyType &args) {$/;"	f	class:madlib::modules::recursive_partitioning::get_bin_indices_by_values
run	modules/recursive_partitioning/feature_encoding.cpp	/^get_bin_value_by_index::run(AnyType &args) {$/;"	f	class:madlib::modules::recursive_partitioning::get_bin_value_by_index
run	modules/recursive_partitioning/feature_encoding.cpp	/^map_catlevel_to_int::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::map_catlevel_to_int
run	modules/recursive_partitioning/feature_encoding.cpp	/^print_con_splits::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::print_con_splits
run	modules/recursive_partitioning/random_forest.cpp	/^normalize_sum_array::run(AnyType &args){$/;"	f	class:madlib::modules::recursive_partitioning::normalize_sum_array
run	modules/recursive_partitioning/random_forest.cpp	/^rf_cat_imp_score::run(AnyType &args) {$/;"	f	class:madlib::modules::recursive_partitioning::rf_cat_imp_score
run	modules/recursive_partitioning/random_forest.cpp	/^rf_con_imp_score::run(AnyType &args) {$/;"	f	class:madlib::modules::recursive_partitioning::rf_con_imp_score
run	modules/regress/clustered_errors.cpp	/^AnyType __clustered_err_lin_final::run (AnyType& args)$/;"	f	class:madlib::modules::regress::__clustered_err_lin_final
run	modules/regress/clustered_errors.cpp	/^AnyType __clustered_err_lin_merge::run (AnyType& args)$/;"	f	class:madlib::modules::regress::__clustered_err_lin_merge
run	modules/regress/clustered_errors.cpp	/^AnyType __clustered_err_lin_transition::run (AnyType& args)$/;"	f	class:madlib::modules::regress::__clustered_err_lin_transition
run	modules/regress/clustered_errors.cpp	/^AnyType __clustered_err_log_final::run (AnyType& args)$/;"	f	class:madlib::modules::regress::__clustered_err_log_final
run	modules/regress/clustered_errors.cpp	/^AnyType __clustered_err_log_merge::run (AnyType& args)$/;"	f	class:madlib::modules::regress::__clustered_err_log_merge
run	modules/regress/clustered_errors.cpp	/^AnyType __clustered_err_log_transition::run (AnyType& args)$/;"	f	class:madlib::modules::regress::__clustered_err_log_transition
run	modules/regress/clustered_errors.cpp	/^AnyType __clustered_err_mlog_final::run (AnyType& args)$/;"	f	class:madlib::modules::regress::__clustered_err_mlog_final
run	modules/regress/clustered_errors.cpp	/^AnyType __clustered_err_mlog_merge::run (AnyType& args)$/;"	f	class:madlib::modules::regress::__clustered_err_mlog_merge
run	modules/regress/clustered_errors.cpp	/^AnyType __clustered_err_mlog_transition::run (AnyType& args)$/;"	f	class:madlib::modules::regress::__clustered_err_mlog_transition
run	modules/regress/clustered_errors.cpp	/^AnyType clustered_lin_compute_stats::run (AnyType& args)$/;"	f	class:madlib::modules::regress::clustered_lin_compute_stats
run	modules/regress/clustered_errors.cpp	/^AnyType clustered_log_compute_stats::run (AnyType& args)$/;"	f	class:madlib::modules::regress::clustered_log_compute_stats
run	modules/regress/clustered_errors.cpp	/^AnyType clustered_mlog_compute_stats::run (AnyType& args)$/;"	f	class:madlib::modules::regress::clustered_mlog_compute_stats
run	modules/regress/linear.cpp	/^hetero_linregr_final::run(AnyType& args) {$/;"	f	class:madlib::modules::regress::hetero_linregr_final
run	modules/regress/linear.cpp	/^hetero_linregr_merge_states::run(AnyType& args) {$/;"	f	class:madlib::modules::regress::hetero_linregr_merge_states
run	modules/regress/linear.cpp	/^hetero_linregr_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::regress::hetero_linregr_transition
run	modules/regress/linear.cpp	/^linregr_final::run(AnyType& args) {$/;"	f	class:madlib::modules::regress::linregr_final
run	modules/regress/linear.cpp	/^linregr_merge_states::run(AnyType& args) {$/;"	f	class:madlib::modules::regress::linregr_merge_states
run	modules/regress/linear.cpp	/^linregr_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::regress::linregr_transition
run	modules/regress/linear.cpp	/^robust_linregr_final::run(AnyType& args) {$/;"	f	class:madlib::modules::regress::robust_linregr_final
run	modules/regress/linear.cpp	/^robust_linregr_merge_states::run(AnyType& args) {$/;"	f	class:madlib::modules::regress::robust_linregr_merge_states
run	modules/regress/linear.cpp	/^robust_linregr_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::regress::robust_linregr_transition
run	modules/regress/logistic.cpp	/^AnyType internal_logregr_irls_result::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::internal_logregr_irls_result
run	modules/regress/logistic.cpp	/^AnyType internal_logregr_irls_step_distance::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::internal_logregr_irls_step_distance
run	modules/regress/logistic.cpp	/^AnyType logregr_irls_step_final::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::logregr_irls_step_final
run	modules/regress/logistic.cpp	/^AnyType logregr_irls_step_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::logregr_irls_step_merge_states
run	modules/regress/logistic.cpp	/^AnyType logregr_irls_step_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::logregr_irls_step_transition
run	modules/regress/logistic.cpp	/^AnyType logregr_predict::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::logregr_predict
run	modules/regress/logistic.cpp	/^AnyType logregr_predict_prob::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::logregr_predict_prob
run	modules/regress/logistic.cpp	/^internal_logregr_cg_result::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::internal_logregr_cg_result
run	modules/regress/logistic.cpp	/^internal_logregr_cg_step_distance::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::internal_logregr_cg_step_distance
run	modules/regress/logistic.cpp	/^internal_logregr_igd_result::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::internal_logregr_igd_result
run	modules/regress/logistic.cpp	/^internal_logregr_igd_step_distance::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::internal_logregr_igd_step_distance
run	modules/regress/logistic.cpp	/^logregr_cg_step_final::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::logregr_cg_step_final
run	modules/regress/logistic.cpp	/^logregr_cg_step_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::logregr_cg_step_merge_states
run	modules/regress/logistic.cpp	/^logregr_cg_step_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::logregr_cg_step_transition
run	modules/regress/logistic.cpp	/^logregr_igd_step_final::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::logregr_igd_step_final
run	modules/regress/logistic.cpp	/^logregr_igd_step_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::logregr_igd_step_merge_states
run	modules/regress/logistic.cpp	/^logregr_igd_step_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::logregr_igd_step_transition
run	modules/regress/logistic.cpp	/^marginal_logregr_step_final::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::marginal_logregr_step_final
run	modules/regress/logistic.cpp	/^marginal_logregr_step_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::marginal_logregr_step_merge_states
run	modules/regress/logistic.cpp	/^marginal_logregr_step_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::marginal_logregr_step_transition
run	modules/regress/logistic.cpp	/^robust_logregr_step_final::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::robust_logregr_step_final
run	modules/regress/logistic.cpp	/^robust_logregr_step_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::robust_logregr_step_merge_states
run	modules/regress/logistic.cpp	/^robust_logregr_step_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::robust_logregr_step_transition
run	modules/regress/marginal.cpp	/^margins_linregr_int_final::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::margins_linregr_int_final
run	modules/regress/marginal.cpp	/^margins_linregr_int_merge::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::margins_linregr_int_merge
run	modules/regress/marginal.cpp	/^margins_linregr_int_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::margins_linregr_int_transition
run	modules/regress/marginal.cpp	/^margins_logregr_int_final::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::margins_logregr_int_final
run	modules/regress/marginal.cpp	/^margins_logregr_int_merge::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::margins_logregr_int_merge
run	modules/regress/marginal.cpp	/^margins_logregr_int_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::margins_logregr_int_transition
run	modules/regress/marginal.cpp	/^margins_mlogregr_int_final::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::margins_mlogregr_int_final
run	modules/regress/marginal.cpp	/^margins_mlogregr_int_merge::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::margins_mlogregr_int_merge
run	modules/regress/marginal.cpp	/^margins_mlogregr_int_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::margins_mlogregr_int_transition
run	modules/regress/mlogr_margins.cpp	/^mlogregr_marginal_step_final::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::mlogregr_marginal_step_final
run	modules/regress/mlogr_margins.cpp	/^mlogregr_marginal_step_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::mlogregr_marginal_step_merge_states
run	modules/regress/mlogr_margins.cpp	/^mlogregr_marginal_step_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::mlogregr_marginal_step_transition
run	modules/regress/multilogistic.cpp	/^AnyType __sub_array::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::__sub_array
run	modules/regress/multilogistic.cpp	/^AnyType mlogregr_predict_prob::run(AnyType &args)$/;"	f	class:madlib::modules::regress::mlogregr_predict_prob
run	modules/regress/multilogistic.cpp	/^AnyType mlogregr_predict_response::run(AnyType &args)$/;"	f	class:madlib::modules::regress::mlogregr_predict_response
run	modules/regress/multilogistic.cpp	/^__internal_mlogregr_irls_result::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::__internal_mlogregr_irls_result
run	modules/regress/multilogistic.cpp	/^__internal_mlogregr_irls_step_distance::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::__internal_mlogregr_irls_step_distance
run	modules/regress/multilogistic.cpp	/^__internal_mlogregr_summary_results::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::__internal_mlogregr_summary_results
run	modules/regress/multilogistic.cpp	/^__mlogregr_irls_step_final::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::__mlogregr_irls_step_final
run	modules/regress/multilogistic.cpp	/^__mlogregr_irls_step_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::__mlogregr_irls_step_merge_states
run	modules/regress/multilogistic.cpp	/^__mlogregr_irls_step_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::__mlogregr_irls_step_transition
run	modules/regress/multilogistic.cpp	/^mlogregr_robust_step_final::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::mlogregr_robust_step_final
run	modules/regress/multilogistic.cpp	/^mlogregr_robust_step_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::mlogregr_robust_step_merge_states
run	modules/regress/multilogistic.cpp	/^mlogregr_robust_step_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::regress::mlogregr_robust_step_transition
run	modules/sample/random_process.cpp	/^gamma_random::run(AnyType &args) {$/;"	f	class:madlib::modules::sample::gamma_random
run	modules/sample/random_process.cpp	/^poisson_random::run(AnyType &args) {$/;"	f	class:madlib::modules::sample::poisson_random
run	modules/sample/weighted_sample.cpp	/^index_weighted_sample::run(AnyType &args) {$/;"	f	class:madlib::modules::sample::index_weighted_sample
run	modules/sample/weighted_sample.cpp	/^weighted_sample_final_int64::run(AnyType &args) {$/;"	f	class:madlib::modules::sample::weighted_sample_final_int64
run	modules/sample/weighted_sample.cpp	/^weighted_sample_final_vector::run(AnyType &args) {$/;"	f	class:madlib::modules::sample::weighted_sample_final_vector
run	modules/sample/weighted_sample.cpp	/^weighted_sample_merge_int64::run(AnyType &args) {$/;"	f	class:madlib::modules::sample::weighted_sample_merge_int64
run	modules/sample/weighted_sample.cpp	/^weighted_sample_merge_vector::run(AnyType &args) {$/;"	f	class:madlib::modules::sample::weighted_sample_merge_vector
run	modules/sample/weighted_sample.cpp	/^weighted_sample_transition_int64::run(AnyType& args) {$/;"	f	class:madlib::modules::sample::weighted_sample_transition_int64
run	modules/sample/weighted_sample.cpp	/^weighted_sample_transition_vector::run(AnyType& args) {$/;"	f	class:madlib::modules::sample::weighted_sample_transition_vector
run	modules/stats/chi_squared_test.cpp	/^chi2_gof_test_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::chi2_gof_test_final
run	modules/stats/chi_squared_test.cpp	/^chi2_gof_test_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::chi2_gof_test_merge_states
run	modules/stats/chi_squared_test.cpp	/^chi2_gof_test_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::chi2_gof_test_transition
run	modules/stats/clustered_variance_coxph.cpp	/^AnyType coxph_a_b_final::run(AnyType& args)$/;"	f	class:madlib::modules::stats::coxph_a_b_final
run	modules/stats/clustered_variance_coxph.cpp	/^AnyType coxph_a_b_merge::run(AnyType& args)$/;"	f	class:madlib::modules::stats::coxph_a_b_merge
run	modules/stats/clustered_variance_coxph.cpp	/^AnyType coxph_a_b_transition::run(AnyType& args)$/;"	f	class:madlib::modules::stats::coxph_a_b_transition
run	modules/stats/clustered_variance_coxph.cpp	/^AnyType coxph_compute_clustered_stats::run(AnyType& args)$/;"	f	class:madlib::modules::stats::coxph_compute_clustered_stats
run	modules/stats/clustered_variance_coxph.cpp	/^AnyType coxph_compute_w::run(AnyType& args)$/;"	f	class:madlib::modules::stats::coxph_compute_w
run	modules/stats/correlation.cpp	/^correlation_final::run(AnyType& args) {$/;"	f	class:madlib::modules::stats::correlation_final
run	modules/stats/correlation.cpp	/^correlation_merge_states::run(AnyType& args) {$/;"	f	class:madlib::modules::stats::correlation_merge_states
run	modules/stats/correlation.cpp	/^correlation_transition::run(AnyType& args) {$/;"	f	class:madlib::modules::stats::correlation_transition
run	modules/stats/cox_prop_hazards.cpp	/^AnyType array_elem_corr_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::array_elem_corr_final
run	modules/stats/cox_prop_hazards.cpp	/^AnyType array_elem_corr_merge::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::array_elem_corr_merge
run	modules/stats/cox_prop_hazards.cpp	/^AnyType array_elem_corr_transition::run(AnyType &args){$/;"	f	class:madlib::modules::stats::array_elem_corr_transition
run	modules/stats/cox_prop_hazards.cpp	/^AnyType coxph_predict_resp::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::coxph_predict_resp
run	modules/stats/cox_prop_hazards.cpp	/^AnyType coxph_predict_terms::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::coxph_predict_terms
run	modules/stats/cox_prop_hazards.cpp	/^AnyType coxph_resid_stat_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::coxph_resid_stat_final
run	modules/stats/cox_prop_hazards.cpp	/^AnyType coxph_resid_stat_merge::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::coxph_resid_stat_merge
run	modules/stats/cox_prop_hazards.cpp	/^AnyType coxph_resid_stat_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::coxph_resid_stat_transition
run	modules/stats/cox_prop_hazards.cpp	/^AnyType coxph_scale_resid::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::coxph_scale_resid
run	modules/stats/cox_prop_hazards.cpp	/^AnyType coxph_step_inner_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::coxph_step_inner_final
run	modules/stats/cox_prop_hazards.cpp	/^AnyType coxph_step_outer_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::coxph_step_outer_transition
run	modules/stats/cox_prop_hazards.cpp	/^AnyType zph_final::run(AnyType &args){$/;"	f	class:madlib::modules::stats::zph_final
run	modules/stats/cox_prop_hazards.cpp	/^AnyType zph_merge::run(AnyType &\/* args *\/){$/;"	f	class:madlib::modules::stats::zph_merge
run	modules/stats/cox_prop_hazards.cpp	/^AnyType zph_transition::run(AnyType &args){$/;"	f	class:madlib::modules::stats::zph_transition
run	modules/stats/coxph_improved.cpp	/^AnyType array_avg_final::run(AnyType& args)$/;"	f	class:madlib::modules::stats::array_avg_final
run	modules/stats/coxph_improved.cpp	/^AnyType array_avg_merge::run(AnyType& args)$/;"	f	class:madlib::modules::stats::array_avg_merge
run	modules/stats/coxph_improved.cpp	/^AnyType array_avg_transition::run(AnyType& args)$/;"	f	class:madlib::modules::stats::array_avg_transition
run	modules/stats/coxph_improved.cpp	/^AnyType array_element_max::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::array_element_max
run	modules/stats/coxph_improved.cpp	/^AnyType array_element_min::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::array_element_min
run	modules/stats/coxph_improved.cpp	/^AnyType compute_coxph_result::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::compute_coxph_result
run	modules/stats/coxph_improved.cpp	/^AnyType compute_grpid::run(AnyType &args)$/;"	f	class:madlib::modules::stats::compute_grpid
run	modules/stats/coxph_improved.cpp	/^AnyType coxph_improved_step_final::run(AnyType& args)$/;"	f	class:madlib::modules::stats::coxph_improved_step_final
run	modules/stats/coxph_improved.cpp	/^AnyType coxph_improved_step_transition::run(AnyType& args)$/;"	f	class:madlib::modules::stats::coxph_improved_step_transition
run	modules/stats/coxph_improved.cpp	/^AnyType coxph_improved_strata_step_final::run(AnyType& args)$/;"	f	class:madlib::modules::stats::coxph_improved_strata_step_final
run	modules/stats/coxph_improved.cpp	/^AnyType split_final::run(AnyType &args)$/;"	f	class:madlib::modules::stats::split_final
run	modules/stats/coxph_improved.cpp	/^AnyType split_merge::run(AnyType &args)$/;"	f	class:madlib::modules::stats::split_merge
run	modules/stats/coxph_improved.cpp	/^AnyType split_transition::run(AnyType &args)$/;"	f	class:madlib::modules::stats::split_transition
run	modules/stats/distribution.cpp	/^discrete_distribution_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::discrete_distribution_final
run	modules/stats/distribution.cpp	/^discrete_distribution_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::discrete_distribution_transition
run	modules/stats/distribution.cpp	/^vectorized_distribution_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::vectorized_distribution_final
run	modules/stats/distribution.cpp	/^vectorized_distribution_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::vectorized_distribution_transition
run	modules/stats/kolmogorov_smirnov_test.cpp	/^ks_test_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::ks_test_final
run	modules/stats/kolmogorov_smirnov_test.cpp	/^ks_test_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::ks_test_transition
run	modules/stats/mann_whitney_test.cpp	/^mw_test_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::mw_test_final
run	modules/stats/mann_whitney_test.cpp	/^mw_test_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::mw_test_transition
run	modules/stats/marginal_cox.cpp	/^margins_compute_stats::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::margins_compute_stats
run	modules/stats/marginal_cox.cpp	/^margins_coxph_int_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::margins_coxph_int_final
run	modules/stats/marginal_cox.cpp	/^margins_coxph_int_merge::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::margins_coxph_int_merge
run	modules/stats/marginal_cox.cpp	/^margins_coxph_int_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::margins_coxph_int_transition
run	modules/stats/one_way_anova.cpp	/^one_way_anova_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::one_way_anova_final
run	modules/stats/one_way_anova.cpp	/^one_way_anova_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::one_way_anova_merge_states
run	modules/stats/one_way_anova.cpp	/^one_way_anova_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::one_way_anova_transition
run	modules/stats/robust_variance_coxph.cpp	/^AnyType coxph_h_s_final::run(AnyType& args)$/;"	f	class:madlib::modules::stats::coxph_h_s_final
run	modules/stats/robust_variance_coxph.cpp	/^AnyType coxph_h_s_merge::run(AnyType &\/* args *\/)$/;"	f	class:madlib::modules::stats::coxph_h_s_merge
run	modules/stats/robust_variance_coxph.cpp	/^AnyType coxph_h_s_transition::run(AnyType& args)$/;"	f	class:madlib::modules::stats::coxph_h_s_transition
run	modules/stats/robust_variance_coxph.cpp	/^AnyType rb_coxph_step_final::run(AnyType& args)$/;"	f	class:madlib::modules::stats::rb_coxph_step_final
run	modules/stats/robust_variance_coxph.cpp	/^AnyType rb_coxph_step_transition::run(AnyType& args)$/;"	f	class:madlib::modules::stats::rb_coxph_step_transition
run	modules/stats/robust_variance_coxph.cpp	/^AnyType rb_coxph_strata_step_final::run(AnyType& args)$/;"	f	class:madlib::modules::stats::rb_coxph_strata_step_final
run	modules/stats/robust_variance_coxph.cpp	/^AnyType rb_sum_strata_final::run(AnyType& args)$/;"	f	class:madlib::modules::stats::rb_sum_strata_final
run	modules/stats/robust_variance_coxph.cpp	/^AnyType rb_sum_strata_transition::run(AnyType& args)$/;"	f	class:madlib::modules::stats::rb_sum_strata_transition
run	modules/stats/t_test.cpp	/^f_test_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::f_test_final
run	modules/stats/t_test.cpp	/^t_test_merge_states::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::t_test_merge_states
run	modules/stats/t_test.cpp	/^t_test_one_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::t_test_one_final
run	modules/stats/t_test.cpp	/^t_test_one_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::t_test_one_transition
run	modules/stats/t_test.cpp	/^t_test_two_pooled_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::t_test_two_pooled_final
run	modules/stats/t_test.cpp	/^t_test_two_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::t_test_two_transition
run	modules/stats/t_test.cpp	/^t_test_two_unpooled_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::t_test_two_unpooled_final
run	modules/stats/wilcoxon_signed_rank_test.cpp	/^wsr_test_final::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::wsr_test_final
run	modules/stats/wilcoxon_signed_rank_test.cpp	/^wsr_test_transition::run(AnyType &args) {$/;"	f	class:madlib::modules::stats::wsr_test_transition
run	modules/tsa/arima.cpp	/^AnyType arima_adjust::run (AnyType & args)$/;"	f	class:madlib::modules::tsa::arima_adjust
run	modules/tsa/arima.cpp	/^AnyType arima_diff::run (AnyType & args)$/;"	f	class:madlib::modules::tsa::arima_diff
run	modules/tsa/arima.cpp	/^AnyType arima_lm::run (AnyType & args)$/;"	f	class:madlib::modules::tsa::arima_lm
run	modules/tsa/arima.cpp	/^AnyType arima_lm_delta::run (AnyType & args)$/;"	f	class:madlib::modules::tsa::arima_lm_delta
run	modules/tsa/arima.cpp	/^AnyType arima_lm_result_ffunc::run (AnyType& args)$/;"	f	class:madlib::modules::tsa::arima_lm_result_ffunc
run	modules/tsa/arima.cpp	/^AnyType arima_lm_result_pfunc::run (AnyType& args)$/;"	f	class:madlib::modules::tsa::arima_lm_result_pfunc
run	modules/tsa/arima.cpp	/^AnyType arima_lm_result_sfunc::run (AnyType& args)$/;"	f	class:madlib::modules::tsa::arima_lm_result_sfunc
run	modules/tsa/arima.cpp	/^AnyType arima_lm_stat_ffunc::run (AnyType& args)$/;"	f	class:madlib::modules::tsa::arima_lm_stat_ffunc
run	modules/tsa/arima.cpp	/^AnyType arima_lm_stat_sfunc::run (AnyType& args)$/;"	f	class:madlib::modules::tsa::arima_lm_stat_sfunc
run	modules/tsa/arima.cpp	/^AnyType arima_residual::run (AnyType & args)$/;"	f	class:madlib::modules::tsa::arima_residual
run	modules/utilities/path.cpp	/^AnyType path_pattern_match::run(AnyType & args)$/;"	f	class:madlib::modules::utilities::path_pattern_match
run_install_check	madpack/madpack.py	/^def run_install_check(args, testcase, madpack_cmd):$/;"	f
run_query	madpack/madpack.py	/^from utilities import run_query$/;"	i
run_query	madpack/upgrade_util.py	/^from utilities import run_query$/;"	i
run_query	madpack/utilities.py	/^def run_query(sql, con_args, show_error=True):$/;"	f
run_sql	madpack/upgrade_util.py	/^    def run_sql(sql, portid, con_args):$/;"	f
run_unit_tests	madpack/madpack.py	/^def run_unit_tests(args, testcase):$/;"	f
russian_KOI8_R_close_env	libstemmer/src_c/stem_KOI8_R_russian.c	/^extern void russian_KOI8_R_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
russian_KOI8_R_create_env	libstemmer/src_c/stem_KOI8_R_russian.c	/^extern struct SN_env * russian_KOI8_R_create_env(void) { return SN_create_env(0, 2, 0); }$/;"	f
russian_KOI8_R_stem	libstemmer/src_c/stem_KOI8_R_russian.c	/^extern int russian_KOI8_R_stem(struct SN_env * z) {$/;"	f
russian_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_russian.c	/^extern void russian_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
russian_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_russian.c	/^extern struct SN_env * russian_UTF_8_create_env(void) { return SN_create_env(0, 2, 0); }$/;"	f
russian_UTF_8_stem	libstemmer/src_c/stem_UTF_8_russian.c	/^extern int russian_UTF_8_stem(struct SN_env * z) {$/;"	f
s	libstemmer/runtime/header.h	/^    const symbol * s;       \/* search string *\/$/;"	m	struct:among
sLazyConversionToDatum	ports/postgres/dbconnector/AnyType_proto.hpp	/^    static bool sLazyConversionToDatum;$/;"	m	class:madlib::dbconnector::postgres::AnyType
sLazyConversionToDatum	ports/postgres/dbconnector/main.cpp	/^bool AnyType::sLazyConversionToDatum = false;$/;"	m	class:madlib::dbconnector::postgres::AnyType	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0[] = { 's', 't' };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_0[] = { '\\'' };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_0[] = { 'k' };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_0[] = { 'u' };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_0[] = { 0xDF };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_0[] = { 0xE0 };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0[] = { 'k' };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_0[] = { 's', 's' };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_0[] = { 'a', '~' };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0[] = { 'l', 0xF6, 's' };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_0[] = { 'u' };$/;"	v	file:
s_0	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_0[] = { 0xC1 };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0[] = { 's', 't' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_0[] = { '\\'' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_0[] = { 'k' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_0[] = { 'u' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_0[] = { 0xC3, 0x9F };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_0[] = { 0xC3, 0xA0 };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0[] = { 'k' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_0[] = { 's', 's' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_0[] = { 'a', '~' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_0[] = { 'u' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_0[] = { 0xD0, 0xB0 };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0[] = { 'l', 0xC3, 0xB6, 's' };$/;"	v	file:
s_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_0[3] = { 'h', 'e', 'd' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_0_0[5] = { 'a', 'r', 's', 'e', 'n' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_0_0[2] = { 'p', 'a' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_0_0[3] = { 'c', 'o', 'l' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_0[1] = { 'a' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_0_0[1] = { 's' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_0[1] = { 'a' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_0_0[2] = { 'c', 's' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_0_0[3] = { 0xD7, 0xDB, 0xC9 };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_0[3] = { 'h', 'e', 'd' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_0_0[5] = { 'a', 'r', 's', 'e', 'n' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_0_0[2] = { 'p', 'a' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_0_0[3] = { 'c', 'o', 'l' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_0_0[2] = { 'c', 's' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_0[1] = { 'a' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_0_0[1] = { 's' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_0_0[10] = { 0xD0, 0xB2, 0xD1, 0x88, 0xD0, 0xB8, 0xD1, 0x81, 0xD1, 0x8C };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_0[1] = { 'a' };$/;"	v	file:
s_0_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_0_0[1] = { 'm' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_1[5] = { 'e', 't', 'h', 'e', 'd' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_0_1[1] = { 0xE1 };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_0_1[6] = { 'c', 'o', 'm', 'm', 'u', 'n' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_0_1[3] = { 's', 't', 'i' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_0_1[3] = { 'p', 'a', 'r' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_0_1[1] = { 'U' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_0_1[2] = { 'q', 'u' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_1[1] = { 'e' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_0_1[3] = { 'i', 'e', 's' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_0_1[1] = { 0xE3 };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_0_1[1] = { 0xE1 };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_1[4] = { 'a', 'r', 'n', 'a' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_0_1[3] = { 'd', 'z', 's' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_0_1[1] = { 'I' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_0_1[4] = { 0xC9, 0xD7, 0xDB, 0xC9 };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_1[5] = { 'e', 't', 'h', 'e', 'd' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_0_1[2] = { 0xC3, 0xA1 };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_0_1[6] = { 'c', 'o', 'm', 'm', 'u', 'n' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_0_1[3] = { 's', 't', 'i' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_0_1[3] = { 'p', 'a', 'r' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_0_1[1] = { 'U' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_0_1[3] = { 'd', 'z', 's' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_0_1[2] = { 'q', 'u' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_1[1] = { 'e' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_0_1[3] = { 'i', 'e', 's' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_0_1[2] = { 0xC3, 0xA3 };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_0_1[1] = { 'I' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_0_1[12] = { 0xD1, 0x8B, 0xD0, 0xB2, 0xD1, 0x88, 0xD0, 0xB8, 0xD1, 0x81, 0xD1, 0x8C };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_0_1[2] = { 0xC3, 0xA1 };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_1[4] = { 'a', 'r', 'n', 'a' };$/;"	v	file:
s_0_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_0_1[1] = { 'n' };$/;"	v	file:
s_0_10	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_10[2] = { 'e', 'n' };$/;"	v	file:
s_0_10	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_0_10[1] = { 0xFC };$/;"	v	file:
s_0_10	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_10[5] = { 'h', 'e', 't', 'e', 'n' };$/;"	v	file:
s_0_10	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_10[3] = { 'a', 'r', 'e' };$/;"	v	file:
s_0_10	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_10[2] = { 'e', 'n' };$/;"	v	file:
s_0_10	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_0_10[2] = { 0xC3, 0xBC };$/;"	v	file:
s_0_10	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_10[5] = { 'h', 'e', 't', 'e', 'n' };$/;"	v	file:
s_0_10	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_10[3] = { 'a', 'r', 'e' };$/;"	v	file:
s_0_11	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_11[5] = { 'h', 'e', 'd', 'e', 'n' };$/;"	v	file:
s_0_11	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_11[2] = { 'a', 'r' };$/;"	v	file:
s_0_11	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_11[4] = { 'a', 's', 't', 'e' };$/;"	v	file:
s_0_11	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_11[5] = { 'h', 'e', 'd', 'e', 'n' };$/;"	v	file:
s_0_11	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_11[2] = { 'a', 'r' };$/;"	v	file:
s_0_11	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_11[4] = { 'a', 's', 't', 'e' };$/;"	v	file:
s_0_12	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_12[4] = { 'e', 'r', 'e', 'n' };$/;"	v	file:
s_0_12	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_12[2] = { 'e', 'r' };$/;"	v	file:
s_0_12	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_12[2] = { 'e', 'n' };$/;"	v	file:
s_0_12	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_12[4] = { 'e', 'r', 'e', 'n' };$/;"	v	file:
s_0_12	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_12[2] = { 'e', 'r' };$/;"	v	file:
s_0_12	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_12[2] = { 'e', 'n' };$/;"	v	file:
s_0_13	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_13[2] = { 'e', 'r' };$/;"	v	file:
s_0_13	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_13[5] = { 'h', 'e', 't', 'e', 'r' };$/;"	v	file:
s_0_13	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_13[5] = { 'a', 'n', 'd', 'e', 'n' };$/;"	v	file:
s_0_13	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_13[2] = { 'e', 'r' };$/;"	v	file:
s_0_13	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_13[5] = { 'h', 'e', 't', 'e', 'r' };$/;"	v	file:
s_0_13	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_13[5] = { 'a', 'n', 'd', 'e', 'n' };$/;"	v	file:
s_0_14	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_14[5] = { 'h', 'e', 'd', 'e', 'r' };$/;"	v	file:
s_0_14	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_14[1] = { 's' };$/;"	v	file:
s_0_14	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_14[4] = { 'a', 'r', 'e', 'n' };$/;"	v	file:
s_0_14	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_14[5] = { 'h', 'e', 'd', 'e', 'r' };$/;"	v	file:
s_0_14	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_14[1] = { 's' };$/;"	v	file:
s_0_14	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_14[4] = { 'a', 'r', 'e', 'n' };$/;"	v	file:
s_0_15	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_15[4] = { 'e', 'r', 'e', 'r' };$/;"	v	file:
s_0_15	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_15[2] = { 'a', 's' };$/;"	v	file:
s_0_15	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_15[5] = { 'h', 'e', 't', 'e', 'n' };$/;"	v	file:
s_0_15	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_15[4] = { 'e', 'r', 'e', 'r' };$/;"	v	file:
s_0_15	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_15[2] = { 'a', 's' };$/;"	v	file:
s_0_15	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_15[5] = { 'h', 'e', 't', 'e', 'n' };$/;"	v	file:
s_0_16	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_16[1] = { 's' };$/;"	v	file:
s_0_16	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_16[2] = { 'e', 's' };$/;"	v	file:
s_0_16	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_16[3] = { 'e', 'r', 'n' };$/;"	v	file:
s_0_16	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_16[1] = { 's' };$/;"	v	file:
s_0_16	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_16[2] = { 'e', 's' };$/;"	v	file:
s_0_16	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_16[3] = { 'e', 'r', 'n' };$/;"	v	file:
s_0_17	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_17[4] = { 'h', 'e', 'd', 's' };$/;"	v	file:
s_0_17	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_17[4] = { 'e', 'd', 'e', 's' };$/;"	v	file:
s_0_17	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_17[2] = { 'a', 'r' };$/;"	v	file:
s_0_17	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_17[4] = { 'h', 'e', 'd', 's' };$/;"	v	file:
s_0_17	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_17[4] = { 'e', 'd', 'e', 's' };$/;"	v	file:
s_0_17	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_17[2] = { 'a', 'r' };$/;"	v	file:
s_0_18	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_18[2] = { 'e', 's' };$/;"	v	file:
s_0_18	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_18[5] = { 'e', 'n', 'd', 'e', 's' };$/;"	v	file:
s_0_18	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_18[2] = { 'e', 'r' };$/;"	v	file:
s_0_18	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_18[2] = { 'e', 's' };$/;"	v	file:
s_0_18	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_18[5] = { 'e', 'n', 'd', 'e', 's' };$/;"	v	file:
s_0_18	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_18[2] = { 'e', 'r' };$/;"	v	file:
s_0_19	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_19[5] = { 'e', 'n', 'd', 'e', 's' };$/;"	v	file:
s_0_19	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_19[4] = { 'e', 'n', 'e', 's' };$/;"	v	file:
s_0_19	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_19[5] = { 'h', 'e', 't', 'e', 'r' };$/;"	v	file:
s_0_19	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_19[5] = { 'e', 'n', 'd', 'e', 's' };$/;"	v	file:
s_0_19	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_19[4] = { 'e', 'n', 'e', 's' };$/;"	v	file:
s_0_19	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_19[5] = { 'h', 'e', 't', 'e', 'r' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_2[4] = { 'e', 'r', 'e', 'd' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_0_2[1] = { 0xE4 };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_0_2[5] = { 'g', 'e', 'n', 'e', 'r' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_0_2[4] = { 'k', 'a', 'a', 'n' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_0_2[3] = { 't', 'a', 'p' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_0_2[1] = { 'Y' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_0_2[1] = { 0xE1 };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_2[3] = { 'e', 'd', 'e' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_0_2[4] = { 's', 's', 'e', 's' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_0_2[1] = { 0xF5 };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_0_2[1] = { 0xE9 };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_2[4] = { 'e', 'r', 'n', 'a' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_0_2[2] = { 'g', 'y' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_0_2[1] = { 'U' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_0_2[4] = { 0xD9, 0xD7, 0xDB, 0xC9 };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_2[4] = { 'e', 'r', 'e', 'd' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_0_2[2] = { 0xC3, 0xA4 };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_0_2[5] = { 'g', 'e', 'n', 'e', 'r' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_0_2[4] = { 'k', 'a', 'a', 'n' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_0_2[3] = { 't', 'a', 'p' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_0_2[1] = { 'Y' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_0_2[2] = { 'g', 'y' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_0_2[2] = { 0xC3, 0xA1 };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_2[3] = { 'e', 'd', 'e' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_0_2[4] = { 's', 's', 'e', 's' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_0_2[2] = { 0xC3, 0xB5 };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_0_2[1] = { 'U' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_0_2[12] = { 0xD0, 0xB8, 0xD0, 0xB2, 0xD1, 0x88, 0xD0, 0xB8, 0xD1, 0x81, 0xD1, 0x8C };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_0_2[2] = { 0xC3, 0xA9 };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_2[4] = { 'e', 'r', 'n', 'a' };$/;"	v	file:
s_0_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_0_2[3] = { 'm', 'i', 'z' };$/;"	v	file:
s_0_20	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_20[7] = { 'e', 'r', 'e', 'n', 'd', 'e', 's' };$/;"	v	file:
s_0_20	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_20[7] = { 'h', 'e', 't', 'e', 'n', 'e', 's' };$/;"	v	file:
s_0_20	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_20[2] = { 'o', 'r' };$/;"	v	file:
s_0_20	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_20[7] = { 'e', 'r', 'e', 'n', 'd', 'e', 's' };$/;"	v	file:
s_0_20	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_20[7] = { 'h', 'e', 't', 'e', 'n', 'e', 's' };$/;"	v	file:
s_0_20	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_20[2] = { 'o', 'r' };$/;"	v	file:
s_0_21	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_21[4] = { 'e', 'n', 'e', 's' };$/;"	v	file:
s_0_21	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_21[3] = { 'e', 'n', 's' };$/;"	v	file:
s_0_21	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_21[1] = { 's' };$/;"	v	file:
s_0_21	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_21[4] = { 'e', 'n', 'e', 's' };$/;"	v	file:
s_0_21	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_21[3] = { 'e', 'n', 's' };$/;"	v	file:
s_0_21	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_21[1] = { 's' };$/;"	v	file:
s_0_22	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_22[5] = { 'e', 'r', 'n', 'e', 's' };$/;"	v	file:
s_0_22	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_22[6] = { 'h', 'e', 't', 'e', 'n', 's' };$/;"	v	file:
s_0_22	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_22[2] = { 'a', 's' };$/;"	v	file:
s_0_22	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_22[5] = { 'e', 'r', 'n', 'e', 's' };$/;"	v	file:
s_0_22	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_22[6] = { 'h', 'e', 't', 'e', 'n', 's' };$/;"	v	file:
s_0_22	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_22[2] = { 'a', 's' };$/;"	v	file:
s_0_23	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_23[4] = { 'e', 'r', 'e', 's' };$/;"	v	file:
s_0_23	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_23[3] = { 'e', 'r', 's' };$/;"	v	file:
s_0_23	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_23[5] = { 'a', 'r', 'n', 'a', 's' };$/;"	v	file:
s_0_23	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_23[4] = { 'e', 'r', 'e', 's' };$/;"	v	file:
s_0_23	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_23[3] = { 'e', 'r', 's' };$/;"	v	file:
s_0_23	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_23[5] = { 'a', 'r', 'n', 'a', 's' };$/;"	v	file:
s_0_24	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_24[3] = { 'e', 'n', 's' };$/;"	v	file:
s_0_24	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_24[3] = { 'e', 't', 's' };$/;"	v	file:
s_0_24	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_24[5] = { 'e', 'r', 'n', 'a', 's' };$/;"	v	file:
s_0_24	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_24[3] = { 'e', 'n', 's' };$/;"	v	file:
s_0_24	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_24[3] = { 'e', 't', 's' };$/;"	v	file:
s_0_24	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_24[5] = { 'e', 'r', 'n', 'a', 's' };$/;"	v	file:
s_0_25	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_25[6] = { 'h', 'e', 'd', 'e', 'n', 's' };$/;"	v	file:
s_0_25	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_25[2] = { 'e', 't' };$/;"	v	file:
s_0_25	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_25[5] = { 'o', 'r', 'n', 'a', 's' };$/;"	v	file:
s_0_25	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_25[6] = { 'h', 'e', 'd', 'e', 'n', 's' };$/;"	v	file:
s_0_25	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_25[2] = { 'e', 't' };$/;"	v	file:
s_0_25	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_25[5] = { 'o', 'r', 'n', 'a', 's' };$/;"	v	file:
s_0_26	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_26[5] = { 'e', 'r', 'e', 'n', 's' };$/;"	v	file:
s_0_26	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_26[3] = { 'h', 'e', 't' };$/;"	v	file:
s_0_26	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_26[2] = { 'e', 's' };$/;"	v	file:
s_0_26	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_26[5] = { 'e', 'r', 'e', 'n', 's' };$/;"	v	file:
s_0_26	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_26[3] = { 'h', 'e', 't' };$/;"	v	file:
s_0_26	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_26[2] = { 'e', 's' };$/;"	v	file:
s_0_27	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_27[3] = { 'e', 'r', 's' };$/;"	v	file:
s_0_27	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_27[3] = { 'e', 'r', 't' };$/;"	v	file:
s_0_27	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_27[4] = { 'a', 'd', 'e', 's' };$/;"	v	file:
s_0_27	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_27[3] = { 'e', 'r', 's' };$/;"	v	file:
s_0_27	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_27[3] = { 'e', 'r', 't' };$/;"	v	file:
s_0_27	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_27[4] = { 'a', 'd', 'e', 's' };$/;"	v	file:
s_0_28	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_28[3] = { 'e', 't', 's' };$/;"	v	file:
s_0_28	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_28[3] = { 'a', 's', 't' };$/;"	v	file:
s_0_28	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_28[5] = { 'a', 'n', 'd', 'e', 's' };$/;"	v	file:
s_0_28	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_28[3] = { 'e', 't', 's' };$/;"	v	file:
s_0_28	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_28[3] = { 'a', 's', 't' };$/;"	v	file:
s_0_28	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_28[5] = { 'a', 'n', 'd', 'e', 's' };$/;"	v	file:
s_0_29	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_29[5] = { 'e', 'r', 'e', 't', 's' };$/;"	v	file:
s_0_29	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_29[3] = { 'e', 'n', 's' };$/;"	v	file:
s_0_29	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_29[5] = { 'e', 'r', 'e', 't', 's' };$/;"	v	file:
s_0_29	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_29[3] = { 'e', 'n', 's' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_3[1] = { 'e' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_0_3[1] = { 0xE9 };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_0_3[3] = { 'h', 'a', 'n' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_0_3[1] = { 0xE4 };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_0_3[1] = { 0xE9 };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_3[4] = { 'a', 'n', 'd', 'e' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_0_3[2] = { 's', 's' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_0_3[1] = { 0xED };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_3[7] = { 'h', 'e', 't', 'e', 'r', 'n', 'a' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_0_3[2] = { 'l', 'y' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_0_3[1] = { 0xD7 };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_3[1] = { 'e' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_0_3[2] = { 0xC3, 0xA9 };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_0_3[3] = { 'h', 'a', 'n' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_0_3[2] = { 0xC3, 0xA4 };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_0_3[2] = { 'l', 'y' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_0_3[2] = { 0xC3, 0xA9 };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_3[4] = { 'a', 'n', 'd', 'e' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_0_3[2] = { 's', 's' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_0_3[2] = { 0xD0, 0xB2 };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_0_3[2] = { 0xC3, 0xAD };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_3[7] = { 'h', 'e', 't', 'e', 'r', 'n', 'a' };$/;"	v	file:
s_0_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_0_3[3] = { 'n', 'i', 'z' };$/;"	v	file:
s_0_30	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_30[2] = { 'e', 't' };$/;"	v	file:
s_0_30	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_30[5] = { 'a', 'r', 'e', 'n', 's' };$/;"	v	file:
s_0_30	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_30[2] = { 'e', 't' };$/;"	v	file:
s_0_30	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_30[5] = { 'a', 'r', 'e', 'n', 's' };$/;"	v	file:
s_0_31	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_31[4] = { 'e', 'r', 'e', 't' };$/;"	v	file:
s_0_31	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_31[6] = { 'h', 'e', 't', 'e', 'n', 's' };$/;"	v	file:
s_0_31	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_31[4] = { 'e', 'r', 'e', 't' };$/;"	v	file:
s_0_31	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_31[6] = { 'h', 'e', 't', 'e', 'n', 's' };$/;"	v	file:
s_0_32	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_32[4] = { 'e', 'r', 'n', 's' };$/;"	v	file:
s_0_32	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_32[4] = { 'e', 'r', 'n', 's' };$/;"	v	file:
s_0_33	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_33[2] = { 'a', 't' };$/;"	v	file:
s_0_33	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_33[2] = { 'a', 't' };$/;"	v	file:
s_0_34	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_34[5] = { 'a', 'n', 'd', 'e', 't' };$/;"	v	file:
s_0_34	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_34[5] = { 'a', 'n', 'd', 'e', 't' };$/;"	v	file:
s_0_35	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_35[3] = { 'h', 'e', 't' };$/;"	v	file:
s_0_35	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_35[3] = { 'h', 'e', 't' };$/;"	v	file:
s_0_36	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_36[3] = { 'a', 's', 't' };$/;"	v	file:
s_0_36	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_36[3] = { 'a', 's', 't' };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_4[5] = { 'e', 'r', 'e', 'd', 'e' };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_0_4[1] = { 0xEB };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_0_4[3] = { 'k', 'i', 'n' };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_0_4[1] = { 0xF6 };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_0_4[1] = { 0xED };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_4[4] = { 'e', 'n', 'd', 'e' };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_0_4[1] = { 0xF3 };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_4[4] = { 'o', 'r', 'n', 'a' };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_0_4[2] = { 'n', 'y' };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_0_4[2] = { 0xC9, 0xD7 };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_4[5] = { 'e', 'r', 'e', 'd', 'e' };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_0_4[2] = { 0xC3, 0xAB };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_0_4[3] = { 'k', 'i', 'n' };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_0_4[2] = { 0xC3, 0xB6 };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_0_4[2] = { 'n', 'y' };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_0_4[2] = { 0xC3, 0xAD };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_4[4] = { 'e', 'n', 'd', 'e' };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_0_4[4] = { 0xD1, 0x8B, 0xD0, 0xB2 };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_0_4[2] = { 0xC3, 0xB3 };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_4[4] = { 'o', 'r', 'n', 'a' };$/;"	v	file:
s_0_4	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_0_4[3] = { 'm', 'u', 'z' };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_5[4] = { 'e', 'n', 'd', 'e' };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_0_5[1] = { 0xED };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_0_5[3] = { 'h', 0xE4, 'n' };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_0_5[1] = { 0xFC };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_0_5[1] = { 0xF3 };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_5[3] = { 'a', 'n', 'e' };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_0_5[1] = { 0xFA };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_5[2] = { 'a', 'd' };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_0_5[2] = { 's', 'z' };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_0_5[2] = { 0xD9, 0xD7 };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_5[4] = { 'e', 'n', 'd', 'e' };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_0_5[2] = { 0xC3, 0xAD };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_0_5[4] = { 'h', 0xC3, 0xA4, 'n' };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_0_5[2] = { 0xC3, 0xBC };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_0_5[2] = { 's', 'z' };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_0_5[2] = { 0xC3, 0xB3 };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_5[3] = { 'a', 'n', 'e' };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_0_5[4] = { 0xD0, 0xB8, 0xD0, 0xB2 };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_0_5[2] = { 0xC3, 0xBA };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_5[2] = { 'a', 'd' };$/;"	v	file:
s_0_5	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_0_5[3] = { 'n', 'u', 'z' };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_6[6] = { 'e', 'r', 'e', 'n', 'd', 'e' };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_0_6[1] = { 0xEF };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_0_6[4] = { 'k', 0xE4, 0xE4, 'n' };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_0_6[1] = { 0xFA };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_6[3] = { 'e', 'n', 'e' };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_6[1] = { 'e' };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_0_6[2] = { 't', 'y' };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_0_6[5] = { 0xD7, 0xDB, 0xC9, 0xD3, 0xD8 };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_6[6] = { 'e', 'r', 'e', 'n', 'd', 'e' };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_0_6[2] = { 0xC3, 0xAF };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_0_6[6] = { 'k', 0xC3, 0xA4, 0xC3, 0xA4, 'n' };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_0_6[2] = { 't', 'y' };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_0_6[2] = { 0xC3, 0xBA };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_6[3] = { 'e', 'n', 'e' };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_0_6[6] = { 0xD0, 0xB2, 0xD1, 0x88, 0xD0, 0xB8 };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_6[1] = { 'e' };$/;"	v	file:
s_0_6	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_0_6[4] = { 'm', 0xC4, 0xB1, 'z' };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_7[3] = { 'e', 'n', 'e' };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_0_7[1] = { 0xF3 };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_0_7[2] = { 'k', 'o' };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_7[6] = { 'h', 'e', 't', 'e', 'n', 'e' };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_7[3] = { 'a', 'd', 'e' };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_0_7[2] = { 'z', 's' };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_0_7[6] = { 0xC9, 0xD7, 0xDB, 0xC9, 0xD3, 0xD8 };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_7[3] = { 'e', 'n', 'e' };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_0_7[2] = { 0xC3, 0xB3 };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_0_7[2] = { 'k', 'o' };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_0_7[2] = { 'z', 's' };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_7[6] = { 'h', 'e', 't', 'e', 'n', 'e' };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_0_7[8] = { 0xD1, 0x8B, 0xD0, 0xB2, 0xD1, 0x88, 0xD0, 0xB8 };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_7[3] = { 'a', 'd', 'e' };$/;"	v	file:
s_0_7	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_0_7[4] = { 'n', 0xC4, 0xB1, 'z' };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_8[4] = { 'e', 'r', 'n', 'e' };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_0_8[1] = { 0xF6 };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_0_8[2] = { 'p', 0xE4 };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_8[4] = { 'e', 'r', 't', 'e' };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_8[4] = { 'a', 'n', 'd', 'e' };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_0_8[6] = { 0xD9, 0xD7, 0xDB, 0xC9, 0xD3, 0xD8 };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_8[4] = { 'e', 'r', 'n', 'e' };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_0_8[2] = { 0xC3, 0xB6 };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_0_8[3] = { 'p', 0xC3, 0xA4 };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_8[4] = { 'e', 'r', 't', 'e' };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_0_8[8] = { 0xD0, 0xB8, 0xD0, 0xB2, 0xD1, 0x88, 0xD0, 0xB8 };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_8[4] = { 'a', 'n', 'd', 'e' };$/;"	v	file:
s_0_8	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_0_8[4] = { 'm', 0xC3, 0xBC, 'z' };$/;"	v	file:
s_0_9	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_0_9[3] = { 'e', 'r', 'e' };$/;"	v	file:
s_0_9	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_0_9[1] = { 0xFA };$/;"	v	file:
s_0_9	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_0_9[2] = { 'k', 0xF6 };$/;"	v	file:
s_0_9	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_0_9[2] = { 'e', 'n' };$/;"	v	file:
s_0_9	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_0_9[4] = { 'a', 'r', 'n', 'e' };$/;"	v	file:
s_0_9	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_0_9[3] = { 'e', 'r', 'e' };$/;"	v	file:
s_0_9	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_0_9[2] = { 0xC3, 0xBA };$/;"	v	file:
s_0_9	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_0_9[3] = { 'k', 0xC3, 0xB6 };$/;"	v	file:
s_0_9	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_0_9[2] = { 'e', 'n' };$/;"	v	file:
s_0_9	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_0_9[4] = { 'a', 'r', 'n', 'e' };$/;"	v	file:
s_0_9	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_0_9[4] = { 'n', 0xC3, 0xBC, 'z' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_1[] = { 'i', 'g' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_1[] = { 'y' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_1[] = { 'k', 's', 'e' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_1[] = { 'U' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_1[] = { 's', 's' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_1[] = { 0xE8 };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_1[] = { 'e', 'r' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1[] = { 'i' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_1[] = { 'o', '~' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_1[] = { 'f', 'u', 'l', 'l' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1[] = { 'U' };$/;"	v	file:
s_1	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1[] = { 0xD1 };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_1[] = { 'i', 'g' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_1[] = { 'y' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_1[] = { 'k', 's', 'e' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_1[] = { 'U' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_1[] = { 's', 's' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_1[] = { 0xC3, 0xA8 };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_1[] = { 'e', 'r' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1[] = { 'i' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_1[] = { 'o', '~' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1[] = { 'U' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1[] = { 0xD1, 0x8F };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_1[] = { 'f', 'u', 'l', 'l' };$/;"	v	file:
s_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_10	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_10[] = { 'Y' };$/;"	v	file:
s_10	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10[] = { 'e' };$/;"	v	file:
s_10	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_10[] = { 'i', 'e' };$/;"	v	file:
s_10	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_10[] = { 'U' };$/;"	v	file:
s_10	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_10[] = { 'u' };$/;"	v	file:
s_10	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_10[] = { 'i' };$/;"	v	file:
s_10	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_10[] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_10	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_10[] = { 'i', 'r' };$/;"	v	file:
s_10	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_10[] = { 'u' };$/;"	v	file:
s_10	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10[] = { 'a' };$/;"	v	file:
s_10	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_10[] = { 'i' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_10[] = { 'Y' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10[] = { 'e' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_10[] = { 'i', 'e' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_10[] = { 'U' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_10[] = { 'u' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10[] = { 'a' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_10[] = { 'i' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_10[] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_10[] = { 'i', 'r' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_10[] = { 'i' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_10[] = { 'u' };$/;"	v	file:
s_10	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_10[] = { 's' };$/;"	v	file:
s_10_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_0[5] = { 'a', 'n', 'd', 'e', 's' };$/;"	v	file:
s_10_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_0[1] = { 'a' };$/;"	v	file:
s_10_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_0[5] = { 'a', 'n', 'd', 'e', 's' };$/;"	v	file:
s_10_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_0[1] = { 'a' };$/;"	v	file:
s_10_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_10_0[2] = { 'l', 'a' };$/;"	v	file:
s_10_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_1[5] = { 'a', 't', 'l', 'a', 's' };$/;"	v	file:
s_10_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_1[2] = { 'j', 'a' };$/;"	v	file:
s_10_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_1[5] = { 'a', 't', 'l', 'a', 's' };$/;"	v	file:
s_10_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_1[2] = { 'j', 'a' };$/;"	v	file:
s_10_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_10_1[2] = { 'l', 'e' };$/;"	v	file:
s_10_10	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_10[4] = { 'n', 'e', 'w', 's' };$/;"	v	file:
s_10_10	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_10[2] = { 'j', 'e' };$/;"	v	file:
s_10_10	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_10[4] = { 'n', 'e', 'w', 's' };$/;"	v	file:
s_10_10	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_10[2] = { 'j', 'e' };$/;"	v	file:
s_10_11	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_11[4] = { 'o', 'n', 'l', 'y' };$/;"	v	file:
s_10_11	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_11[2] = { 'n', 'k' };$/;"	v	file:
s_10_11	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_11[4] = { 'o', 'n', 'l', 'y' };$/;"	v	file:
s_10_11	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_11[2] = { 'n', 'k' };$/;"	v	file:
s_10_12	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_12[6] = { 's', 'i', 'n', 'g', 'l', 'y' };$/;"	v	file:
s_10_12	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_12[3] = { 'u', 'n', 'k' };$/;"	v	file:
s_10_12	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_12[6] = { 's', 'i', 'n', 'g', 'l', 'y' };$/;"	v	file:
s_10_12	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_12[3] = { 'u', 'n', 'k' };$/;"	v	file:
s_10_13	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_13[5] = { 's', 'k', 'i', 'e', 's' };$/;"	v	file:
s_10_13	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_13[3] = { 0xE1, 'n', 'k' };$/;"	v	file:
s_10_13	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_13[5] = { 's', 'k', 'i', 'e', 's' };$/;"	v	file:
s_10_13	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_13[4] = { 0xC3, 0xA1, 'n', 'k' };$/;"	v	file:
s_10_14	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_14[4] = { 's', 'k', 'i', 's' };$/;"	v	file:
s_10_14	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_14[3] = { 0xE9, 'n', 'k' };$/;"	v	file:
s_10_14	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_14[4] = { 's', 'k', 'i', 's' };$/;"	v	file:
s_10_14	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_14[4] = { 0xC3, 0xA9, 'n', 'k' };$/;"	v	file:
s_10_15	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_15[3] = { 's', 'k', 'y' };$/;"	v	file:
s_10_15	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_15[3] = { 0xFC, 'n', 'k' };$/;"	v	file:
s_10_15	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_15[3] = { 's', 'k', 'y' };$/;"	v	file:
s_10_15	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_15[4] = { 0xC3, 0xBC, 'n', 'k' };$/;"	v	file:
s_10_16	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_16[5] = { 't', 'y', 'i', 'n', 'g' };$/;"	v	file:
s_10_16	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_16[2] = { 'u', 'k' };$/;"	v	file:
s_10_16	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_16[5] = { 't', 'y', 'i', 'n', 'g' };$/;"	v	file:
s_10_16	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_16[2] = { 'u', 'k' };$/;"	v	file:
s_10_17	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_17[4] = { 'u', 'g', 'l', 'y' };$/;"	v	file:
s_10_17	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_17[3] = { 'j', 'u', 'k' };$/;"	v	file:
s_10_17	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_17[4] = { 'u', 'g', 'l', 'y' };$/;"	v	file:
s_10_17	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_17[3] = { 'j', 'u', 'k' };$/;"	v	file:
s_10_18	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_18[4] = { 0xE1, 'j', 'u', 'k' };$/;"	v	file:
s_10_18	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_18[5] = { 0xC3, 0xA1, 'j', 'u', 'k' };$/;"	v	file:
s_10_19	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_19[2] = { 0xFC, 'k' };$/;"	v	file:
s_10_19	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_19[3] = { 0xC3, 0xBC, 'k' };$/;"	v	file:
s_10_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_2[4] = { 'b', 'i', 'a', 's' };$/;"	v	file:
s_10_2	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_2[1] = { 'd' };$/;"	v	file:
s_10_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_2[4] = { 'b', 'i', 'a', 's' };$/;"	v	file:
s_10_2	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_2[1] = { 'd' };$/;"	v	file:
s_10_20	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_20[3] = { 'j', 0xFC, 'k' };$/;"	v	file:
s_10_20	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_20[4] = { 'j', 0xC3, 0xBC, 'k' };$/;"	v	file:
s_10_21	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_21[4] = { 0xE9, 'j', 0xFC, 'k' };$/;"	v	file:
s_10_21	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_21[6] = { 0xC3, 0xA9, 'j', 0xC3, 0xBC, 'k' };$/;"	v	file:
s_10_22	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_22[1] = { 'm' };$/;"	v	file:
s_10_22	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_22[1] = { 'm' };$/;"	v	file:
s_10_23	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_23[2] = { 'a', 'm' };$/;"	v	file:
s_10_23	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_23[2] = { 'a', 'm' };$/;"	v	file:
s_10_24	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_24[2] = { 'e', 'm' };$/;"	v	file:
s_10_24	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_24[2] = { 'e', 'm' };$/;"	v	file:
s_10_25	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_25[2] = { 'o', 'm' };$/;"	v	file:
s_10_25	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_25[2] = { 'o', 'm' };$/;"	v	file:
s_10_26	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_26[2] = { 0xE1, 'm' };$/;"	v	file:
s_10_26	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_26[3] = { 0xC3, 0xA1, 'm' };$/;"	v	file:
s_10_27	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_27[2] = { 0xE9, 'm' };$/;"	v	file:
s_10_27	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_27[3] = { 0xC3, 0xA9, 'm' };$/;"	v	file:
s_10_28	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_28[1] = { 'o' };$/;"	v	file:
s_10_28	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_28[1] = { 'o' };$/;"	v	file:
s_10_29	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_29[1] = { 0xE1 };$/;"	v	file:
s_10_29	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_29[2] = { 0xC3, 0xA1 };$/;"	v	file:
s_10_3	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_3[6] = { 'c', 'o', 's', 'm', 'o', 's' };$/;"	v	file:
s_10_3	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_3[2] = { 'a', 'd' };$/;"	v	file:
s_10_3	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_3[6] = { 'c', 'o', 's', 'm', 'o', 's' };$/;"	v	file:
s_10_3	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_3[2] = { 'a', 'd' };$/;"	v	file:
s_10_30	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_30[1] = { 0xE9 };$/;"	v	file:
s_10_30	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_30[2] = { 0xC3, 0xA9 };$/;"	v	file:
s_10_4	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_4[5] = { 'd', 'y', 'i', 'n', 'g' };$/;"	v	file:
s_10_4	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_4[2] = { 'e', 'd' };$/;"	v	file:
s_10_4	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_4[5] = { 'd', 'y', 'i', 'n', 'g' };$/;"	v	file:
s_10_4	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_4[2] = { 'e', 'd' };$/;"	v	file:
s_10_5	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_5[5] = { 'e', 'a', 'r', 'l', 'y' };$/;"	v	file:
s_10_5	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_5[2] = { 'o', 'd' };$/;"	v	file:
s_10_5	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_5[5] = { 'e', 'a', 'r', 'l', 'y' };$/;"	v	file:
s_10_5	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_5[2] = { 'o', 'd' };$/;"	v	file:
s_10_6	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_6[6] = { 'g', 'e', 'n', 't', 'l', 'y' };$/;"	v	file:
s_10_6	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_6[2] = { 0xE1, 'd' };$/;"	v	file:
s_10_6	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_6[6] = { 'g', 'e', 'n', 't', 'l', 'y' };$/;"	v	file:
s_10_6	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_6[3] = { 0xC3, 0xA1, 'd' };$/;"	v	file:
s_10_7	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_7[4] = { 'h', 'o', 'w', 'e' };$/;"	v	file:
s_10_7	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_7[2] = { 0xE9, 'd' };$/;"	v	file:
s_10_7	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_7[4] = { 'h', 'o', 'w', 'e' };$/;"	v	file:
s_10_7	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_7[3] = { 0xC3, 0xA9, 'd' };$/;"	v	file:
s_10_8	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_8[4] = { 'i', 'd', 'l', 'y' };$/;"	v	file:
s_10_8	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_8[2] = { 0xF6, 'd' };$/;"	v	file:
s_10_8	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_8[4] = { 'i', 'd', 'l', 'y' };$/;"	v	file:
s_10_8	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_8[3] = { 0xC3, 0xB6, 'd' };$/;"	v	file:
s_10_9	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_10_9[5] = { 'l', 'y', 'i', 'n', 'g' };$/;"	v	file:
s_10_9	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_10_9[1] = { 'e' };$/;"	v	file:
s_10_9	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_10_9[5] = { 'l', 'y', 'i', 'n', 'g' };$/;"	v	file:
s_10_9	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_10_9[1] = { 'e' };$/;"	v	file:
s_11	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_11[] = { 'y' };$/;"	v	file:
s_11	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_11[] = { 'y' };$/;"	v	file:
s_11	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_11[] = { 'e' };$/;"	v	file:
s_11	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_11[] = { 'i' };$/;"	v	file:
s_11	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_11[] = { 's' };$/;"	v	file:
s_11	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_11[] = { 'u' };$/;"	v	file:
s_11	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_11[] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_11	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_11[] = { 'u' };$/;"	v	file:
s_11	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_11[] = { 'i', 'c' };$/;"	v	file:
s_11	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11[] = { 'e' };$/;"	v	file:
s_11	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_11[] = { 'a', 't' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_11[] = { 'y' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_11[] = { 'y' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_11[] = { 'e' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_11[] = { 'i' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_11[] = { 's' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11[] = { 'e' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_11[] = { 'u' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_11[] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_11[] = { 'u' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_11[] = { 'a', 't' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_11[] = { 'i', 'c' };$/;"	v	file:
s_11	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_11[] = { 's' };$/;"	v	file:
s_11_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_0[2] = { 'i', 'd' };$/;"	v	file:
s_11_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_0[2] = { 'i', 'd' };$/;"	v	file:
s_11_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_11_0[2] = { 'c', 'a' };$/;"	v	file:
s_11_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_1[3] = { 'a', 'i', 'd' };$/;"	v	file:
s_11_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_1[3] = { 'a', 'i', 'd' };$/;"	v	file:
s_11_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_11_1[2] = { 'c', 'e' };$/;"	v	file:
s_11_10	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_10[2] = { 'e', 'i' };$/;"	v	file:
s_11_10	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_10[2] = { 'e', 'i' };$/;"	v	file:
s_11_11	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_11[3] = { 'j', 'e', 'i' };$/;"	v	file:
s_11_11	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_11[3] = { 'j', 'e', 'i' };$/;"	v	file:
s_11_12	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_12[2] = { 0xE1, 'i' };$/;"	v	file:
s_11_12	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_12[3] = { 0xC3, 0xA1, 'i' };$/;"	v	file:
s_11_13	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_13[2] = { 0xE9, 'i' };$/;"	v	file:
s_11_13	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_13[3] = { 0xC3, 0xA9, 'i' };$/;"	v	file:
s_11_14	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_14[4] = { 'i', 't', 'e', 'k' };$/;"	v	file:
s_11_14	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_14[4] = { 'i', 't', 'e', 'k' };$/;"	v	file:
s_11_15	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_15[5] = { 'e', 'i', 't', 'e', 'k' };$/;"	v	file:
s_11_15	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_15[5] = { 'e', 'i', 't', 'e', 'k' };$/;"	v	file:
s_11_16	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_16[6] = { 'j', 'e', 'i', 't', 'e', 'k' };$/;"	v	file:
s_11_16	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_16[6] = { 'j', 'e', 'i', 't', 'e', 'k' };$/;"	v	file:
s_11_17	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_17[5] = { 0xE9, 'i', 't', 'e', 'k' };$/;"	v	file:
s_11_17	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_17[6] = { 0xC3, 0xA9, 'i', 't', 'e', 'k' };$/;"	v	file:
s_11_18	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_18[2] = { 'i', 'k' };$/;"	v	file:
s_11_18	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_18[2] = { 'i', 'k' };$/;"	v	file:
s_11_19	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_19[3] = { 'a', 'i', 'k' };$/;"	v	file:
s_11_19	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_19[3] = { 'a', 'i', 'k' };$/;"	v	file:
s_11_2	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_2[4] = { 'j', 'a', 'i', 'd' };$/;"	v	file:
s_11_2	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_2[4] = { 'j', 'a', 'i', 'd' };$/;"	v	file:
s_11_20	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_20[4] = { 'j', 'a', 'i', 'k' };$/;"	v	file:
s_11_20	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_20[4] = { 'j', 'a', 'i', 'k' };$/;"	v	file:
s_11_21	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_21[3] = { 'e', 'i', 'k' };$/;"	v	file:
s_11_21	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_21[3] = { 'e', 'i', 'k' };$/;"	v	file:
s_11_22	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_22[4] = { 'j', 'e', 'i', 'k' };$/;"	v	file:
s_11_22	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_22[4] = { 'j', 'e', 'i', 'k' };$/;"	v	file:
s_11_23	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_23[3] = { 0xE1, 'i', 'k' };$/;"	v	file:
s_11_23	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_23[4] = { 0xC3, 0xA1, 'i', 'k' };$/;"	v	file:
s_11_24	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_24[3] = { 0xE9, 'i', 'k' };$/;"	v	file:
s_11_24	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_24[4] = { 0xC3, 0xA9, 'i', 'k' };$/;"	v	file:
s_11_25	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_25[3] = { 'i', 'n', 'k' };$/;"	v	file:
s_11_25	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_25[3] = { 'i', 'n', 'k' };$/;"	v	file:
s_11_26	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_26[4] = { 'a', 'i', 'n', 'k' };$/;"	v	file:
s_11_26	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_26[4] = { 'a', 'i', 'n', 'k' };$/;"	v	file:
s_11_27	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_27[5] = { 'j', 'a', 'i', 'n', 'k' };$/;"	v	file:
s_11_27	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_27[5] = { 'j', 'a', 'i', 'n', 'k' };$/;"	v	file:
s_11_28	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_28[4] = { 'e', 'i', 'n', 'k' };$/;"	v	file:
s_11_28	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_28[4] = { 'e', 'i', 'n', 'k' };$/;"	v	file:
s_11_29	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_29[5] = { 'j', 'e', 'i', 'n', 'k' };$/;"	v	file:
s_11_29	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_29[5] = { 'j', 'e', 'i', 'n', 'k' };$/;"	v	file:
s_11_3	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_3[3] = { 'e', 'i', 'd' };$/;"	v	file:
s_11_3	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_3[3] = { 'e', 'i', 'd' };$/;"	v	file:
s_11_30	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_30[4] = { 0xE1, 'i', 'n', 'k' };$/;"	v	file:
s_11_30	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_30[5] = { 0xC3, 0xA1, 'i', 'n', 'k' };$/;"	v	file:
s_11_31	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_31[4] = { 0xE9, 'i', 'n', 'k' };$/;"	v	file:
s_11_31	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_31[5] = { 0xC3, 0xA9, 'i', 'n', 'k' };$/;"	v	file:
s_11_32	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_32[5] = { 'a', 'i', 't', 'o', 'k' };$/;"	v	file:
s_11_32	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_32[5] = { 'a', 'i', 't', 'o', 'k' };$/;"	v	file:
s_11_33	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_33[6] = { 'j', 'a', 'i', 't', 'o', 'k' };$/;"	v	file:
s_11_33	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_33[6] = { 'j', 'a', 'i', 't', 'o', 'k' };$/;"	v	file:
s_11_34	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_34[5] = { 0xE1, 'i', 't', 'o', 'k' };$/;"	v	file:
s_11_34	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_34[6] = { 0xC3, 0xA1, 'i', 't', 'o', 'k' };$/;"	v	file:
s_11_35	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_35[2] = { 'i', 'm' };$/;"	v	file:
s_11_35	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_35[2] = { 'i', 'm' };$/;"	v	file:
s_11_36	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_36[3] = { 'a', 'i', 'm' };$/;"	v	file:
s_11_36	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_36[3] = { 'a', 'i', 'm' };$/;"	v	file:
s_11_37	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_37[4] = { 'j', 'a', 'i', 'm' };$/;"	v	file:
s_11_37	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_37[4] = { 'j', 'a', 'i', 'm' };$/;"	v	file:
s_11_38	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_38[3] = { 'e', 'i', 'm' };$/;"	v	file:
s_11_38	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_38[3] = { 'e', 'i', 'm' };$/;"	v	file:
s_11_39	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_39[4] = { 'j', 'e', 'i', 'm' };$/;"	v	file:
s_11_39	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_39[4] = { 'j', 'e', 'i', 'm' };$/;"	v	file:
s_11_4	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_4[4] = { 'j', 'e', 'i', 'd' };$/;"	v	file:
s_11_4	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_4[4] = { 'j', 'e', 'i', 'd' };$/;"	v	file:
s_11_40	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_40[3] = { 0xE1, 'i', 'm' };$/;"	v	file:
s_11_40	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_40[4] = { 0xC3, 0xA1, 'i', 'm' };$/;"	v	file:
s_11_41	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_41[3] = { 0xE9, 'i', 'm' };$/;"	v	file:
s_11_41	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_41[4] = { 0xC3, 0xA9, 'i', 'm' };$/;"	v	file:
s_11_5	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_5[3] = { 0xE1, 'i', 'd' };$/;"	v	file:
s_11_5	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_5[4] = { 0xC3, 0xA1, 'i', 'd' };$/;"	v	file:
s_11_6	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_6[3] = { 0xE9, 'i', 'd' };$/;"	v	file:
s_11_6	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_6[4] = { 0xC3, 0xA9, 'i', 'd' };$/;"	v	file:
s_11_7	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_7[1] = { 'i' };$/;"	v	file:
s_11_7	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_7[1] = { 'i' };$/;"	v	file:
s_11_8	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_8[2] = { 'a', 'i' };$/;"	v	file:
s_11_8	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_8[2] = { 'a', 'i' };$/;"	v	file:
s_11_9	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_11_9[3] = { 'j', 'a', 'i' };$/;"	v	file:
s_11_9	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_11_9[3] = { 'j', 'a', 'i' };$/;"	v	file:
s_12	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_12[] = { 'i' };$/;"	v	file:
s_12	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_12[] = { 'Y' };$/;"	v	file:
s_12	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_12[] = { 'p', 'o' };$/;"	v	file:
s_12	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_12[] = { 'u' };$/;"	v	file:
s_12	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_12[] = { 'n', 'i', 's' };$/;"	v	file:
s_12	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_12[] = { 'e' };$/;"	v	file:
s_12	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_12[] = { 'e', 'n', 't' };$/;"	v	file:
s_12	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_12[] = { 'g' };$/;"	v	file:
s_12	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_12[] = { 'l', 'o', 'g' };$/;"	v	file:
s_12	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_12[] = { 'a' };$/;"	v	file:
s_12	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_12[] = { 'a', 0xFE, 'i' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_12[] = { 'i' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_12[] = { 'Y' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_12[] = { 'p', 'o' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_12[] = { 'u' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_12[] = { 'n', 'i', 's' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_12[] = { 'a' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_12[] = { 'e' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_12[] = { 'e', 'n', 't' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_12[] = { 'g' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_12[] = { 'a', 0xC5, 0xA3, 'i' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_12[] = { 'l', 'o', 'g' };$/;"	v	file:
s_12	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_12[] = { 'y' };$/;"	v	file:
s_12_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_12_0[2] = { 'i', 'm' };$/;"	v	file:
s_12_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_12_1[2] = { 'u', 'm' };$/;"	v	file:
s_12_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_12_2[3] = { 0xC4, 0xB1, 'm' };$/;"	v	file:
s_12_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_12_3[3] = { 0xC3, 0xBC, 'm' };$/;"	v	file:
s_13	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_13[] = { 'e' };$/;"	v	file:
s_13	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_13[] = { 'i' };$/;"	v	file:
s_13	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_13[] = { 't' };$/;"	v	file:
s_13	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_13[] = { 'y' };$/;"	v	file:
s_13	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_13[] = { 'i', 'g' };$/;"	v	file:
s_13	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_13[] = { 'i', 'c' };$/;"	v	file:
s_13	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_13[] = { 'e' };$/;"	v	file:
s_13	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_13[] = { 'i' };$/;"	v	file:
s_13	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_13[] = { 'u' };$/;"	v	file:
s_13	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_13[] = { 'e' };$/;"	v	file:
s_13	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_13[] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_13[] = { 'e' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_13[] = { 'i' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_13[] = { 't' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_13[] = { 'y' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_13[] = { 'i', 'g' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_13[] = { 'e' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_13[] = { 'i', 'c' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_13[] = { 'e' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_13[] = { 'i' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_13[] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_13[] = { 'u' };$/;"	v	file:
s_13	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_13[] = { 'y' };$/;"	v	file:
s_13_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_13_0[3] = { 's', 'i', 'n' };$/;"	v	file:
s_13_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_13_1[3] = { 's', 'u', 'n' };$/;"	v	file:
s_13_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_13_2[4] = { 's', 0xC4, 0xB1, 'n' };$/;"	v	file:
s_13_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_13_3[4] = { 's', 0xC3, 0xBC, 'n' };$/;"	v	file:
s_14	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_14[] = { 'g', 'e', 'm' };$/;"	v	file:
s_14	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_14[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_14	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_14[] = { 'p', 'o' };$/;"	v	file:
s_14	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_14[] = { 'i', 'c' };$/;"	v	file:
s_14	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_14[] = { 'e' };$/;"	v	file:
s_14	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_14[] = { 'l', 'o', 'g' };$/;"	v	file:
s_14	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_14[] = { 'i', 'z', 'e' };$/;"	v	file:
s_14	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_14[] = { 'c' };$/;"	v	file:
s_14	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_14[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_14	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_14[] = { 'a' };$/;"	v	file:
s_14	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_14[] = { 'i', 'b', 'i', 'l' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_14[] = { 'g', 'e', 'm' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_14[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_14[] = { 'p', 'o' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_14[] = { 'i', 'c' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_14[] = { 'e' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_14[] = { 'a' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_14[] = { 'l', 'o', 'g' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_14[] = { 'i', 'z', 'e' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_14[] = { 'c' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_14[] = { 'i', 'b', 'i', 'l' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_14[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_14	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_14[] = { 'k', 'i' };$/;"	v	file:
s_14_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_14_0[2] = { 'i', 'z' };$/;"	v	file:
s_14_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_14_1[2] = { 'u', 'z' };$/;"	v	file:
s_14_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_14_2[3] = { 0xC4, 0xB1, 'z' };$/;"	v	file:
s_14_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_14_3[3] = { 0xC3, 0xBC, 'z' };$/;"	v	file:
s_15	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_15[] = { 'h', 'e', 'i', 'd' };$/;"	v	file:
s_15	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_15[] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_15	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_15[] = { 'j' };$/;"	v	file:
s_15	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_15[] = { 'i', 'q', 'U' };$/;"	v	file:
s_15	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_15[] = { 'e' };$/;"	v	file:
s_15	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_15[] = { 'u' };$/;"	v	file:
s_15	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_15[] = { 'a', 't', 'e' };$/;"	v	file:
s_15	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_15[] = { 'c' };$/;"	v	file:
s_15	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_15[] = { 'a', 't' };$/;"	v	file:
s_15	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_15[] = { 'e' };$/;"	v	file:
s_15	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_15[] = { 'i', 'v' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_15[] = { 'h', 'e', 'i', 'd' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_15[] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_15[] = { 'j' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_15[] = { 'i', 'q', 'U' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_15[] = { 'e' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_15[] = { 'e' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_15[] = { 'u' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_15[] = { 'a', 't', 'e' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_15[] = { 'c' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_15[] = { 'i', 'v' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_15[] = { 'a', 't' };$/;"	v	file:
s_15	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_15[] = { 'k', 'e', 'n' };$/;"	v	file:
s_15_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_15_0[5] = { 's', 'i', 'n', 'i', 'z' };$/;"	v	file:
s_15_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_15_1[5] = { 's', 'u', 'n', 'u', 'z' };$/;"	v	file:
s_15_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_15_2[7] = { 's', 0xC4, 0xB1, 'n', 0xC4, 0xB1, 'z' };$/;"	v	file:
s_15_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_15_3[7] = { 's', 0xC3, 0xBC, 'n', 0xC3, 0xBC, 'z' };$/;"	v	file:
s_16	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_16[] = { 'h', 'e', 'i', 'd' };$/;"	v	file:
s_16	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_16[] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_16	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_16[] = { 'o' };$/;"	v	file:
s_16	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_16[] = { 'l', 'o', 'g' };$/;"	v	file:
s_16	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_16[] = { 'e', 'r' };$/;"	v	file:
s_16	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_16[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_16	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_16[] = { 'a', 'l' };$/;"	v	file:
s_16	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_16[] = { 'i' };$/;"	v	file:
s_16	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_16[] = { 'a', 't' };$/;"	v	file:
s_16	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_16[] = { 'a' };$/;"	v	file:
s_16	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_16[] = { 'i', 'c' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_16[] = { 'h', 'e', 'i', 'd' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_16[] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_16[] = { 'o' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_16[] = { 'l', 'o', 'g' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_16[] = { 'e', 'r' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_16[] = { 'a' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_16[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_16[] = { 'a', 'l' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_16[] = { 'i' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_16[] = { 'i', 'c' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_16[] = { 'a', 't' };$/;"	v	file:
s_16	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_16[] = { 'p' };$/;"	v	file:
s_16_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_16_0[3] = { 'l', 'a', 'r' };$/;"	v	file:
s_16_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_16_1[3] = { 'l', 'e', 'r' };$/;"	v	file:
s_17	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_17[] = { 'c' };$/;"	v	file:
s_17	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_17[] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_17	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_17[] = { 'u' };$/;"	v	file:
s_17	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_17[] = { 'u' };$/;"	v	file:
s_17	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_17[] = { 'e', 'n' };$/;"	v	file:
s_17	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_17[] = { 'a', 't' };$/;"	v	file:
s_17	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_17[] = { 'a', 'l' };$/;"	v	file:
s_17	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_17[] = { 'c' };$/;"	v	file:
s_17	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_17[] = { 'u' };$/;"	v	file:
s_17	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_17[] = { 'e' };$/;"	v	file:
s_17	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_17[] = { 'a', 't' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_17[] = { 'c' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_17[] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_17[] = { 'u' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_17[] = { 'u' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_17[] = { 'e', 'n' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_17[] = { 'e' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_17[] = { 'a', 't' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_17[] = { 'a', 'l' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_17[] = { 'c' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_17[] = { 'a', 't' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_17[] = { 'u' };$/;"	v	file:
s_17	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_17[] = { 0xC3, 0xA7 };$/;"	v	file:
s_17_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_17_0[3] = { 'n', 'i', 'z' };$/;"	v	file:
s_17_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_17_1[3] = { 'n', 'u', 'z' };$/;"	v	file:
s_17_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_17_2[4] = { 'n', 0xC4, 0xB1, 'z' };$/;"	v	file:
s_17_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_17_3[4] = { 'n', 0xC3, 0xBC, 'z' };$/;"	v	file:
s_18	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_18[] = { 'e', 'n' };$/;"	v	file:
s_18	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_18[] = { 'e', 'n', 't' };$/;"	v	file:
s_18	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_18[] = { 'o' };$/;"	v	file:
s_18	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_18[] = { 'e', 'n', 't' };$/;"	v	file:
s_18	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_18[] = { 'a', 't' };$/;"	v	file:
s_18	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_18[] = { 'f', 'u', 'l' };$/;"	v	file:
s_18	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_18[] = { 'u' };$/;"	v	file:
s_18	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_18[] = { 'a' };$/;"	v	file:
s_18	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_18[] = { 'i', 't' };$/;"	v	file:
s_18	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_18[] = { 'e', 'n' };$/;"	v	file:
s_18	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_18[] = { 'e', 'n', 't' };$/;"	v	file:
s_18	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_18[] = { 'o' };$/;"	v	file:
s_18	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_18[] = { 'e', 'n', 't' };$/;"	v	file:
s_18	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_18[] = { 'a' };$/;"	v	file:
s_18	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_18[] = { 'a', 't' };$/;"	v	file:
s_18	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_18[] = { 'f', 'u', 'l' };$/;"	v	file:
s_18	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_18[] = { 'i', 't' };$/;"	v	file:
s_18	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_18[] = { 'u' };$/;"	v	file:
s_18	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_18[] = { 't' };$/;"	v	file:
s_18_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_18_0[3] = { 'd', 'i', 'r' };$/;"	v	file:
s_18_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_18_1[3] = { 't', 'i', 'r' };$/;"	v	file:
s_18_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_18_2[3] = { 'd', 'u', 'r' };$/;"	v	file:
s_18_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_18_3[3] = { 't', 'u', 'r' };$/;"	v	file:
s_18_4	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_18_4[4] = { 'd', 0xC4, 0xB1, 'r' };$/;"	v	file:
s_18_5	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_18_5[4] = { 't', 0xC4, 0xB1, 'r' };$/;"	v	file:
s_18_6	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_18_6[4] = { 'd', 0xC3, 0xBC, 'r' };$/;"	v	file:
s_18_7	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_18_7[4] = { 't', 0xC3, 0xBC, 'r' };$/;"	v	file:
s_19	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_19[] = { 'i', 'g' };$/;"	v	file:
s_19	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_19[] = { 'i', 'z', 'e' };$/;"	v	file:
s_19	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_19[] = { 'j' };$/;"	v	file:
s_19	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_19[] = { 'a', 't' };$/;"	v	file:
s_19	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_19[] = { 'i', 'c' };$/;"	v	file:
s_19	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_19[] = { 'o', 'u', 's' };$/;"	v	file:
s_19	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_19[] = { 'g' };$/;"	v	file:
s_19	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_19[] = { 'e' };$/;"	v	file:
s_19	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_19[] = { 0xFE };$/;"	v	file:
s_19	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_19[] = { 'i', 'g' };$/;"	v	file:
s_19	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_19[] = { 'i', 'z', 'e' };$/;"	v	file:
s_19	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_19[] = { 'j' };$/;"	v	file:
s_19	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_19[] = { 'a', 't' };$/;"	v	file:
s_19	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_19[] = { 'e' };$/;"	v	file:
s_19	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_19[] = { 'i', 'c' };$/;"	v	file:
s_19	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_19[] = { 'o', 'u', 's' };$/;"	v	file:
s_19	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_19[] = { 0xC5, 0xA3 };$/;"	v	file:
s_19	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_19[] = { 'g' };$/;"	v	file:
s_19	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_19[] = { 'k' };$/;"	v	file:
s_19_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_19_0[7] = { 'c', 'a', 's', 0xC4, 0xB1, 'n', 'a' };$/;"	v	file:
s_19_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_19_1[6] = { 'c', 'e', 's', 'i', 'n', 'e' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_1_0[2] = { 'g', 'd' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_1_0[1] = { '\\'' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_1_0[3] = { 'l', 'l', 'a' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_1_0[1] = { 'e' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_1_0[2] = { 'd', 't' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_0[2] = { 'l', 'a' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_1_0[2] = { 'd', 'd' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_1_0[1] = { 0xE1 };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_0[2] = { 'e', 'a' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_0[2] = { 0xC0, 0xC0 };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_1_0[2] = { 'g', 'd' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_1_0[1] = { '\\'' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_1_0[3] = { 'l', 'l', 'a' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_1_0[1] = { 'e' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_1_0[2] = { 0xC3, 0xA1 };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_1_0[2] = { 'd', 't' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_0[2] = { 'e', 'a' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_0[6] = { 0xD0, 0xB5, 0xD0, 0xBC, 0xD1, 0x83 };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_0[2] = { 'l', 'a' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_1_0[2] = { 'd', 'd' };$/;"	v	file:
s_1_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_1_0[4] = { 'l', 'e', 'r', 'i' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_1_1[2] = { 'd', 't' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_1_1[1] = { 'I' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_1_1[3] = { '\\'', 's', '\\'' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_1_1[2] = { 'n', 'a' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_1_1[1] = { 'I' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_1_1[2] = { 'e', 'm' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_1_1[1] = { 'I' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_1_1[2] = { 'v', 't' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_1[2] = { 'b', 'b' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_1_1[2] = { 'a', '~' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_1[4] = { 's', 'e', 'l', 'a' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_1_1[2] = { 'g', 'd' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_1_1[1] = { 0xE9 };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_1[4] = { 'a', 0xFE, 'i', 'a' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_1[2] = { 0xC5, 0xC0 };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_1_1[2] = { 'd', 't' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_1_1[1] = { 'I' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_1_1[3] = { '\\'', 's', '\\'' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_1_1[2] = { 'n', 'a' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_1_1[1] = { 'I' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_1_1[2] = { 'e', 'm' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_1_1[2] = { 0xC3, 0xA9 };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_1_1[1] = { 'I' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_1_1[2] = { 'v', 't' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_1[2] = { 'b', 'b' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_1_1[2] = { 'a', '~' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_1[5] = { 'a', 0xC5, 0xA3, 'i', 'a' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_1[6] = { 0xD0, 0xBE, 0xD0, 0xBC, 0xD1, 0x83 };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_1[4] = { 's', 'e', 'l', 'a' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_1_1[2] = { 'g', 'd' };$/;"	v	file:
s_1_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_1_1[5] = { 'l', 'a', 'r', 0xC4, 0xB1 };$/;"	v	file:
s_1_10	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_10[2] = { 'a', 't' };$/;"	v	file:
s_1_10	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_10[3] = { 'l', 'o', 's' };$/;"	v	file:
s_1_10	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_10[2] = { 'i', 'i' };$/;"	v	file:
s_1_10	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_10[3] = { 0xC9, 0xCD, 0xC9 };$/;"	v	file:
s_1_10	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_10[2] = { 'a', 't' };$/;"	v	file:
s_1_10	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_10[2] = { 'i', 'i' };$/;"	v	file:
s_1_10	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_10[4] = { 0xD1, 0x8B, 0xD0, 0xB5 };$/;"	v	file:
s_1_10	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_10[3] = { 'l', 'o', 's' };$/;"	v	file:
s_1_11	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_11[2] = { 't', 't' };$/;"	v	file:
s_1_11	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_11[5] = { 's', 'e', 'l', 'o', 's' };$/;"	v	file:
s_1_11	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_11[4] = { 'u', 'l', 'u', 'i' };$/;"	v	file:
s_1_11	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_11[3] = { 0xD9, 0xCD, 0xC9 };$/;"	v	file:
s_1_11	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_11[2] = { 't', 't' };$/;"	v	file:
s_1_11	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_11[4] = { 'u', 'l', 'u', 'i' };$/;"	v	file:
s_1_11	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_11[4] = { 0xD0, 0xB5, 0xD0, 0xB5 };$/;"	v	file:
s_1_11	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_11[5] = { 's', 'e', 'l', 'o', 's' };$/;"	v	file:
s_1_12	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_12[2] = { 'i', 'z' };$/;"	v	file:
s_1_12	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_12[3] = { 'n', 'o', 's' };$/;"	v	file:
s_1_12	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_12[2] = { 'u', 'l' };$/;"	v	file:
s_1_12	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_12[2] = { 0xC5, 0xCA };$/;"	v	file:
s_1_12	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_12[2] = { 'i', 'z' };$/;"	v	file:
s_1_12	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_12[2] = { 'u', 'l' };$/;"	v	file:
s_1_12	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_12[4] = { 0xD0, 0xB8, 0xD0, 0xB5 };$/;"	v	file:
s_1_12	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_12[3] = { 'n', 'o', 's' };$/;"	v	file:
s_1_13	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_13[4] = { 'e', 'l', 'o', 'r' };$/;"	v	file:
s_1_13	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_13[2] = { 0xC9, 0xCA };$/;"	v	file:
s_1_13	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_13[4] = { 'e', 'l', 'o', 'r' };$/;"	v	file:
s_1_13	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_13[4] = { 0xD0, 0xBE, 0xD0, 0xB5 };$/;"	v	file:
s_1_14	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_14[4] = { 'i', 'l', 'o', 'r' };$/;"	v	file:
s_1_14	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_14[2] = { 0xCF, 0xCA };$/;"	v	file:
s_1_14	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_14[4] = { 'i', 'l', 'o', 'r' };$/;"	v	file:
s_1_14	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_14[6] = { 0xD1, 0x8B, 0xD0, 0xBC, 0xD0, 0xB8 };$/;"	v	file:
s_1_15	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_15[5] = { 'i', 'i', 'l', 'o', 'r' };$/;"	v	file:
s_1_15	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_15[2] = { 0xD9, 0xCA };$/;"	v	file:
s_1_15	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_15[5] = { 'i', 'i', 'l', 'o', 'r' };$/;"	v	file:
s_1_15	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_15[6] = { 0xD0, 0xB8, 0xD0, 0xBC, 0xD0, 0xB8 };$/;"	v	file:
s_1_16	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_16[2] = { 0xC5, 0xCD };$/;"	v	file:
s_1_16	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_16[4] = { 0xD1, 0x8B, 0xD0, 0xB9 };$/;"	v	file:
s_1_17	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_17[2] = { 0xC9, 0xCD };$/;"	v	file:
s_1_17	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_17[4] = { 0xD0, 0xB5, 0xD0, 0xB9 };$/;"	v	file:
s_1_18	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_18[2] = { 0xCF, 0xCD };$/;"	v	file:
s_1_18	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_18[4] = { 0xD0, 0xB8, 0xD0, 0xB9 };$/;"	v	file:
s_1_19	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_19[2] = { 0xD9, 0xCD };$/;"	v	file:
s_1_19	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_19[4] = { 0xD0, 0xBE, 0xD0, 0xB9 };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_1_2[2] = { 'g', 't' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_1_2[1] = { 'Y' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_1_2[2] = { '\\'', 's' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_1_2[3] = { 's', 's', 'a' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_1_2[1] = { 'U' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_1_2[2] = { 'e', 'n' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_1_2[1] = { 'U' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_2[2] = { 'd', 'd' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_1_2[2] = { 'o', '~' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_2[2] = { 'l', 'e' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_1_2[2] = { 'n', 'n' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_2[3] = { 'a', 'u', 'a' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_2[2] = { 0xCF, 0xC0 };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_1_2[2] = { 'g', 't' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_1_2[1] = { 'Y' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_1_2[2] = { '\\'', 's' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_1_2[3] = { 's', 's', 'a' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_1_2[1] = { 'U' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_1_2[2] = { 'e', 'n' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_1_2[1] = { 'U' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_2[2] = { 'd', 'd' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_1_2[2] = { 'o', '~' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_2[3] = { 'a', 'u', 'a' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_2[4] = { 0xD1, 0x8B, 0xD1, 0x85 };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_2[2] = { 'l', 'e' };$/;"	v	file:
s_1_2	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_1_2[2] = { 'n', 'n' };$/;"	v	file:
s_1_20	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_20[3] = { 0xC5, 0xC7, 0xCF };$/;"	v	file:
s_1_20	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_20[4] = { 0xD1, 0x8B, 0xD0, 0xBC };$/;"	v	file:
s_1_21	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_21[3] = { 0xCF, 0xC7, 0xCF };$/;"	v	file:
s_1_21	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_21[4] = { 0xD0, 0xB5, 0xD0, 0xBC };$/;"	v	file:
s_1_22	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_22[2] = { 0xC1, 0xD1 };$/;"	v	file:
s_1_22	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_22[4] = { 0xD0, 0xB8, 0xD0, 0xBC };$/;"	v	file:
s_1_23	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_23[2] = { 0xD1, 0xD1 };$/;"	v	file:
s_1_23	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_23[4] = { 0xD0, 0xBE, 0xD0, 0xBC };$/;"	v	file:
s_1_24	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_24[3] = { 0xC5, 0xCD, 0xD5 };$/;"	v	file:
s_1_24	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_24[6] = { 0xD0, 0xB5, 0xD0, 0xB3, 0xD0, 0xBE };$/;"	v	file:
s_1_25	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_25[3] = { 0xCF, 0xCD, 0xD5 };$/;"	v	file:
s_1_25	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_25[6] = { 0xD0, 0xBE, 0xD0, 0xB3, 0xD0, 0xBE };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_1_3[2] = { 'k', 't' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_1_3[2] = { 't', 'a' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_1_3[1] = { 'Y' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_1_3[3] = { 'e', 'r', 'n' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_3[2] = { 'f', 'f' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_3[2] = { 'm', 'e' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_1_3[2] = { 'd', 't' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_3[3] = { 'i', 'u', 'a' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_3[2] = { 0xD5, 0xC0 };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_1_3[2] = { 'k', 't' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_1_3[2] = { 't', 'a' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_1_3[1] = { 'Y' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_1_3[3] = { 'e', 'r', 'n' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_3[2] = { 'f', 'f' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_3[3] = { 'i', 'u', 'a' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_3[4] = { 0xD0, 0xB8, 0xD1, 0x85 };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_3[2] = { 'm', 'e' };$/;"	v	file:
s_1_3	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_1_3[2] = { 'd', 't' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_1_4[3] = { 'l', 't', 'a' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_1_4[2] = { 'e', 'r' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_4[2] = { 'g', 'g' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_4[2] = { 's', 'e' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_1_4[2] = { 'g', 't' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_4[4] = { 'a', 0xFE, 'i', 'e' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_4[2] = { 0xC5, 0xC5 };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_1_4[3] = { 'l', 't', 'a' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_1_4[2] = { 'e', 'r' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_4[2] = { 'g', 'g' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_4[5] = { 'a', 0xC5, 0xA3, 'i', 'e' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_4[4] = { 0xD1, 0x83, 0xD1, 0x8E };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_4[2] = { 's', 'e' };$/;"	v	file:
s_1_4	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_1_4[2] = { 'g', 't' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_1_5[3] = { 's', 't', 'a' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_1_5[1] = { 's' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_5[2] = { 'b', 'l' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_5[2] = { 'l', 'o' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_1_5[2] = { 'k', 't' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_5[3] = { 'e', 'l', 'e' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_5[2] = { 0xC9, 0xC5 };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_1_5[3] = { 's', 't', 'a' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_1_5[1] = { 's' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_5[2] = { 'b', 'l' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_5[3] = { 'e', 'l', 'e' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_5[4] = { 0xD1, 0x8E, 0xD1, 0x8E };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_5[2] = { 'l', 'o' };$/;"	v	file:
s_1_5	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_1_5[2] = { 'k', 't' };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_1_6[2] = { 'e', 's' };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_6[2] = { 'm', 'm' };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_6[4] = { 's', 'e', 'l', 'o' };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_1_6[2] = { 't', 't' };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_6[3] = { 'i', 'l', 'e' };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_6[2] = { 0xCF, 0xC5 };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_1_6[2] = { 'e', 's' };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_6[2] = { 'm', 'm' };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_6[3] = { 'i', 'l', 'e' };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_6[4] = { 0xD0, 0xB5, 0xD1, 0x8E };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_6[4] = { 's', 'e', 'l', 'o' };$/;"	v	file:
s_1_6	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_1_6[2] = { 't', 't' };$/;"	v	file:
s_1_7	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_7[2] = { 'n', 'n' };$/;"	v	file:
s_1_7	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_7[3] = { 'l', 'a', 's' };$/;"	v	file:
s_1_7	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_7[4] = { 'i', 'i', 'l', 'e' };$/;"	v	file:
s_1_7	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_7[2] = { 0xD9, 0xC5 };$/;"	v	file:
s_1_7	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_7[2] = { 'n', 'n' };$/;"	v	file:
s_1_7	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_7[4] = { 'i', 'i', 'l', 'e' };$/;"	v	file:
s_1_7	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_7[4] = { 0xD0, 0xBE, 0xD1, 0x8E };$/;"	v	file:
s_1_7	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_7[3] = { 'l', 'a', 's' };$/;"	v	file:
s_1_8	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_8[2] = { 'p', 'p' };$/;"	v	file:
s_1_8	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_8[5] = { 's', 'e', 'l', 'a', 's' };$/;"	v	file:
s_1_8	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_8[3] = { 'i', 'e', 'i' };$/;"	v	file:
s_1_8	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_8[2] = { 0xC9, 0xC8 };$/;"	v	file:
s_1_8	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_8[2] = { 'p', 'p' };$/;"	v	file:
s_1_8	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_8[3] = { 'i', 'e', 'i' };$/;"	v	file:
s_1_8	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_8[4] = { 0xD1, 0x8F, 0xD1, 0x8F };$/;"	v	file:
s_1_8	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_8[5] = { 's', 'e', 'l', 'a', 's' };$/;"	v	file:
s_1_9	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_1_9[2] = { 'r', 'r' };$/;"	v	file:
s_1_9	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_1_9[3] = { 'l', 'e', 's' };$/;"	v	file:
s_1_9	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_1_9[4] = { 'a', 't', 'e', 'i' };$/;"	v	file:
s_1_9	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_1_9[2] = { 0xD9, 0xC8 };$/;"	v	file:
s_1_9	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_1_9[2] = { 'r', 'r' };$/;"	v	file:
s_1_9	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_1_9[4] = { 'a', 't', 'e', 'i' };$/;"	v	file:
s_1_9	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_1_9[4] = { 0xD0, 0xB0, 0xD1, 0x8F };$/;"	v	file:
s_1_9	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_1_9[3] = { 'l', 'e', 's' };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_2[] = { 'l', 0xF8, 's' };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_2[] = { 'Y' };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_2[] = { 'k', 's', 'i' };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_2[] = { 'u' };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2[] = { 0xEC };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_2[] = { 'e', 'e' };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_2[] = { 0xE3 };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2[] = { 'e' };$/;"	v	file:
s_2	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_2[] = { 0xC1 };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_2[] = { 'l', 0xC3, 0xB8, 's' };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_2[] = { 'Y' };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_2[] = { 'k', 's', 'i' };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_2[] = { 'u' };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2[] = { 'e' };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2[] = { 0xC3, 0xAC };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_2[] = { 'e', 'e' };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_2[] = { 0xC3, 0xA3 };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_2[] = { 0xD0, 0xB0 };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_2[] = { 0xC4, 0xB1 };$/;"	v	file:
s_20	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_20[] = { 'e' };$/;"	v	file:
s_20	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_20[] = { 'a', 't', 'e' };$/;"	v	file:
s_20	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_20[] = { 'e', 'u', 'x' };$/;"	v	file:
s_20	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_20[] = { 'i' };$/;"	v	file:
s_20	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_20[] = { 'i', 'v', 'e' };$/;"	v	file:
s_20	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_20[] = { 'u' };$/;"	v	file:
s_20	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_20[] = { 'a' };$/;"	v	file:
s_20	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_20[] = { 't' };$/;"	v	file:
s_20	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_20[] = { 'e' };$/;"	v	file:
s_20	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_20[] = { 'a', 't', 'e' };$/;"	v	file:
s_20	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_20[] = { 'e', 'u', 'x' };$/;"	v	file:
s_20	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_20[] = { 'a' };$/;"	v	file:
s_20	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_20[] = { 'i' };$/;"	v	file:
s_20	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_20[] = { 'i', 'v', 'e' };$/;"	v	file:
s_20	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_20[] = { 't' };$/;"	v	file:
s_20	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_20[] = { 'u' };$/;"	v	file:
s_20	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20[] = { 'd' };$/;"	v	file:
s_20_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_0[2] = { 'd', 'i' };$/;"	v	file:
s_20_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_1[2] = { 't', 'i' };$/;"	v	file:
s_20_10	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_10[3] = { 'd', 'i', 'm' };$/;"	v	file:
s_20_11	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_11[3] = { 't', 'i', 'm' };$/;"	v	file:
s_20_12	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_12[3] = { 'd', 'u', 'm' };$/;"	v	file:
s_20_13	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_13[3] = { 't', 'u', 'm' };$/;"	v	file:
s_20_14	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_14[4] = { 'd', 0xC4, 0xB1, 'm' };$/;"	v	file:
s_20_15	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_15[4] = { 't', 0xC4, 0xB1, 'm' };$/;"	v	file:
s_20_16	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_16[4] = { 'd', 0xC3, 0xBC, 'm' };$/;"	v	file:
s_20_17	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_17[4] = { 't', 0xC3, 0xBC, 'm' };$/;"	v	file:
s_20_18	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_18[3] = { 'd', 'i', 'n' };$/;"	v	file:
s_20_19	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_19[3] = { 't', 'i', 'n' };$/;"	v	file:
s_20_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_2[3] = { 'd', 'i', 'k' };$/;"	v	file:
s_20_20	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_20[3] = { 'd', 'u', 'n' };$/;"	v	file:
s_20_21	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_21[3] = { 't', 'u', 'n' };$/;"	v	file:
s_20_22	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_22[4] = { 'd', 0xC4, 0xB1, 'n' };$/;"	v	file:
s_20_23	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_23[4] = { 't', 0xC4, 0xB1, 'n' };$/;"	v	file:
s_20_24	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_24[4] = { 'd', 0xC3, 0xBC, 'n' };$/;"	v	file:
s_20_25	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_25[4] = { 't', 0xC3, 0xBC, 'n' };$/;"	v	file:
s_20_26	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_26[2] = { 'd', 'u' };$/;"	v	file:
s_20_27	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_27[2] = { 't', 'u' };$/;"	v	file:
s_20_28	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_28[3] = { 'd', 0xC4, 0xB1 };$/;"	v	file:
s_20_29	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_29[3] = { 't', 0xC4, 0xB1 };$/;"	v	file:
s_20_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_3[3] = { 't', 'i', 'k' };$/;"	v	file:
s_20_30	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_30[3] = { 'd', 0xC3, 0xBC };$/;"	v	file:
s_20_31	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_31[3] = { 't', 0xC3, 0xBC };$/;"	v	file:
s_20_4	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_4[3] = { 'd', 'u', 'k' };$/;"	v	file:
s_20_5	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_5[3] = { 't', 'u', 'k' };$/;"	v	file:
s_20_6	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_6[4] = { 'd', 0xC4, 0xB1, 'k' };$/;"	v	file:
s_20_7	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_7[4] = { 't', 0xC4, 0xB1, 'k' };$/;"	v	file:
s_20_8	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_8[4] = { 'd', 0xC3, 0xBC, 'k' };$/;"	v	file:
s_20_9	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_20_9[4] = { 't', 0xC3, 0xBC, 'k' };$/;"	v	file:
s_21	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_21[] = { 'e' };$/;"	v	file:
s_21	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_21[] = { 'a', 'l' };$/;"	v	file:
s_21	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_21[] = { 'i' };$/;"	v	file:
s_21	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_21[] = { 'h' };$/;"	v	file:
s_21	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_21[] = { 'b', 'l', 'e' };$/;"	v	file:
s_21	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_21[] = { 'g' };$/;"	v	file:
s_21	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_21[] = { 'e' };$/;"	v	file:
s_21	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_21[] = { 'i', 's', 't' };$/;"	v	file:
s_21	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_21[] = { 'e' };$/;"	v	file:
s_21	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_21[] = { 'a', 'l' };$/;"	v	file:
s_21	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_21[] = { 'i' };$/;"	v	file:
s_21	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_21[] = { 'e' };$/;"	v	file:
s_21	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_21[] = { 'h' };$/;"	v	file:
s_21	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_21[] = { 'b', 'l', 'e' };$/;"	v	file:
s_21	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_21[] = { 'i', 's', 't' };$/;"	v	file:
s_21	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_21[] = { 'g' };$/;"	v	file:
s_21	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_21[] = { 'g' };$/;"	v	file:
s_21_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_21_0[2] = { 's', 'a' };$/;"	v	file:
s_21_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_21_1[2] = { 's', 'e' };$/;"	v	file:
s_21_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_21_2[3] = { 's', 'a', 'k' };$/;"	v	file:
s_21_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_21_3[3] = { 's', 'e', 'k' };$/;"	v	file:
s_21_4	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_21_4[3] = { 's', 'a', 'm' };$/;"	v	file:
s_21_5	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_21_5[3] = { 's', 'e', 'm' };$/;"	v	file:
s_21_6	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_21_6[3] = { 's', 'a', 'n' };$/;"	v	file:
s_21_7	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_21_7[3] = { 's', 'e', 'n' };$/;"	v	file:
s_22	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_22[] = { 'f', 'u', 'l' };$/;"	v	file:
s_22	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_22[] = { 'a', 'b', 'l' };$/;"	v	file:
s_22	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_22[] = { 'a', 'l' };$/;"	v	file:
s_22	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_22[] = { 'a' };$/;"	v	file:
s_22	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_22[] = { 'u' };$/;"	v	file:
s_22	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_22[] = { 'f', 'u', 'l' };$/;"	v	file:
s_22	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_22[] = { 'a', 'b', 'l' };$/;"	v	file:
s_22	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_22[] = { 'a' };$/;"	v	file:
s_22	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_22[] = { 'a', 'l' };$/;"	v	file:
s_22	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_22[] = { 'u' };$/;"	v	file:
s_22	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_22[] = { 'a' };$/;"	v	file:
s_22_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_22_0[4] = { 'm', 'i', 0xC5, 0x9F };$/;"	v	file:
s_22_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_22_1[4] = { 'm', 'u', 0xC5, 0x9F };$/;"	v	file:
s_22_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_22_2[5] = { 'm', 0xC4, 0xB1, 0xC5, 0x9F };$/;"	v	file:
s_22_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_22_3[5] = { 'm', 0xC3, 0xBC, 0xC5, 0x9F };$/;"	v	file:
s_23	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_23[] = { 'o', 'u', 's' };$/;"	v	file:
s_23	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_23[] = { 'i', 'q', 'U' };$/;"	v	file:
s_23	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_23[] = { 'i', 'c' };$/;"	v	file:
s_23	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_23[] = { 'e' };$/;"	v	file:
s_23	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_23[] = { 'o', 'u', 's' };$/;"	v	file:
s_23	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_23[] = { 'i', 'q', 'U' };$/;"	v	file:
s_23	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_23[] = { 'e' };$/;"	v	file:
s_23	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_23[] = { 'i', 'c' };$/;"	v	file:
s_23	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_23[] = { 0xC4, 0xB1 };$/;"	v	file:
s_23_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_23_0[1] = { 'b' };$/;"	v	file:
s_23_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_23_1[1] = { 'c' };$/;"	v	file:
s_23_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_23_2[1] = { 'd' };$/;"	v	file:
s_23_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_23_3[2] = { 0xC4, 0x9F };$/;"	v	file:
s_24	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_24[] = { 'i', 'v', 'e' };$/;"	v	file:
s_24	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_24[] = { 'a', 't' };$/;"	v	file:
s_24	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_24[] = { 's' };$/;"	v	file:
s_24	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_24[] = { 'a' };$/;"	v	file:
s_24	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_24[] = { 'i', 'v', 'e' };$/;"	v	file:
s_24	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_24[] = { 'a', 't' };$/;"	v	file:
s_24	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_24[] = { 'a' };$/;"	v	file:
s_24	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_24[] = { 's' };$/;"	v	file:
s_24	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_24[] = { 0xC4, 0xB1 };$/;"	v	file:
s_25	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_25[] = { 'b', 'l', 'e' };$/;"	v	file:
s_25	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_25[] = { 'i', 'c' };$/;"	v	file:
s_25	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_25[] = { 't' };$/;"	v	file:
s_25	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_25[] = { 'e' };$/;"	v	file:
s_25	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_25[] = { 'b', 'l', 'e' };$/;"	v	file:
s_25	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_25[] = { 'i', 'c' };$/;"	v	file:
s_25	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_25[] = { 'e' };$/;"	v	file:
s_25	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_25[] = { 't' };$/;"	v	file:
s_25	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_25[] = { 'e' };$/;"	v	file:
s_26	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_26[] = { 'l' };$/;"	v	file:
s_26	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_26[] = { 'i', 'q', 'U' };$/;"	v	file:
s_26	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_26[] = { 'e' };$/;"	v	file:
s_26	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_26[] = { 'a' };$/;"	v	file:
s_26	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_26[] = { 'l' };$/;"	v	file:
s_26	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_26[] = { 'i', 'q', 'U' };$/;"	v	file:
s_26	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_26[] = { 'a' };$/;"	v	file:
s_26	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_26[] = { 'e' };$/;"	v	file:
s_26	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_26[] = { 'i' };$/;"	v	file:
s_27	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_27[] = { 'o', 'g' };$/;"	v	file:
s_27	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_27[] = { 'e', 'a', 'u' };$/;"	v	file:
s_27	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_27[] = { 'l' };$/;"	v	file:
s_27	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_27[] = { 'e' };$/;"	v	file:
s_27	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_27[] = { 'o', 'g' };$/;"	v	file:
s_27	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_27[] = { 'e', 'a', 'u' };$/;"	v	file:
s_27	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_27[] = { 'e' };$/;"	v	file:
s_27	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_27[] = { 'l' };$/;"	v	file:
s_27	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_27[] = { 'i' };$/;"	v	file:
s_28	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_28[] = { 'f', 'u', 'l' };$/;"	v	file:
s_28	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_28[] = { 'a', 'l' };$/;"	v	file:
s_28	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_28[] = { 'l' };$/;"	v	file:
s_28	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_28[] = { 'a' };$/;"	v	file:
s_28	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_28[] = { 'f', 'u', 'l' };$/;"	v	file:
s_28	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_28[] = { 'a', 'l' };$/;"	v	file:
s_28	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_28[] = { 'a' };$/;"	v	file:
s_28	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_28[] = { 'l' };$/;"	v	file:
s_28	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_28[] = { 'o' };$/;"	v	file:
s_29	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_29[] = { 'l', 'e', 's', 's' };$/;"	v	file:
s_29	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_29[] = { 'e', 'u', 'x' };$/;"	v	file:
s_29	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_29[] = { 'y' };$/;"	v	file:
s_29	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_29[] = { 'e' };$/;"	v	file:
s_29	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_29[] = { 'l', 'e', 's', 's' };$/;"	v	file:
s_29	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_29[] = { 'e', 'u', 'x' };$/;"	v	file:
s_29	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_29[] = { 'e' };$/;"	v	file:
s_29	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_29[] = { 'y' };$/;"	v	file:
s_29	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_29[] = { 'u' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_2_0[2] = { 'i', 'g' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_2_0[2] = { 'd', 'd' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_2_0[3] = { 'i', 'e', 'd' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_2_0[3] = { 'l', 'l', 0xE4 };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_2_0[3] = { 'i', 'q', 'U' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_2_0[2] = { 'e', 'n' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_0[2] = { 'l', 'a' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_2_0[3] = { 'l', 'e', 'g' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_2_0[2] = { 'e', 'd' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_2_0[2] = { 'i', 'c' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2_0[4] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_2_0[2] = { 'i', 'g' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_0[2] = { 'b', 'b' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_0[5] = { 'i', 'c', 'a', 'l', 'a' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_2_0[2] = { 0xC5, 0xCD };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_2_0[2] = { 'i', 'g' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_2_0[2] = { 'd', 'd' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_2_0[3] = { 'i', 'e', 'd' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_2_0[4] = { 'l', 'l', 0xC3, 0xA4 };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_2_0[3] = { 'i', 'q', 'U' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_2_0[2] = { 'e', 'n' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_0[2] = { 'b', 'b' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_0[2] = { 'l', 'a' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_2_0[3] = { 'l', 'e', 'g' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_2_0[2] = { 'e', 'd' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_2_0[2] = { 'i', 'c' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_0[5] = { 'i', 'c', 'a', 'l', 'a' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_2_0[4] = { 0xD0, 0xB2, 0xD1, 0x88 };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2_0[4] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_2_0[2] = { 'i', 'g' };$/;"	v	file:
s_2_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_2_0[2] = { 'n', 'i' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_2_1[3] = { 'l', 'i', 'g' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_2_1[2] = { 'k', 'k' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_2_1[1] = { 's' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_2_1[2] = { 'n', 0xE4 };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_2_1[3] = { 'a', 'b', 'l' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_2_1[2] = { 'e', 'r' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_1[4] = { 'c', 'e', 'l', 'a' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_2_1[4] = { 'e', 'l', 'e', 'g' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_2_1[3] = { 'e', 'e', 'd' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_2_1[2] = { 'a', 'd' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2_1[5] = { 'i', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_2_1[3] = { 'l', 'i', 'g' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_1[2] = { 'c', 'c' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_1[5] = { 'i', 'c', 'i', 'v', 'a' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_2_1[2] = { 0xCE, 0xCE };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_2_1[3] = { 'l', 'i', 'g' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_2_1[2] = { 'k', 'k' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_2_1[1] = { 's' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_2_1[3] = { 'n', 0xC3, 0xA4 };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_2_1[3] = { 'a', 'b', 'l' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_2_1[2] = { 'e', 'r' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_1[2] = { 'c', 'c' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_1[4] = { 'c', 'e', 'l', 'a' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_2_1[4] = { 'e', 'l', 'e', 'g' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_2_1[3] = { 'e', 'e', 'd' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_2_1[2] = { 'a', 'd' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_1[5] = { 'i', 'c', 'i', 'v', 'a' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_2_1[6] = { 0xD1, 0x8B, 0xD0, 0xB2, 0xD1, 0x88 };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2_1[5] = { 'i', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_2_1[3] = { 'l', 'i', 'g' };$/;"	v	file:
s_2_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_2_1[2] = { 'n', 'u' };$/;"	v	file:
s_2_10	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_10[4] = { 't', 'e', 'l', 'e' };$/;"	v	file:
s_2_10	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_2_10[7] = { 'h', 'e', 't', 's', 'l', 'o', 'v' };$/;"	v	file:
s_2_10	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2_10[2] = { 0xED, 'r' };$/;"	v	file:
s_2_10	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_10[2] = { 'p', 'p' };$/;"	v	file:
s_2_10	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_10[7] = { 'i', 'c', 'i', 't', 'a', 't', 'e' };$/;"	v	file:
s_2_10	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_10[2] = { 'p', 'p' };$/;"	v	file:
s_2_10	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_10[4] = { 't', 'e', 'l', 'e' };$/;"	v	file:
s_2_10	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_2_10[7] = { 'h', 'e', 't', 's', 'l', 'o', 'v' };$/;"	v	file:
s_2_10	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_10[7] = { 'i', 'c', 'i', 't', 'a', 't', 'e' };$/;"	v	file:
s_2_10	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2_10[3] = { 0xC3, 0xAD, 'r' };$/;"	v	file:
s_2_11	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_11[4] = { 'v', 'e', 'l', 'e' };$/;"	v	file:
s_2_11	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_11[2] = { 'r', 'r' };$/;"	v	file:
s_2_11	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_11[9] = { 'a', 'b', 'i', 'l', 'i', 't', 'a', 't', 'e' };$/;"	v	file:
s_2_11	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_11[2] = { 'r', 'r' };$/;"	v	file:
s_2_11	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_11[4] = { 'v', 'e', 'l', 'e' };$/;"	v	file:
s_2_11	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_11[9] = { 'a', 'b', 'i', 'l', 'i', 't', 'a', 't', 'e' };$/;"	v	file:
s_2_12	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_12[2] = { 'n', 'e' };$/;"	v	file:
s_2_12	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_12[3] = { 'c', 'c', 's' };$/;"	v	file:
s_2_12	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_12[9] = { 'i', 'b', 'i', 'l', 'i', 't', 'a', 't', 'e' };$/;"	v	file:
s_2_12	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_12[3] = { 'c', 'c', 's' };$/;"	v	file:
s_2_12	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_12[2] = { 'n', 'e' };$/;"	v	file:
s_2_12	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_12[9] = { 'i', 'b', 'i', 'l', 'i', 't', 'a', 't', 'e' };$/;"	v	file:
s_2_13	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_13[4] = { 'c', 'e', 'n', 'e' };$/;"	v	file:
s_2_13	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_13[2] = { 's', 's' };$/;"	v	file:
s_2_13	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_13[7] = { 'i', 'v', 'i', 't', 'a', 't', 'e' };$/;"	v	file:
s_2_13	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_13[2] = { 's', 's' };$/;"	v	file:
s_2_13	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_13[4] = { 'c', 'e', 'n', 'e' };$/;"	v	file:
s_2_13	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_13[7] = { 'i', 'v', 'i', 't', 'a', 't', 'e' };$/;"	v	file:
s_2_14	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_14[6] = { 'g', 'l', 'i', 'e', 'n', 'e' };$/;"	v	file:
s_2_14	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_14[3] = { 'z', 'z', 's' };$/;"	v	file:
s_2_14	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_14[5] = { 'i', 'c', 'i', 'v', 'e' };$/;"	v	file:
s_2_14	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_14[3] = { 'z', 'z', 's' };$/;"	v	file:
s_2_14	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_14[6] = { 'g', 'l', 'i', 'e', 'n', 'e' };$/;"	v	file:
s_2_14	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_14[5] = { 'i', 'c', 'i', 'v', 'e' };$/;"	v	file:
s_2_15	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_15[4] = { 'm', 'e', 'n', 'e' };$/;"	v	file:
s_2_15	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_15[2] = { 't', 't' };$/;"	v	file:
s_2_15	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_15[5] = { 'a', 't', 'i', 'v', 'e' };$/;"	v	file:
s_2_15	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_15[2] = { 't', 't' };$/;"	v	file:
s_2_15	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_15[4] = { 'm', 'e', 'n', 'e' };$/;"	v	file:
s_2_15	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_15[5] = { 'a', 't', 'i', 'v', 'e' };$/;"	v	file:
s_2_16	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_16[4] = { 's', 'e', 'n', 'e' };$/;"	v	file:
s_2_16	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_16[2] = { 'v', 'v' };$/;"	v	file:
s_2_16	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_16[5] = { 'i', 't', 'i', 'v', 'e' };$/;"	v	file:
s_2_16	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_16[2] = { 'v', 'v' };$/;"	v	file:
s_2_16	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_16[4] = { 's', 'e', 'n', 'e' };$/;"	v	file:
s_2_16	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_16[5] = { 'i', 't', 'i', 'v', 'e' };$/;"	v	file:
s_2_17	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_17[4] = { 't', 'e', 'n', 'e' };$/;"	v	file:
s_2_17	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_17[3] = { 'g', 'g', 'y' };$/;"	v	file:
s_2_17	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_17[5] = { 'i', 'c', 'a', 'l', 'i' };$/;"	v	file:
s_2_17	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_17[3] = { 'g', 'g', 'y' };$/;"	v	file:
s_2_17	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_17[4] = { 't', 'e', 'n', 'e' };$/;"	v	file:
s_2_17	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_17[5] = { 'i', 'c', 'a', 'l', 'i' };$/;"	v	file:
s_2_18	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_18[4] = { 'v', 'e', 'n', 'e' };$/;"	v	file:
s_2_18	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_18[3] = { 'l', 'l', 'y' };$/;"	v	file:
s_2_18	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_18[5] = { 'a', 't', 'o', 'r', 'i' };$/;"	v	file:
s_2_18	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_18[3] = { 'l', 'l', 'y' };$/;"	v	file:
s_2_18	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_18[4] = { 'v', 'e', 'n', 'e' };$/;"	v	file:
s_2_18	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_18[5] = { 'a', 't', 'o', 'r', 'i' };$/;"	v	file:
s_2_19	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_19[2] = { 'c', 'i' };$/;"	v	file:
s_2_19	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_19[3] = { 'n', 'n', 'y' };$/;"	v	file:
s_2_19	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_19[7] = { 'i', 'c', 'a', 't', 'o', 'r', 'i' };$/;"	v	file:
s_2_19	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_19[3] = { 'n', 'n', 'y' };$/;"	v	file:
s_2_19	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_19[2] = { 'c', 'i' };$/;"	v	file:
s_2_19	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_19[7] = { 'i', 'c', 'a', 't', 'o', 'r', 'i' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_2_2[4] = { 'e', 'l', 'i', 'g' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_2_2[2] = { 't', 't' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_2_2[3] = { 'i', 'e', 's' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_2_2[3] = { 's', 's', 0xE4 };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_2_2[3] = { 'I', 0xE8, 'r' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_2_2[2] = { 's', 't' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_2[6] = { 'g', 'l', 'i', 'e', 'l', 'a' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_2_2[2] = { 'i', 'g' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_2_2[3] = { 'i', 'n', 'g' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_2_2[2] = { 'o', 's' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2_2[5] = { 'y', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_2_2[3] = { 'e', 'l', 's' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_2[2] = { 'd', 'd' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_2[5] = { 'a', 't', 'i', 'v', 'a' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_2_2[2] = { 0xD7, 0xDB };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_2_2[4] = { 'e', 'l', 'i', 'g' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_2_2[2] = { 't', 't' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_2_2[3] = { 'i', 'e', 's' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_2_2[4] = { 's', 's', 0xC3, 0xA4 };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_2_2[4] = { 'I', 0xC3, 0xA8, 'r' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_2_2[2] = { 's', 't' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_2[2] = { 'd', 'd' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_2[6] = { 'g', 'l', 'i', 'e', 'l', 'a' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_2_2[2] = { 'i', 'g' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_2_2[3] = { 'i', 'n', 'g' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_2_2[2] = { 'o', 's' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_2[5] = { 'a', 't', 'i', 'v', 'a' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_2_2[6] = { 0xD0, 0xB8, 0xD0, 0xB2, 0xD1, 0x88 };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2_2[5] = { 'y', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_2_2[3] = { 'e', 'l', 's' };$/;"	v	file:
s_2_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_2_2[3] = { 'n', 0xC4, 0xB1 };$/;"	v	file:
s_2_20	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_20[2] = { 'l', 'i' };$/;"	v	file:
s_2_20	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_20[3] = { 't', 't', 'y' };$/;"	v	file:
s_2_20	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_20[5] = { 'i', 't', 'o', 'r', 'i' };$/;"	v	file:
s_2_20	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_20[3] = { 't', 't', 'y' };$/;"	v	file:
s_2_20	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_20[2] = { 'l', 'i' };$/;"	v	file:
s_2_20	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_20[5] = { 'i', 't', 'o', 'r', 'i' };$/;"	v	file:
s_2_21	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_21[4] = { 'c', 'e', 'l', 'i' };$/;"	v	file:
s_2_21	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_21[3] = { 's', 's', 'z' };$/;"	v	file:
s_2_21	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_21[5] = { 0xE3, 't', 'o', 'r', 'i' };$/;"	v	file:
s_2_21	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_21[3] = { 's', 's', 'z' };$/;"	v	file:
s_2_21	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_21[4] = { 'c', 'e', 'l', 'i' };$/;"	v	file:
s_2_21	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_21[6] = { 0xC4, 0x83, 't', 'o', 'r', 'i' };$/;"	v	file:
s_2_22	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_22[6] = { 'g', 'l', 'i', 'e', 'l', 'i' };$/;"	v	file:
s_2_22	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_22[2] = { 'z', 'z' };$/;"	v	file:
s_2_22	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_22[7] = { 'i', 'c', 'i', 't', 'a', 't', 'i' };$/;"	v	file:
s_2_22	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_22[2] = { 'z', 'z' };$/;"	v	file:
s_2_22	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_22[6] = { 'g', 'l', 'i', 'e', 'l', 'i' };$/;"	v	file:
s_2_22	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_22[7] = { 'i', 'c', 'i', 't', 'a', 't', 'i' };$/;"	v	file:
s_2_23	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_23[4] = { 'm', 'e', 'l', 'i' };$/;"	v	file:
s_2_23	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_23[9] = { 'a', 'b', 'i', 'l', 'i', 't', 'a', 't', 'i' };$/;"	v	file:
s_2_23	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_23[4] = { 'm', 'e', 'l', 'i' };$/;"	v	file:
s_2_23	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_23[9] = { 'a', 'b', 'i', 'l', 'i', 't', 'a', 't', 'i' };$/;"	v	file:
s_2_24	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_24[4] = { 't', 'e', 'l', 'i' };$/;"	v	file:
s_2_24	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_24[7] = { 'i', 'v', 'i', 't', 'a', 't', 'i' };$/;"	v	file:
s_2_24	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_24[4] = { 't', 'e', 'l', 'i' };$/;"	v	file:
s_2_24	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_24[7] = { 'i', 'v', 'i', 't', 'a', 't', 'i' };$/;"	v	file:
s_2_25	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_25[4] = { 'v', 'e', 'l', 'i' };$/;"	v	file:
s_2_25	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_25[5] = { 'i', 'c', 'i', 'v', 'i' };$/;"	v	file:
s_2_25	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_25[4] = { 'v', 'e', 'l', 'i' };$/;"	v	file:
s_2_25	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_25[5] = { 'i', 'c', 'i', 'v', 'i' };$/;"	v	file:
s_2_26	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_26[3] = { 'g', 'l', 'i' };$/;"	v	file:
s_2_26	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_26[5] = { 'a', 't', 'i', 'v', 'i' };$/;"	v	file:
s_2_26	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_26[3] = { 'g', 'l', 'i' };$/;"	v	file:
s_2_26	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_26[5] = { 'a', 't', 'i', 'v', 'i' };$/;"	v	file:
s_2_27	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_27[2] = { 'm', 'i' };$/;"	v	file:
s_2_27	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_27[5] = { 'i', 't', 'i', 'v', 'i' };$/;"	v	file:
s_2_27	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_27[2] = { 'm', 'i' };$/;"	v	file:
s_2_27	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_27[5] = { 'i', 't', 'i', 'v', 'i' };$/;"	v	file:
s_2_28	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_28[2] = { 's', 'i' };$/;"	v	file:
s_2_28	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_28[6] = { 'i', 'c', 'i', 't', 0xE3, 'i' };$/;"	v	file:
s_2_28	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_28[2] = { 's', 'i' };$/;"	v	file:
s_2_28	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_28[7] = { 'i', 'c', 'i', 't', 0xC4, 0x83, 'i' };$/;"	v	file:
s_2_29	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_29[2] = { 't', 'i' };$/;"	v	file:
s_2_29	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_29[8] = { 'a', 'b', 'i', 'l', 'i', 't', 0xE3, 'i' };$/;"	v	file:
s_2_29	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_29[2] = { 't', 'i' };$/;"	v	file:
s_2_29	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_29[9] = { 'a', 'b', 'i', 'l', 'i', 't', 0xC4, 0x83, 'i' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_2_3[3] = { 'e', 'l', 's' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_2_3[4] = { 's', 's', 'e', 's' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_2_3[2] = { 't', 0xE4 };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_2_3[3] = { 'i', 0xE8, 'r' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_2_3[3] = { 'e', 's', 't' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_3[4] = { 'm', 'e', 'l', 'a' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_2_3[3] = { 'e', 'i', 'g' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_2_3[2] = { 'i', 'v' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2_3[4] = { 0xE1, 'n', 'd', 'o' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_2_3[5] = { 'f', 'u', 'l', 'l', 't' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_3[2] = { 'f', 'f' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_3[5] = { 'i', 't', 'i', 'v', 'a' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_2_3[3] = { 0xC9, 0xD7, 0xDB };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_2_3[3] = { 'e', 'l', 's' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_2_3[4] = { 's', 's', 'e', 's' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_2_3[3] = { 't', 0xC3, 0xA4 };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_2_3[4] = { 'i', 0xC3, 0xA8, 'r' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_2_3[3] = { 'e', 's', 't' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_3[2] = { 'f', 'f' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_3[4] = { 'm', 'e', 'l', 'a' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_2_3[3] = { 'e', 'i', 'g' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_2_3[2] = { 'i', 'v' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_3[5] = { 'i', 't', 'i', 'v', 'a' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_2_3[2] = { 0xD1, 0x89 };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2_3[5] = { 0xC3, 0xA1, 'n', 'd', 'o' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_2_3[5] = { 'f', 'u', 'l', 'l', 't' };$/;"	v	file:
s_2_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_2_3[3] = { 'n', 0xC3, 0xBC };$/;"	v	file:
s_2_30	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_30[2] = { 'v', 'i' };$/;"	v	file:
s_2_30	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_30[6] = { 'i', 'v', 'i', 't', 0xE3, 'i' };$/;"	v	file:
s_2_30	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_30[2] = { 'v', 'i' };$/;"	v	file:
s_2_30	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_30[7] = { 'i', 'v', 'i', 't', 0xC4, 0x83, 'i' };$/;"	v	file:
s_2_31	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_31[2] = { 'l', 'o' };$/;"	v	file:
s_2_31	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_31[7] = { 'i', 'c', 'i', 't', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_2_31	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_31[2] = { 'l', 'o' };$/;"	v	file:
s_2_31	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_31[9] = { 'i', 'c', 'i', 't', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_2_32	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_32[4] = { 'c', 'e', 'l', 'o' };$/;"	v	file:
s_2_32	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_32[9] = { 'a', 'b', 'i', 'l', 'i', 't', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_2_32	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_32[4] = { 'c', 'e', 'l', 'o' };$/;"	v	file:
s_2_32	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_32[11] = { 'a', 'b', 'i', 'l', 'i', 't', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_2_33	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_33[6] = { 'g', 'l', 'i', 'e', 'l', 'o' };$/;"	v	file:
s_2_33	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_33[7] = { 'i', 'v', 'i', 't', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_2_33	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_33[6] = { 'g', 'l', 'i', 'e', 'l', 'o' };$/;"	v	file:
s_2_33	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_33[9] = { 'i', 'v', 'i', 't', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_2_34	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_34[4] = { 'm', 'e', 'l', 'o' };$/;"	v	file:
s_2_34	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_34[4] = { 'i', 'c', 'a', 'l' };$/;"	v	file:
s_2_34	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_34[4] = { 'm', 'e', 'l', 'o' };$/;"	v	file:
s_2_34	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_34[4] = { 'i', 'c', 'a', 'l' };$/;"	v	file:
s_2_35	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_35[4] = { 't', 'e', 'l', 'o' };$/;"	v	file:
s_2_35	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_35[4] = { 'a', 't', 'o', 'r' };$/;"	v	file:
s_2_35	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_35[4] = { 't', 'e', 'l', 'o' };$/;"	v	file:
s_2_35	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_35[4] = { 'a', 't', 'o', 'r' };$/;"	v	file:
s_2_36	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_36[4] = { 'v', 'e', 'l', 'o' };$/;"	v	file:
s_2_36	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_36[6] = { 'i', 'c', 'a', 't', 'o', 'r' };$/;"	v	file:
s_2_36	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_36[4] = { 'v', 'e', 'l', 'o' };$/;"	v	file:
s_2_36	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_36[6] = { 'i', 'c', 'a', 't', 'o', 'r' };$/;"	v	file:
s_2_37	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_37[4] = { 'i', 't', 'o', 'r' };$/;"	v	file:
s_2_37	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_37[4] = { 'i', 't', 'o', 'r' };$/;"	v	file:
s_2_38	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_38[4] = { 0xE3, 't', 'o', 'r' };$/;"	v	file:
s_2_38	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_38[5] = { 0xC4, 0x83, 't', 'o', 'r' };$/;"	v	file:
s_2_39	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_39[4] = { 'i', 'c', 'i', 'v' };$/;"	v	file:
s_2_39	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_39[4] = { 'i', 'c', 'i', 'v' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_ISO_8859_1_danish.c	/^static const symbol s_2_4[4] = { 'l', 0xF8, 's', 't' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_2_4[2] = { 's', 's' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_2_4[3] = { 'l', 't', 0xE4 };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_2_4[3] = { 'e', 'u', 's' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_4[4] = { 't', 'e', 'l', 'a' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_2_4[3] = { 'l', 'i', 'g' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2_4[5] = { 'i', 0xE9, 'n', 'd', 'o' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^static const symbol s_2_4[4] = { 'l', 0xF6, 's', 't' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_4[2] = { 'g', 'g' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_4[5] = { 'i', 'c', 'a', 'l', 'e' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_2_4[3] = { 0xD9, 0xD7, 0xDB };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_UTF_8_danish.c	/^static const symbol s_2_4[5] = { 'l', 0xC3, 0xB8, 's', 't' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_2_4[2] = { 's', 's' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_2_4[4] = { 'l', 't', 0xC3, 0xA4 };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_2_4[3] = { 'e', 'u', 's' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_4[2] = { 'g', 'g' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_4[4] = { 't', 'e', 'l', 'a' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_2_4[3] = { 'l', 'i', 'g' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_4[5] = { 'i', 'c', 'a', 'l', 'e' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_2_4[4] = { 0xD1, 0x8E, 0xD1, 0x89 };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2_4[6] = { 'i', 0xC3, 0xA9, 'n', 'd', 'o' };$/;"	v	file:
s_2_4	libstemmer/src_c/stem_UTF_8_swedish.c	/^static const symbol s_2_4[5] = { 'l', 0xC3, 0xB6, 's', 't' };$/;"	v	file:
s_2_40	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_40[4] = { 'a', 't', 'i', 'v' };$/;"	v	file:
s_2_40	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_40[4] = { 'a', 't', 'i', 'v' };$/;"	v	file:
s_2_41	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_41[4] = { 'i', 't', 'i', 'v' };$/;"	v	file:
s_2_41	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_41[4] = { 'i', 't', 'i', 'v' };$/;"	v	file:
s_2_42	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_42[5] = { 'i', 'c', 'a', 'l', 0xE3 };$/;"	v	file:
s_2_42	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_42[6] = { 'i', 'c', 'a', 'l', 0xC4, 0x83 };$/;"	v	file:
s_2_43	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_43[5] = { 'i', 'c', 'i', 'v', 0xE3 };$/;"	v	file:
s_2_43	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_43[6] = { 'i', 'c', 'i', 'v', 0xC4, 0x83 };$/;"	v	file:
s_2_44	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_44[5] = { 'a', 't', 'i', 'v', 0xE3 };$/;"	v	file:
s_2_44	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_44[6] = { 'a', 't', 'i', 'v', 0xC4, 0x83 };$/;"	v	file:
s_2_45	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_45[5] = { 'i', 't', 'i', 'v', 0xE3 };$/;"	v	file:
s_2_45	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_45[6] = { 'i', 't', 'i', 'v', 0xC4, 0x83 };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_2_5[2] = { 'u', 's' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_2_5[3] = { 's', 't', 0xE4 };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_2_5[2] = { 'i', 'v' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_5[4] = { 'v', 'e', 'l', 'a' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_2_5[4] = { 'e', 'l', 'i', 'g' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2_5[2] = { 'a', 'r' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_5[2] = { 'j', 'j' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_5[6] = { 'a', 0xFE, 'i', 'u', 'n', 'e' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_2_5[1] = { 0xDD };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_2_5[2] = { 'u', 's' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_2_5[4] = { 's', 't', 0xC3, 0xA4 };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_2_5[2] = { 'i', 'v' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_5[2] = { 'j', 'j' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_5[4] = { 'v', 'e', 'l', 'a' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_2_5[4] = { 'e', 'l', 'i', 'g' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_5[7] = { 'a', 0xC5, 0xA3, 'i', 'u', 'n', 'e' };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_2_5[6] = { 0xD1, 0x83, 0xD1, 0x8E, 0xD1, 0x89 };$/;"	v	file:
s_2_5	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2_5[2] = { 'a', 'r' };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_6[2] = { 'l', 'e' };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_2_6[3] = { 'e', 'l', 's' };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2_6[2] = { 'e', 'r' };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_6[2] = { 'k', 'k' };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_6[6] = { 'i', 0xFE, 'i', 'u', 'n', 'e' };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_2_6[2] = { 0xC0, 0xDD };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_6[2] = { 'k', 'k' };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_6[2] = { 'l', 'e' };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_2_6[3] = { 'e', 'l', 's' };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_6[7] = { 'i', 0xC5, 0xA3, 'i', 'u', 'n', 'e' };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_2_6[4] = { 0xD0, 0xB5, 0xD0, 0xBC };$/;"	v	file:
s_2_6	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2_6[2] = { 'e', 'r' };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_7[4] = { 'c', 'e', 'l', 'e' };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_2_7[3] = { 'l', 'o', 'v' };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2_7[2] = { 'i', 'r' };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_7[2] = { 'l', 'l' };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_7[6] = { 'a', 't', 'o', 'a', 'r', 'e' };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_2_7[3] = { 0xD5, 0xC0, 0xDD };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_7[2] = { 'l', 'l' };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_7[4] = { 'c', 'e', 'l', 'e' };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_2_7[3] = { 'l', 'o', 'v' };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_7[6] = { 'a', 't', 'o', 'a', 'r', 'e' };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_2_7[4] = { 0xD0, 0xBD, 0xD0, 0xBD };$/;"	v	file:
s_2_7	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2_7[2] = { 'i', 'r' };$/;"	v	file:
s_2_8	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_8[6] = { 'g', 'l', 'i', 'e', 'l', 'e' };$/;"	v	file:
s_2_8	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_2_8[4] = { 'e', 'l', 'o', 'v' };$/;"	v	file:
s_2_8	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2_8[2] = { 0xE1, 'r' };$/;"	v	file:
s_2_8	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_8[2] = { 'm', 'm' };$/;"	v	file:
s_2_8	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_8[6] = { 'i', 't', 'o', 'a', 'r', 'e' };$/;"	v	file:
s_2_8	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_8[2] = { 'm', 'm' };$/;"	v	file:
s_2_8	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_8[6] = { 'g', 'l', 'i', 'e', 'l', 'e' };$/;"	v	file:
s_2_8	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_2_8[4] = { 'e', 'l', 'o', 'v' };$/;"	v	file:
s_2_8	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_8[6] = { 'i', 't', 'o', 'a', 'r', 'e' };$/;"	v	file:
s_2_8	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2_8[3] = { 0xC3, 0xA1, 'r' };$/;"	v	file:
s_2_9	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_2_9[4] = { 'm', 'e', 'l', 'e' };$/;"	v	file:
s_2_9	libstemmer/src_c/stem_ISO_8859_1_norwegian.c	/^static const symbol s_2_9[4] = { 's', 'l', 'o', 'v' };$/;"	v	file:
s_2_9	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_2_9[2] = { 0xE9, 'r' };$/;"	v	file:
s_2_9	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_2_9[2] = { 'n', 'n' };$/;"	v	file:
s_2_9	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_2_9[6] = { 0xE3, 't', 'o', 'a', 'r', 'e' };$/;"	v	file:
s_2_9	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_2_9[2] = { 'n', 'n' };$/;"	v	file:
s_2_9	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_2_9[4] = { 'm', 'e', 'l', 'e' };$/;"	v	file:
s_2_9	libstemmer/src_c/stem_UTF_8_norwegian.c	/^static const symbol s_2_9[4] = { 's', 'l', 'o', 'v' };$/;"	v	file:
s_2_9	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_2_9[7] = { 0xC4, 0x83, 't', 'o', 'a', 'r', 'e' };$/;"	v	file:
s_2_9	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_2_9[3] = { 0xC3, 0xA9, 'r' };$/;"	v	file:
s_3	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_3[] = { 'o' };$/;"	v	file:
s_3	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3[] = { 'y' };$/;"	v	file:
s_3	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_3[] = { 'i' };$/;"	v	file:
s_3	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_3[] = { 'I' };$/;"	v	file:
s_3	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_3[] = { 'U' };$/;"	v	file:
s_3	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_3[] = { 0xF2 };$/;"	v	file:
s_3	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3[] = { 'e' };$/;"	v	file:
s_3	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_3[] = { 0xF5 };$/;"	v	file:
s_3	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_3[] = { 'o' };$/;"	v	file:
s_3	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_3[] = { 'a' };$/;"	v	file:
s_3	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3[] = { 'I' };$/;"	v	file:
s_3	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_3[] = { 0xD1 };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_3[] = { 'o' };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3[] = { 'y' };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_3[] = { 'i' };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_3[] = { 'I' };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_3[] = { 'U' };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_3[] = { 'a' };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_3[] = { 0xC3, 0xB2 };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3[] = { 'e' };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_3[] = { 0xC3, 0xB5 };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3[] = { 'I' };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_3[] = { 0xD1, 0x8F };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_3[] = { 'o' };$/;"	v	file:
s_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_3[] = { 'i' };$/;"	v	file:
s_30	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_30[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_30	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_30[] = { 'a', 'n', 't' };$/;"	v	file:
s_30	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_30[] = { 'Y' };$/;"	v	file:
s_30	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_30[] = { 'a' };$/;"	v	file:
s_30	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_30[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_30	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_30[] = { 'a', 'n', 't' };$/;"	v	file:
s_30	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_30[] = { 'a' };$/;"	v	file:
s_30	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_30[] = { 'Y' };$/;"	v	file:
s_30	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_30[] = { 'u' };$/;"	v	file:
s_31	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_31[] = { 'a', 't', 'e' };$/;"	v	file:
s_31	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_31[] = { 'e', 'n', 't' };$/;"	v	file:
s_31	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_31[] = { 'y' };$/;"	v	file:
s_31	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_31[] = { 'e' };$/;"	v	file:
s_31	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_31[] = { 'a', 't', 'e' };$/;"	v	file:
s_31	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_31[] = { 'e', 'n', 't' };$/;"	v	file:
s_31	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_31[] = { 'e' };$/;"	v	file:
s_31	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_31[] = { 'y' };$/;"	v	file:
s_31	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_31[] = { 0xC3, 0xB6 };$/;"	v	file:
s_32	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_32[] = { 'a', 'l' };$/;"	v	file:
s_32	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_32[] = { 'e' };$/;"	v	file:
s_32	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_32[] = { 'Y' };$/;"	v	file:
s_32	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_32[] = { 'a' };$/;"	v	file:
s_32	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_32[] = { 'a', 'l' };$/;"	v	file:
s_32	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_32[] = { 'e' };$/;"	v	file:
s_32	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_32[] = { 'a' };$/;"	v	file:
s_32	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_32[] = { 'Y' };$/;"	v	file:
s_32	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_32[] = { 0xC3, 0xBC };$/;"	v	file:
s_33	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_33[] = { 'i', 'c' };$/;"	v	file:
s_33	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_33[] = { 's' };$/;"	v	file:
s_33	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_33[] = { 'Y' };$/;"	v	file:
s_33	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_33[] = { 'e' };$/;"	v	file:
s_33	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_33[] = { 'i', 'c' };$/;"	v	file:
s_33	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_33[] = { 's' };$/;"	v	file:
s_33	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_33[] = { 'e' };$/;"	v	file:
s_33	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_33[] = { 'Y' };$/;"	v	file:
s_33	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_33[] = { 0xC3, 0xBC };$/;"	v	file:
s_34	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_34[] = { 's' };$/;"	v	file:
s_34	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_34[] = { 's' };$/;"	v	file:
s_34	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_34[] = { 'y' };$/;"	v	file:
s_34	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_34[] = { 'a' };$/;"	v	file:
s_34	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_34[] = { 's' };$/;"	v	file:
s_34	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_34[] = { 's' };$/;"	v	file:
s_34	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_34[] = { 'a' };$/;"	v	file:
s_34	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_34[] = { 'y' };$/;"	v	file:
s_34	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_34[] = { 'a', 'd' };$/;"	v	file:
s_35	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_35[] = { 't' };$/;"	v	file:
s_35	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_35[] = { 't' };$/;"	v	file:
s_35	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_35[] = { 'e' };$/;"	v	file:
s_35	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_35[] = { 't' };$/;"	v	file:
s_35	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_35[] = { 't' };$/;"	v	file:
s_35	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_35[] = { 'e' };$/;"	v	file:
s_35	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_35[] = { 's', 'o', 'y', 'a', 'd' };$/;"	v	file:
s_36	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_36[] = { 'l' };$/;"	v	file:
s_36	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_36[] = { 'i' };$/;"	v	file:
s_36	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_36[] = { 'l' };$/;"	v	file:
s_36	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_36[] = { 'i' };$/;"	v	file:
s_37	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_37[] = { 's', 'k', 'i' };$/;"	v	file:
s_37	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_37[] = { 'g', 'u' };$/;"	v	file:
s_37	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_37[] = { 's', 'k', 'i' };$/;"	v	file:
s_37	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_37[] = { 'g', 'u' };$/;"	v	file:
s_38	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_38[] = { 's', 'k', 'y' };$/;"	v	file:
s_38	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_38[] = { 0xE9 };$/;"	v	file:
s_38	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_38[] = { 's', 'k', 'y' };$/;"	v	file:
s_38	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_38[] = { 0xC3, 0xA9 };$/;"	v	file:
s_39	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_39[] = { 'd', 'i', 'e' };$/;"	v	file:
s_39	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_39[] = { 0xE8 };$/;"	v	file:
s_39	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_39[] = { 'd', 'i', 'e' };$/;"	v	file:
s_39	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_39[] = { 0xC3, 0xA8 };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_3_0[3] = { 'e', 'n', 'e' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_3_0[3] = { 'l', 'l', 'e' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_3_0[2] = { 'i', 'c' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_3_0[2] = { 'i', 'g' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_3_0[4] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_0[4] = { 'a', 'n', 'c', 'i' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_3_0[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_3_0[2] = { 'i', 'c' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_3_0[2] = { 'a', 'l' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_0[3] = { 'i', 'c', 'a' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_3_0[2] = { 0xD3, 0xD1 };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_3_0[3] = { 'e', 'n', 'e' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_3_0[3] = { 'l', 'l', 'e' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_3_0[2] = { 'i', 'c' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_3_0[2] = { 'i', 'g' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_3_0[2] = { 'a', 'l' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_3_0[4] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_0[4] = { 'a', 'n', 'c', 'i' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_3_0[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_0[3] = { 'i', 'c', 'a' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_3_0[4] = { 0xD1, 0x81, 0xD1, 0x8C };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_3_0[2] = { 'i', 'c' };$/;"	v	file:
s_3_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_3_0[2] = { 'i', 'n' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_3_1[2] = { 's', 'e' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_1[2] = { 'b', 'b' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_3_1[3] = { 'i', 'n', 'e' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_3_1[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_3_1[4] = { 'l', 'i', 'c', 'h' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_3_1[4] = { 'e', 'n', 'd', 'o' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_1[4] = { 'e', 'n', 'c', 'i' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_3_1[4] = { 'a', 'v', 'e', 'l' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_3_1[2] = { 'a', 'd' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_3_1[2] = { 'e', 'l' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_1[5] = { 'a', 'b', 'i', 'l', 'a' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_3_1[2] = { 0xD3, 0xD8 };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_3_1[2] = { 's', 'e' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_1[2] = { 'b', 'b' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_3_1[3] = { 'i', 'n', 'e' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_3_1[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_3_1[4] = { 'l', 'i', 'c', 'h' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_3_1[2] = { 'e', 'l' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_3_1[4] = { 'e', 'n', 'd', 'o' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_1[4] = { 'e', 'n', 'c', 'i' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_3_1[4] = { 'a', 'v', 'e', 'l' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_1[5] = { 'a', 'b', 'i', 'l', 'a' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_3_1[4] = { 0xD1, 0x81, 0xD1, 0x8F };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_3_1[2] = { 'a', 'd' };$/;"	v	file:
s_3_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_3_1[2] = { 'u', 'n' };$/;"	v	file:
s_3_10	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_10[2] = { 'a', 't' };$/;"	v	file:
s_3_10	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_10[6] = { 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_3_10	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_10[2] = { 'i', 'c' };$/;"	v	file:
s_3_10	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_10[2] = { 'a', 't' };$/;"	v	file:
s_3_10	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_10[6] = { 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_3_10	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_10[2] = { 'i', 'c' };$/;"	v	file:
s_3_11	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_11[2] = { 't', 't' };$/;"	v	file:
s_3_11	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_11[7] = { 'a', 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_3_11	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_11[3] = { 'i', 'c', 'e' };$/;"	v	file:
s_3_11	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_11[2] = { 't', 't' };$/;"	v	file:
s_3_11	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_11[7] = { 'a', 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_3_11	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_11[3] = { 'i', 'c', 'e' };$/;"	v	file:
s_3_12	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_12[2] = { 'i', 'z' };$/;"	v	file:
s_3_12	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_12[5] = { 'a', 'l', 'i', 's', 'm' };$/;"	v	file:
s_3_12	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_12[5] = { 'a', 'b', 'i', 'l', 'e' };$/;"	v	file:
s_3_12	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_12[2] = { 'i', 'z' };$/;"	v	file:
s_3_12	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_12[5] = { 'a', 'l', 'i', 's', 'm' };$/;"	v	file:
s_3_12	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_12[5] = { 'a', 'b', 'i', 'l', 'e' };$/;"	v	file:
s_3_13	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_13[5] = { 'a', 't', 'i', 'o', 'n' };$/;"	v	file:
s_3_13	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_13[5] = { 'i', 'b', 'i', 'l', 'e' };$/;"	v	file:
s_3_13	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_13[5] = { 'a', 't', 'i', 'o', 'n' };$/;"	v	file:
s_3_13	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_13[5] = { 'i', 'b', 'i', 'l', 'e' };$/;"	v	file:
s_3_14	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_14[7] = { 'i', 'z', 'a', 't', 'i', 'o', 'n' };$/;"	v	file:
s_3_14	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_14[4] = { 'i', 's', 'm', 'e' };$/;"	v	file:
s_3_14	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_14[7] = { 'i', 'z', 'a', 't', 'i', 'o', 'n' };$/;"	v	file:
s_3_14	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_14[4] = { 'i', 's', 'm', 'e' };$/;"	v	file:
s_3_15	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_15[4] = { 'i', 'z', 'e', 'r' };$/;"	v	file:
s_3_15	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_15[4] = { 'i', 'u', 'n', 'e' };$/;"	v	file:
s_3_15	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_15[4] = { 'i', 'z', 'e', 'r' };$/;"	v	file:
s_3_15	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_15[4] = { 'i', 'u', 'n', 'e' };$/;"	v	file:
s_3_16	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_16[4] = { 'a', 't', 'o', 'r' };$/;"	v	file:
s_3_16	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_16[4] = { 'o', 'a', 's', 'e' };$/;"	v	file:
s_3_16	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_16[4] = { 'a', 't', 'o', 'r' };$/;"	v	file:
s_3_16	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_16[4] = { 'o', 'a', 's', 'e' };$/;"	v	file:
s_3_17	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_17[7] = { 'i', 'v', 'e', 'n', 'e', 's', 's' };$/;"	v	file:
s_3_17	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_17[3] = { 'a', 't', 'e' };$/;"	v	file:
s_3_17	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_17[7] = { 'i', 'v', 'e', 'n', 'e', 's', 's' };$/;"	v	file:
s_3_17	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_17[3] = { 'a', 't', 'e' };$/;"	v	file:
s_3_18	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_18[7] = { 'f', 'u', 'l', 'n', 'e', 's', 's' };$/;"	v	file:
s_3_18	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_18[5] = { 'i', 't', 'a', 't', 'e' };$/;"	v	file:
s_3_18	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_18[7] = { 'f', 'u', 'l', 'n', 'e', 's', 's' };$/;"	v	file:
s_3_18	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_18[5] = { 'i', 't', 'a', 't', 'e' };$/;"	v	file:
s_3_19	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_19[7] = { 'o', 'u', 's', 'n', 'e', 's', 's' };$/;"	v	file:
s_3_19	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_19[3] = { 'i', 't', 'e' };$/;"	v	file:
s_3_19	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_19[7] = { 'o', 'u', 's', 'n', 'e', 's', 's' };$/;"	v	file:
s_3_19	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_19[3] = { 'i', 't', 'e' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_3_2[2] = { 'e', 'n' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_2[2] = { 'd', 'd' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_3_2[2] = { 'i', 'v' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_3_2[2] = { 'a', 'r' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_2[4] = { 'a', 'b', 'l', 'i' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_3_2[4] = { 0xED, 'v', 'e', 'l' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_3_2[2] = { 'o', 's' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_2[5] = { 'i', 'b', 'i', 'l', 'a' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_3_2[2] = { 'e', 'n' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_2[2] = { 'd', 'd' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_3_2[2] = { 'i', 'v' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_3_2[2] = { 'a', 'r' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_2[4] = { 'a', 'b', 'l', 'i' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_3_2[5] = { 0xC3, 0xAD, 'v', 'e', 'l' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_2[5] = { 'i', 'b', 'i', 'l', 'a' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_3_2[2] = { 'o', 's' };$/;"	v	file:
s_3_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_3_2[3] = { 0xC4, 0xB1, 'n' };$/;"	v	file:
s_3_20	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_20[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_3_20	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_20[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_3_21	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_21[4] = { 'i', 's', 't', 'e' };$/;"	v	file:
s_3_21	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_21[4] = { 'i', 's', 't', 'e' };$/;"	v	file:
s_3_22	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_22[3] = { 'u', 't', 'e' };$/;"	v	file:
s_3_22	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_22[3] = { 'u', 't', 'e' };$/;"	v	file:
s_3_23	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_23[3] = { 'i', 'v', 'e' };$/;"	v	file:
s_3_23	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_23[3] = { 'i', 'v', 'e' };$/;"	v	file:
s_3_24	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_24[3] = { 'i', 'c', 'i' };$/;"	v	file:
s_3_24	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_24[3] = { 'i', 'c', 'i' };$/;"	v	file:
s_3_25	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_25[5] = { 'a', 'b', 'i', 'l', 'i' };$/;"	v	file:
s_3_25	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_25[5] = { 'a', 'b', 'i', 'l', 'i' };$/;"	v	file:
s_3_26	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_26[5] = { 'i', 'b', 'i', 'l', 'i' };$/;"	v	file:
s_3_26	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_26[5] = { 'i', 'b', 'i', 'l', 'i' };$/;"	v	file:
s_3_27	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_27[4] = { 'i', 'u', 'n', 'i' };$/;"	v	file:
s_3_27	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_27[4] = { 'i', 'u', 'n', 'i' };$/;"	v	file:
s_3_28	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_28[5] = { 'a', 't', 'o', 'r', 'i' };$/;"	v	file:
s_3_28	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_28[5] = { 'a', 't', 'o', 'r', 'i' };$/;"	v	file:
s_3_29	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_29[3] = { 'o', 's', 'i' };$/;"	v	file:
s_3_29	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_29[3] = { 'o', 's', 'i' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_3_3[5] = { 'h', 'e', 'd', 'e', 'n' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_3[2] = { 'f', 'f' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_3_3[2] = { 'e', 'r' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_3[3] = { 'e', 'l', 'i' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_3_3[2] = { 'i', 'v' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_3[4] = { 'o', 'a', 's', 'a' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_3_3[5] = { 'h', 'e', 'd', 'e', 'n' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_3[2] = { 'f', 'f' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_3_3[2] = { 'e', 'r' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_3[3] = { 'e', 'l', 'i' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_3[4] = { 'o', 'a', 's', 'a' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_3_3[2] = { 'i', 'v' };$/;"	v	file:
s_3_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_3_3[3] = { 0xC3, 0xBC, 'n' };$/;"	v	file:
s_3_30	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_30[3] = { 'a', 't', 'i' };$/;"	v	file:
s_3_30	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_30[3] = { 'a', 't', 'i' };$/;"	v	file:
s_3_31	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_31[5] = { 'i', 't', 'a', 't', 'i' };$/;"	v	file:
s_3_31	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_31[5] = { 'i', 't', 'a', 't', 'i' };$/;"	v	file:
s_3_32	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_32[3] = { 'i', 't', 'i' };$/;"	v	file:
s_3_32	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_32[3] = { 'i', 't', 'i' };$/;"	v	file:
s_3_33	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_33[4] = { 'a', 'n', 't', 'i' };$/;"	v	file:
s_3_33	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_33[4] = { 'a', 'n', 't', 'i' };$/;"	v	file:
s_3_34	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_34[4] = { 'i', 's', 't', 'i' };$/;"	v	file:
s_3_34	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_34[4] = { 'i', 's', 't', 'i' };$/;"	v	file:
s_3_35	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_35[3] = { 'u', 't', 'i' };$/;"	v	file:
s_3_35	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_35[3] = { 'u', 't', 'i' };$/;"	v	file:
s_3_36	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_36[4] = { 'i', 0xBA, 't', 'i' };$/;"	v	file:
s_3_36	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_36[5] = { 'i', 0xC5, 0x9F, 't', 'i' };$/;"	v	file:
s_3_37	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_37[3] = { 'i', 'v', 'i' };$/;"	v	file:
s_3_37	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_37[3] = { 'i', 'v', 'i' };$/;"	v	file:
s_3_38	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_38[3] = { 'o', 0xBA, 'i' };$/;"	v	file:
s_3_38	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_38[5] = { 'i', 't', 0xC4, 0x83, 'i' };$/;"	v	file:
s_3_39	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_39[4] = { 'i', 't', 0xE3, 'i' };$/;"	v	file:
s_3_39	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_39[4] = { 'o', 0xC5, 0x9F, 'i' };$/;"	v	file:
s_3_4	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_3_4[1] = { 's' };$/;"	v	file:
s_3_4	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_4[2] = { 'g', 'g' };$/;"	v	file:
s_3_4	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_3_4[2] = { 'i', 'r' };$/;"	v	file:
s_3_4	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_4[4] = { 'a', 'l', 'l', 'i' };$/;"	v	file:
s_3_4	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_4[3] = { 'a', 't', 'a' };$/;"	v	file:
s_3_4	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_3_4[1] = { 's' };$/;"	v	file:
s_3_4	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_4[2] = { 'g', 'g' };$/;"	v	file:
s_3_4	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_3_4[2] = { 'i', 'r' };$/;"	v	file:
s_3_4	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_4[4] = { 'a', 'l', 'l', 'i' };$/;"	v	file:
s_3_4	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_4[3] = { 'a', 't', 'a' };$/;"	v	file:
s_3_40	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_40[5] = { 'i', 't', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_3_40	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_40[7] = { 'i', 't', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_3_41	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_41[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_3_41	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_41[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_3_42	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_42[4] = { 'i', 'b', 'i', 'l' };$/;"	v	file:
s_3_42	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_42[4] = { 'i', 'b', 'i', 'l' };$/;"	v	file:
s_3_43	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_43[3] = { 'i', 's', 'm' };$/;"	v	file:
s_3_43	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_43[3] = { 'i', 's', 'm' };$/;"	v	file:
s_3_44	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_44[4] = { 'a', 't', 'o', 'r' };$/;"	v	file:
s_3_44	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_44[4] = { 'a', 't', 'o', 'r' };$/;"	v	file:
s_3_45	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_45[2] = { 'o', 's' };$/;"	v	file:
s_3_45	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_45[2] = { 'o', 's' };$/;"	v	file:
s_3_46	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_46[2] = { 'a', 't' };$/;"	v	file:
s_3_46	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_46[2] = { 'a', 't' };$/;"	v	file:
s_3_47	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_47[2] = { 'i', 't' };$/;"	v	file:
s_3_47	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_47[2] = { 'i', 't' };$/;"	v	file:
s_3_48	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_48[3] = { 'a', 'n', 't' };$/;"	v	file:
s_3_48	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_48[3] = { 'a', 'n', 't' };$/;"	v	file:
s_3_49	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_49[3] = { 'i', 's', 't' };$/;"	v	file:
s_3_49	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_49[3] = { 'i', 's', 't' };$/;"	v	file:
s_3_5	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_5[2] = { 'b', 'l' };$/;"	v	file:
s_3_5	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_5[5] = { 'o', 'u', 's', 'l', 'i' };$/;"	v	file:
s_3_5	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_5[3] = { 'i', 't', 'a' };$/;"	v	file:
s_3_5	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_5[2] = { 'b', 'l' };$/;"	v	file:
s_3_5	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_5[5] = { 'o', 'u', 's', 'l', 'i' };$/;"	v	file:
s_3_5	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_5[3] = { 'i', 't', 'a' };$/;"	v	file:
s_3_50	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_50[2] = { 'u', 't' };$/;"	v	file:
s_3_50	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_50[2] = { 'u', 't' };$/;"	v	file:
s_3_51	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_51[2] = { 'i', 'v' };$/;"	v	file:
s_3_51	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_51[2] = { 'i', 'v' };$/;"	v	file:
s_3_52	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_52[3] = { 'i', 'c', 0xE3 };$/;"	v	file:
s_3_52	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_52[4] = { 'i', 'c', 0xC4, 0x83 };$/;"	v	file:
s_3_53	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_53[5] = { 'a', 'b', 'i', 'l', 0xE3 };$/;"	v	file:
s_3_53	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_53[6] = { 'a', 'b', 'i', 'l', 0xC4, 0x83 };$/;"	v	file:
s_3_54	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_54[5] = { 'i', 'b', 'i', 'l', 0xE3 };$/;"	v	file:
s_3_54	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_54[6] = { 'i', 'b', 'i', 'l', 0xC4, 0x83 };$/;"	v	file:
s_3_55	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_55[4] = { 'o', 'a', 's', 0xE3 };$/;"	v	file:
s_3_55	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_55[5] = { 'o', 'a', 's', 0xC4, 0x83 };$/;"	v	file:
s_3_56	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_56[3] = { 'a', 't', 0xE3 };$/;"	v	file:
s_3_56	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_56[4] = { 'a', 't', 0xC4, 0x83 };$/;"	v	file:
s_3_57	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_57[3] = { 'i', 't', 0xE3 };$/;"	v	file:
s_3_57	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_57[4] = { 'i', 't', 0xC4, 0x83 };$/;"	v	file:
s_3_58	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_58[4] = { 'a', 'n', 't', 0xE3 };$/;"	v	file:
s_3_58	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_58[5] = { 'a', 'n', 't', 0xC4, 0x83 };$/;"	v	file:
s_3_59	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_59[4] = { 'i', 's', 't', 0xE3 };$/;"	v	file:
s_3_59	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_59[5] = { 'i', 's', 't', 0xC4, 0x83 };$/;"	v	file:
s_3_6	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_6[2] = { 'm', 'm' };$/;"	v	file:
s_3_6	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_6[5] = { 'e', 'n', 't', 'l', 'i' };$/;"	v	file:
s_3_6	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_6[4] = { 'a', 'n', 't', 'a' };$/;"	v	file:
s_3_6	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_6[2] = { 'm', 'm' };$/;"	v	file:
s_3_6	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_6[5] = { 'e', 'n', 't', 'l', 'i' };$/;"	v	file:
s_3_6	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_6[4] = { 'a', 'n', 't', 'a' };$/;"	v	file:
s_3_60	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_60[3] = { 'u', 't', 0xE3 };$/;"	v	file:
s_3_60	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_60[4] = { 'u', 't', 0xC4, 0x83 };$/;"	v	file:
s_3_61	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_61[3] = { 'i', 'v', 0xE3 };$/;"	v	file:
s_3_61	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_61[4] = { 'i', 'v', 0xC4, 0x83 };$/;"	v	file:
s_3_7	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_7[2] = { 'n', 'n' };$/;"	v	file:
s_3_7	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_7[5] = { 'a', 'l', 'i', 't', 'i' };$/;"	v	file:
s_3_7	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_7[4] = { 'i', 's', 't', 'a' };$/;"	v	file:
s_3_7	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_7[2] = { 'n', 'n' };$/;"	v	file:
s_3_7	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_7[5] = { 'a', 'l', 'i', 't', 'i' };$/;"	v	file:
s_3_7	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_7[4] = { 'i', 's', 't', 'a' };$/;"	v	file:
s_3_8	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_8[2] = { 'p', 'p' };$/;"	v	file:
s_3_8	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_8[6] = { 'b', 'i', 'l', 'i', 't', 'i' };$/;"	v	file:
s_3_8	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_8[3] = { 'u', 't', 'a' };$/;"	v	file:
s_3_8	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_8[2] = { 'p', 'p' };$/;"	v	file:
s_3_8	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_8[6] = { 'b', 'i', 'l', 'i', 't', 'i' };$/;"	v	file:
s_3_8	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_8[3] = { 'u', 't', 'a' };$/;"	v	file:
s_3_9	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_3_9[2] = { 'r', 'r' };$/;"	v	file:
s_3_9	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_3_9[5] = { 'i', 'v', 'i', 't', 'i' };$/;"	v	file:
s_3_9	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_3_9[3] = { 'i', 'v', 'a' };$/;"	v	file:
s_3_9	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_3_9[2] = { 'r', 'r' };$/;"	v	file:
s_3_9	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_3_9[5] = { 'i', 'v', 'i', 't', 'i' };$/;"	v	file:
s_3_9	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_3_9[3] = { 'i', 'v', 'a' };$/;"	v	file:
s_4	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_4[] = { 'u' };$/;"	v	file:
s_4	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_4[] = { 'Y' };$/;"	v	file:
s_4	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_4[] = { 'a' };$/;"	v	file:
s_4	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4[] = { 'y' };$/;"	v	file:
s_4	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_4[] = { 'y' };$/;"	v	file:
s_4	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_4[] = { 0xF9 };$/;"	v	file:
s_4	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_4[] = { 'e' };$/;"	v	file:
s_4	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_4[] = { 'l', 'o', 'g' };$/;"	v	file:
s_4	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_4[] = { 'u' };$/;"	v	file:
s_4	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4[] = { 'a' };$/;"	v	file:
s_4	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4[] = { 'i' };$/;"	v	file:
s_4	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4[] = { 0xC1 };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_4[] = { 'u' };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_4[] = { 'Y' };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_4[] = { 'a' };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4[] = { 'y' };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_4[] = { 'y' };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4[] = { 'a' };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_4[] = { 0xC3, 0xB9 };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_4[] = { 'e' };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_4[] = { 'l', 'o', 'g' };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4[] = { 'i' };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4[] = { 0xD0, 0xB0 };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_4[] = { 'u' };$/;"	v	file:
s_4	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_4[] = { 'o' };$/;"	v	file:
s_40	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_40[] = { 'l', 'i', 'e' };$/;"	v	file:
s_40	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_40[] = { 'e' };$/;"	v	file:
s_40	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_40[] = { 'l', 'i', 'e' };$/;"	v	file:
s_40	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_40[] = { 'e' };$/;"	v	file:
s_41	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_41[] = { 't', 'i', 'e' };$/;"	v	file:
s_41	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_41[] = { 'Y' };$/;"	v	file:
s_41	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_41[] = { 't', 'i', 'e' };$/;"	v	file:
s_41	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_41[] = { 'Y' };$/;"	v	file:
s_42	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_42[] = { 'i', 'd', 'l' };$/;"	v	file:
s_42	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_42[] = { 'i' };$/;"	v	file:
s_42	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_42[] = { 'i', 'd', 'l' };$/;"	v	file:
s_42	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_42[] = { 'i' };$/;"	v	file:
s_43	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_43[] = { 'g', 'e', 'n', 't', 'l' };$/;"	v	file:
s_43	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_43[] = { 0xE7 };$/;"	v	file:
s_43	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_43[] = { 'g', 'e', 'n', 't', 'l' };$/;"	v	file:
s_43	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_43[] = { 0xC3, 0xA7 };$/;"	v	file:
s_44	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_44[] = { 'u', 'g', 'l', 'i' };$/;"	v	file:
s_44	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_44[] = { 'c' };$/;"	v	file:
s_44	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_44[] = { 'u', 'g', 'l', 'i' };$/;"	v	file:
s_44	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_44[] = { 'c' };$/;"	v	file:
s_45	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_45[] = { 'e', 'a', 'r', 'l', 'i' };$/;"	v	file:
s_45	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_45[] = { 'e', 'a', 'r', 'l', 'i' };$/;"	v	file:
s_46	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_46[] = { 'o', 'n', 'l', 'i' };$/;"	v	file:
s_46	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_46[] = { 'o', 'n', 'l', 'i' };$/;"	v	file:
s_47	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_47[] = { 's', 'i', 'n', 'g', 'l' };$/;"	v	file:
s_47	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_47[] = { 's', 'i', 'n', 'g', 'l' };$/;"	v	file:
s_48	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_48[] = { 'Y' };$/;"	v	file:
s_48	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_48[] = { 'Y' };$/;"	v	file:
s_49	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_49[] = { 'y' };$/;"	v	file:
s_49	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_49[] = { 'y' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_4_0[3] = { 'e', 'n', 'd' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_4_0[2] = { 'e', 'd' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_4_0[3] = { 'n', 's', 'a' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_0[4] = { 'i', 'q', 'U', 'e' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_4_0[3] = { 'e', 'n', 'd' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_4_0[2] = { 'i', 'c' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_4_0[5] = { 'i', 'c', 'a', 't', 'e' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_4_0[2] = { 'i', 'c' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_4_0[4] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_0[2] = { 'b', 'a' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_0[2] = { 'e', 'a' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_0[1] = { 0xC0 };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_4_0[3] = { 'e', 'n', 'd' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_4_0[2] = { 'e', 'd' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_4_0[3] = { 'n', 's', 'a' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_0[4] = { 'i', 'q', 'U', 'e' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_4_0[3] = { 'e', 'n', 'd' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_0[2] = { 'b', 'a' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_4_0[2] = { 'i', 'c' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_4_0[5] = { 'i', 'c', 'a', 't', 'e' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_4_0[2] = { 'i', 'c' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_0[2] = { 'e', 'a' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_0[4] = { 0xD1, 0x8B, 0xD1, 0x82 };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_4_0[4] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_4_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_4_0[1] = { 'a' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_4_1[2] = { 'i', 'g' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_4_1[3] = { 'e', 'e', 'd' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_4_1[3] = { 'm', 'm', 'e' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_1[6] = { 'a', 't', 'r', 'i', 'c', 'e' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_4_1[2] = { 'i', 'g' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_4_1[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_4_1[5] = { 'a', 't', 'i', 'v', 'e' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_4_1[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_4_1[4] = { 'i', 'b', 'l', 'e' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_1[2] = { 'r', 'a' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_1[2] = { 'i', 'a' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_1[2] = { 0xD5, 0xC0 };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_4_1[2] = { 'i', 'g' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_4_1[3] = { 'e', 'e', 'd' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_4_1[3] = { 'm', 'm', 'e' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_1[6] = { 'a', 't', 'r', 'i', 'c', 'e' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_4_1[2] = { 'i', 'g' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_1[2] = { 'r', 'a' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_4_1[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_4_1[5] = { 'a', 't', 'i', 'v', 'e' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_4_1[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_1[2] = { 'i', 'a' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_1[4] = { 0xD1, 0x8E, 0xD1, 0x82 };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_4_1[4] = { 'i', 'b', 'l', 'e' };$/;"	v	file:
s_4_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_4_1[1] = { 'e' };$/;"	v	file:
s_4_10	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_10[2] = { 'i', 'f' };$/;"	v	file:
s_4_10	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_10[3] = { 'n', 0xE1, 'l' };$/;"	v	file:
s_4_10	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_10[2] = { 's', 'e' };$/;"	v	file:
s_4_10	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_10[4] = { 0xC5, 0xCA, 0xD4, 0xC5 };$/;"	v	file:
s_4_10	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_10[2] = { 'i', 'f' };$/;"	v	file:
s_4_10	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_10[4] = { 'b', 0xC5, 0x91, 'l' };$/;"	v	file:
s_4_10	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_10[2] = { 's', 'e' };$/;"	v	file:
s_4_10	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_10[6] = { 0xD1, 0x8B, 0xD1, 0x82, 0xD1, 0x8C };$/;"	v	file:
s_4_11	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_11[5] = { 'u', 's', 'i', 'o', 'n' };$/;"	v	file:
s_4_11	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_11[3] = { 'n', 0xE9, 'l' };$/;"	v	file:
s_4_11	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_11[3] = { 'a', 's', 'e' };$/;"	v	file:
s_4_11	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_11[4] = { 0xD5, 0xCA, 0xD4, 0xC5 };$/;"	v	file:
s_4_11	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_11[5] = { 'u', 's', 'i', 'o', 'n' };$/;"	v	file:
s_4_11	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_11[4] = { 'r', 0xC5, 0x91, 'l' };$/;"	v	file:
s_4_11	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_11[3] = { 'a', 's', 'e' };$/;"	v	file:
s_4_11	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_11[6] = { 0xD0, 0xB8, 0xD1, 0x82, 0xD1, 0x8C };$/;"	v	file:
s_4_12	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_12[5] = { 'a', 't', 'i', 'o', 'n' };$/;"	v	file:
s_4_12	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_12[3] = { 'b', 0xF3, 'l' };$/;"	v	file:
s_4_12	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_12[4] = { 's', 'e', 's', 'e' };$/;"	v	file:
s_4_12	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_12[2] = { 0xCC, 0xC9 };$/;"	v	file:
s_4_12	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_12[5] = { 'a', 't', 'i', 'o', 'n' };$/;"	v	file:
s_4_12	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_12[4] = { 't', 0xC5, 0x91, 'l' };$/;"	v	file:
s_4_12	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_12[4] = { 's', 'e', 's', 'e' };$/;"	v	file:
s_4_12	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_12[6] = { 0xD0, 0xB5, 0xD1, 0x88, 0xD1, 0x8C };$/;"	v	file:
s_4_13	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_13[5] = { 'u', 't', 'i', 'o', 'n' };$/;"	v	file:
s_4_13	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_13[3] = { 'r', 0xF3, 'l' };$/;"	v	file:
s_4_13	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_13[3] = { 'i', 's', 'e' };$/;"	v	file:
s_4_13	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_13[3] = { 0xC9, 0xCC, 0xC9 };$/;"	v	file:
s_4_13	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_13[5] = { 'u', 't', 'i', 'o', 'n' };$/;"	v	file:
s_4_13	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_13[4] = { 'n', 0xC3, 0xA1, 'l' };$/;"	v	file:
s_4_13	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_13[3] = { 'i', 's', 'e' };$/;"	v	file:
s_4_13	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_13[6] = { 0xD0, 0xB8, 0xD1, 0x88, 0xD1, 0x8C };$/;"	v	file:
s_4_14	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_14[5] = { 'a', 't', 'e', 'u', 'r' };$/;"	v	file:
s_4_14	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_14[3] = { 't', 0xF3, 'l' };$/;"	v	file:
s_4_14	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_14[3] = { 'u', 's', 'e' };$/;"	v	file:
s_4_14	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_14[3] = { 0xD9, 0xCC, 0xC9 };$/;"	v	file:
s_4_14	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_14[5] = { 'a', 't', 'e', 'u', 'r' };$/;"	v	file:
s_4_14	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_14[4] = { 'n', 0xC3, 0xA9, 'l' };$/;"	v	file:
s_4_14	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_14[3] = { 'u', 's', 'e' };$/;"	v	file:
s_4_14	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_14[2] = { 0xD1, 0x8E };$/;"	v	file:
s_4_15	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_15[5] = { 'i', 'q', 'U', 'e', 's' };$/;"	v	file:
s_4_15	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_15[3] = { 'b', 0xF5, 'l' };$/;"	v	file:
s_4_15	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_15[3] = { 0xE2, 's', 'e' };$/;"	v	file:
s_4_15	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_15[1] = { 0xCA };$/;"	v	file:
s_4_15	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_15[5] = { 'i', 'q', 'U', 'e', 's' };$/;"	v	file:
s_4_15	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_15[4] = { 'b', 0xC3, 0xB3, 'l' };$/;"	v	file:
s_4_15	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_15[4] = { 0xC3, 0xA2, 's', 'e' };$/;"	v	file:
s_4_15	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_15[4] = { 0xD1, 0x83, 0xD1, 0x8E };$/;"	v	file:
s_4_16	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_16[7] = { 'a', 't', 'r', 'i', 'c', 'e', 's' };$/;"	v	file:
s_4_16	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_16[3] = { 'r', 0xF5, 'l' };$/;"	v	file:
s_4_16	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_16[4] = { 'e', 0xBA, 't', 'e' };$/;"	v	file:
s_4_16	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_16[2] = { 0xC5, 0xCA };$/;"	v	file:
s_4_16	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_16[7] = { 'a', 't', 'r', 'i', 'c', 'e', 's' };$/;"	v	file:
s_4_16	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_16[4] = { 'r', 0xC3, 0xB3, 'l' };$/;"	v	file:
s_4_16	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_16[5] = { 'e', 0xC5, 0x9F, 't', 'e' };$/;"	v	file:
s_4_16	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_16[4] = { 0xD0, 0xBB, 0xD0, 0xB0 };$/;"	v	file:
s_4_17	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_17[5] = { 'a', 'n', 'c', 'e', 's' };$/;"	v	file:
s_4_17	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_17[3] = { 't', 0xF5, 'l' };$/;"	v	file:
s_4_17	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_17[4] = { 0xE3, 0xBA, 't', 'e' };$/;"	v	file:
s_4_17	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_17[2] = { 0xD5, 0xCA };$/;"	v	file:
s_4_17	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_17[5] = { 'a', 'n', 'c', 'e', 's' };$/;"	v	file:
s_4_17	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_17[4] = { 't', 0xC3, 0xB3, 'l' };$/;"	v	file:
s_4_17	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_17[6] = { 0xC4, 0x83, 0xC5, 0x9F, 't', 'e' };$/;"	v	file:
s_4_17	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_17[6] = { 0xD1, 0x8B, 0xD0, 0xBB, 0xD0, 0xB0 };$/;"	v	file:
s_4_18	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_18[5] = { 'e', 'n', 'c', 'e', 's' };$/;"	v	file:
s_4_18	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_18[2] = { 0xFC, 'l' };$/;"	v	file:
s_4_18	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_18[3] = { 'e', 'z', 'e' };$/;"	v	file:
s_4_18	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_18[1] = { 0xCC };$/;"	v	file:
s_4_18	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_18[5] = { 'e', 'n', 'c', 'e', 's' };$/;"	v	file:
s_4_18	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_18[3] = { 0xC3, 0xBC, 'l' };$/;"	v	file:
s_4_18	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_18[3] = { 'e', 'z', 'e' };$/;"	v	file:
s_4_18	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_18[6] = { 0xD0, 0xB8, 0xD0, 0xBB, 0xD0, 0xB0 };$/;"	v	file:
s_4_19	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_19[6] = { 'l', 'o', 'g', 'i', 'e', 's' };$/;"	v	file:
s_4_19	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_19[1] = { 'n' };$/;"	v	file:
s_4_19	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_19[2] = { 'a', 'i' };$/;"	v	file:
s_4_19	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_19[2] = { 0xC9, 0xCC };$/;"	v	file:
s_4_19	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_19[6] = { 'l', 'o', 'g', 'i', 'e', 's' };$/;"	v	file:
s_4_19	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_19[1] = { 'n' };$/;"	v	file:
s_4_19	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_19[2] = { 'a', 'i' };$/;"	v	file:
s_4_19	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_19[4] = { 0xD0, 0xBD, 0xD0, 0xB0 };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_4_2[3] = { 'i', 'n', 'g' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_4_2[3] = { 'i', 'n', 'g' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_4_2[3] = { 'n', 'n', 'e' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_2[4] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_4_2[3] = { 'u', 'n', 'g' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_4_2[2] = { 'o', 's' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_4_2[5] = { 'a', 'l', 'i', 'z', 'e' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_4_2[2] = { 'i', 'v' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_4_2[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_2[2] = { 'b', 'e' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_2[3] = { 'e', 's', 'c' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_2[2] = { 0xCC, 0xC1 };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_4_2[3] = { 'i', 'n', 'g' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_4_2[3] = { 'i', 'n', 'g' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_4_2[3] = { 'n', 'n', 'e' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_2[4] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_4_2[3] = { 'u', 'n', 'g' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_2[2] = { 'b', 'e' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_4_2[2] = { 'o', 's' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_4_2[5] = { 'a', 'l', 'i', 'z', 'e' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_4_2[2] = { 'i', 'v' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_2[3] = { 'e', 's', 'c' };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_2[6] = { 0xD1, 0x83, 0xD1, 0x8E, 0xD1, 0x82 };$/;"	v	file:
s_4_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_4_2[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_4_20	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_20[5] = { 'a', 'b', 'l', 'e', 's' };$/;"	v	file:
s_4_20	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_20[2] = { 'a', 'n' };$/;"	v	file:
s_4_20	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_20[3] = { 'e', 'a', 'i' };$/;"	v	file:
s_4_20	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_20[2] = { 0xD9, 0xCC };$/;"	v	file:
s_4_20	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_20[5] = { 'a', 'b', 'l', 'e', 's' };$/;"	v	file:
s_4_20	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_20[2] = { 'a', 'n' };$/;"	v	file:
s_4_20	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_20[3] = { 'e', 'a', 'i' };$/;"	v	file:
s_4_20	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_20[6] = { 0xD0, 0xB5, 0xD0, 0xBD, 0xD0, 0xB0 };$/;"	v	file:
s_4_21	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_21[5] = { 'i', 's', 'm', 'e', 's' };$/;"	v	file:
s_4_21	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_21[3] = { 'b', 'a', 'n' };$/;"	v	file:
s_4_21	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_21[3] = { 'i', 'a', 'i' };$/;"	v	file:
s_4_21	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_21[2] = { 0xC5, 0xCD };$/;"	v	file:
s_4_21	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_21[5] = { 'i', 's', 'm', 'e', 's' };$/;"	v	file:
s_4_21	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_21[3] = { 'b', 'a', 'n' };$/;"	v	file:
s_4_21	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_21[3] = { 'i', 'a', 'i' };$/;"	v	file:
s_4_21	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_21[6] = { 0xD0, 0xB5, 0xD1, 0x82, 0xD0, 0xB5 };$/;"	v	file:
s_4_22	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_22[5] = { 'e', 'u', 's', 'e', 's' };$/;"	v	file:
s_4_22	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_22[2] = { 'e', 'n' };$/;"	v	file:
s_4_22	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_22[3] = { 's', 'e', 'i' };$/;"	v	file:
s_4_22	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_22[2] = { 0xC9, 0xCD };$/;"	v	file:
s_4_22	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_22[5] = { 'e', 'u', 's', 'e', 's' };$/;"	v	file:
s_4_22	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_22[2] = { 'e', 'n' };$/;"	v	file:
s_4_22	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_22[3] = { 's', 'e', 'i' };$/;"	v	file:
s_4_22	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_22[6] = { 0xD0, 0xB8, 0xD1, 0x82, 0xD0, 0xB5 };$/;"	v	file:
s_4_23	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_23[5] = { 'i', 's', 't', 'e', 's' };$/;"	v	file:
s_4_23	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_23[3] = { 'b', 'e', 'n' };$/;"	v	file:
s_4_23	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_23[4] = { 'e', 0xBA, 't', 'i' };$/;"	v	file:
s_4_23	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_23[2] = { 0xD9, 0xCD };$/;"	v	file:
s_4_23	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_23[5] = { 'i', 's', 't', 'e', 's' };$/;"	v	file:
s_4_23	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_23[3] = { 'b', 'e', 'n' };$/;"	v	file:
s_4_23	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_23[5] = { 'e', 0xC5, 0x9F, 't', 'i' };$/;"	v	file:
s_4_23	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_23[6] = { 0xD0, 0xB9, 0xD1, 0x82, 0xD0, 0xB5 };$/;"	v	file:
s_4_24	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_24[4] = { 'i', 'v', 'e', 's' };$/;"	v	file:
s_4_24	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_24[6] = { 'k', 0xE9, 'p', 'p', 'e', 'n' };$/;"	v	file:
s_4_24	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_24[4] = { 0xE3, 0xBA, 't', 'i' };$/;"	v	file:
s_4_24	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_24[1] = { 0xCE };$/;"	v	file:
s_4_24	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_24[4] = { 'i', 'v', 'e', 's' };$/;"	v	file:
s_4_24	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_24[7] = { 'k', 0xC3, 0xA9, 'p', 'p', 'e', 'n' };$/;"	v	file:
s_4_24	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_24[6] = { 0xC4, 0x83, 0xC5, 0x9F, 't', 'i' };$/;"	v	file:
s_4_24	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_24[8] = { 0xD1, 0x83, 0xD0, 0xB9, 0xD1, 0x82, 0xD0, 0xB5 };$/;"	v	file:
s_4_25	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_25[3] = { 'i', 'f', 's' };$/;"	v	file:
s_4_25	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_25[2] = { 'o', 'n' };$/;"	v	file:
s_4_25	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_25[2] = { 'u', 'i' };$/;"	v	file:
s_4_25	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_25[2] = { 0xC5, 0xCE };$/;"	v	file:
s_4_25	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_25[3] = { 'i', 'f', 's' };$/;"	v	file:
s_4_25	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_25[2] = { 'o', 'n' };$/;"	v	file:
s_4_25	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_25[2] = { 'u', 'i' };$/;"	v	file:
s_4_25	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_25[8] = { 0xD0, 0xB5, 0xD0, 0xB9, 0xD1, 0x82, 0xD0, 0xB5 };$/;"	v	file:
s_4_26	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_26[6] = { 'u', 's', 'i', 'o', 'n', 's' };$/;"	v	file:
s_4_26	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_26[2] = { 0xF6, 'n' };$/;"	v	file:
s_4_26	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_26[3] = { 'e', 'z', 'i' };$/;"	v	file:
s_4_26	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_26[2] = { 0xCC, 0xCF };$/;"	v	file:
s_4_26	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_26[6] = { 'u', 's', 'i', 'o', 'n', 's' };$/;"	v	file:
s_4_26	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_26[3] = { 0xC3, 0xB6, 'n' };$/;"	v	file:
s_4_26	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_26[3] = { 'e', 'z', 'i' };$/;"	v	file:
s_4_26	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_26[4] = { 0xD0, 0xBB, 0xD0, 0xB8 };$/;"	v	file:
s_4_27	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_27[6] = { 'a', 't', 'i', 'o', 'n', 's' };$/;"	v	file:
s_4_27	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_27[4] = { 'k', 0xE9, 'p', 'p' };$/;"	v	file:
s_4_27	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_27[3] = { 'a', 0xBA, 'i' };$/;"	v	file:
s_4_27	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_27[3] = { 0xC9, 0xCC, 0xCF };$/;"	v	file:
s_4_27	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_27[6] = { 'a', 't', 'i', 'o', 'n', 's' };$/;"	v	file:
s_4_27	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_27[5] = { 'k', 0xC3, 0xA9, 'p', 'p' };$/;"	v	file:
s_4_27	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_27[4] = { 'a', 0xC5, 0x9F, 'i' };$/;"	v	file:
s_4_27	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_27[6] = { 0xD1, 0x8B, 0xD0, 0xBB, 0xD0, 0xB8 };$/;"	v	file:
s_4_28	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_28[6] = { 'u', 't', 'i', 'o', 'n', 's' };$/;"	v	file:
s_4_28	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_28[3] = { 'k', 'o', 'r' };$/;"	v	file:
s_4_28	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_28[4] = { 's', 'e', 0xBA, 'i' };$/;"	v	file:
s_4_28	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_28[3] = { 0xD9, 0xCC, 0xCF };$/;"	v	file:
s_4_28	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_28[6] = { 'u', 't', 'i', 'o', 'n', 's' };$/;"	v	file:
s_4_28	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_28[3] = { 'k', 'o', 'r' };$/;"	v	file:
s_4_28	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_28[5] = { 's', 'e', 0xC5, 0x9F, 'i' };$/;"	v	file:
s_4_28	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_28[6] = { 0xD0, 0xB8, 0xD0, 0xBB, 0xD0, 0xB8 };$/;"	v	file:
s_4_29	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_29[6] = { 'a', 't', 'e', 'u', 'r', 's' };$/;"	v	file:
s_4_29	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_29[1] = { 't' };$/;"	v	file:
s_4_29	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_29[5] = { 'a', 's', 'e', 0xBA, 'i' };$/;"	v	file:
s_4_29	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_29[2] = { 0xCE, 0xCF };$/;"	v	file:
s_4_29	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_29[6] = { 'a', 't', 'e', 'u', 'r', 's' };$/;"	v	file:
s_4_29	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_29[1] = { 't' };$/;"	v	file:
s_4_29	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_29[6] = { 'a', 's', 'e', 0xC5, 0x9F, 'i' };$/;"	v	file:
s_4_29	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_29[2] = { 0xD0, 0xB9 };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_4_3[4] = { 'l', 'i', 'j', 'k' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_4_3[4] = { 'e', 'd', 'l', 'y' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_4_3[2] = { 'n', 'i' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_3[4] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_4_3[4] = { 'l', 'i', 'c', 'h' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_4_3[2] = { 'i', 'v' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_4_3[5] = { 'i', 'c', 'i', 't', 'i' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_3[2] = { 'r', 'e' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_3[3] = { 0xE3, 's', 'c' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_3[3] = { 0xC9, 0xCC, 0xC1 };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_4_3[4] = { 'l', 'i', 'j', 'k' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_4_3[4] = { 'e', 'd', 'l', 'y' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_4_3[2] = { 'n', 'i' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_3[4] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_4_3[4] = { 'l', 'i', 'c', 'h' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_3[2] = { 'r', 'e' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_4_3[2] = { 'i', 'v' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_4_3[5] = { 'i', 'c', 'i', 't', 'i' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_3[4] = { 0xC4, 0x83, 's', 'c' };$/;"	v	file:
s_4_3	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_3[4] = { 0xD1, 0x8F, 0xD1, 0x82 };$/;"	v	file:
s_4_30	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_30[5] = { 'm', 'e', 'n', 't', 's' };$/;"	v	file:
s_4_30	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_30[2] = { 'a', 't' };$/;"	v	file:
s_4_30	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_30[6] = { 's', 'e', 's', 'e', 0xBA, 'i' };$/;"	v	file:
s_4_30	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_30[3] = { 0xC5, 0xCE, 0xCF };$/;"	v	file:
s_4_30	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_30[5] = { 'm', 'e', 'n', 't', 's' };$/;"	v	file:
s_4_30	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_30[2] = { 'a', 't' };$/;"	v	file:
s_4_30	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_30[7] = { 's', 'e', 's', 'e', 0xC5, 0x9F, 'i' };$/;"	v	file:
s_4_30	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_30[4] = { 0xD1, 0x83, 0xD0, 0xB9 };$/;"	v	file:
s_4_31	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_31[6] = { 'e', 'm', 'e', 'n', 't', 's' };$/;"	v	file:
s_4_31	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_31[2] = { 'e', 't' };$/;"	v	file:
s_4_31	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_31[5] = { 'i', 's', 'e', 0xBA, 'i' };$/;"	v	file:
s_4_31	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_31[3] = { 0xCE, 0xCE, 0xCF };$/;"	v	file:
s_4_31	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_31[6] = { 'e', 'm', 'e', 'n', 't', 's' };$/;"	v	file:
s_4_31	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_31[2] = { 'e', 't' };$/;"	v	file:
s_4_31	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_31[6] = { 'i', 's', 'e', 0xC5, 0x9F, 'i' };$/;"	v	file:
s_4_31	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_31[4] = { 0xD0, 0xB5, 0xD0, 0xB9 };$/;"	v	file:
s_4_32	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_32[9] = { 'i', 's', 's', 'e', 'm', 'e', 'n', 't', 's' };$/;"	v	file:
s_4_32	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_32[4] = { 'k', 0xE9, 'n', 't' };$/;"	v	file:
s_4_32	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_32[5] = { 'u', 's', 'e', 0xBA, 'i' };$/;"	v	file:
s_4_32	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_32[2] = { 0xC0, 0xD4 };$/;"	v	file:
s_4_32	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_32[9] = { 'i', 's', 's', 'e', 'm', 'e', 'n', 't', 's' };$/;"	v	file:
s_4_32	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_32[5] = { 'k', 0xC3, 0xA9, 'n', 't' };$/;"	v	file:
s_4_32	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_32[6] = { 'u', 's', 'e', 0xC5, 0x9F, 'i' };$/;"	v	file:
s_4_32	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_32[2] = { 0xD0, 0xBB };$/;"	v	file:
s_4_33	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_33[4] = { 'i', 't', 0xE9, 's' };$/;"	v	file:
s_4_33	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_33[6] = { 'a', 'n', 'k', 0xE9, 'n', 't' };$/;"	v	file:
s_4_33	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_33[5] = { 0xE2, 's', 'e', 0xBA, 'i' };$/;"	v	file:
s_4_33	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_33[3] = { 0xD5, 0xC0, 0xD4 };$/;"	v	file:
s_4_33	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_33[5] = { 'i', 't', 0xC3, 0xA9, 's' };$/;"	v	file:
s_4_33	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_33[7] = { 'a', 'n', 'k', 0xC3, 0xA9, 'n', 't' };$/;"	v	file:
s_4_33	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_33[7] = { 0xC3, 0xA2, 's', 'e', 0xC5, 0x9F, 'i' };$/;"	v	file:
s_4_33	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_33[4] = { 0xD1, 0x8B, 0xD0, 0xBB };$/;"	v	file:
s_4_34	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_34[4] = { 'm', 'e', 'n', 't' };$/;"	v	file:
s_4_34	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_34[6] = { 'e', 'n', 'k', 0xE9, 'n', 't' };$/;"	v	file:
s_4_34	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_34[3] = { 'i', 0xBA, 'i' };$/;"	v	file:
s_4_34	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_34[2] = { 0xC5, 0xD4 };$/;"	v	file:
s_4_34	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_34[4] = { 'm', 'e', 'n', 't' };$/;"	v	file:
s_4_34	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_34[7] = { 'e', 'n', 'k', 0xC3, 0xA9, 'n', 't' };$/;"	v	file:
s_4_34	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_34[4] = { 'i', 0xC5, 0x9F, 'i' };$/;"	v	file:
s_4_34	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_34[4] = { 0xD0, 0xB8, 0xD0, 0xBB };$/;"	v	file:
s_4_35	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_35[5] = { 'e', 'm', 'e', 'n', 't' };$/;"	v	file:
s_4_35	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_35[6] = { 'o', 'n', 'k', 0xE9, 'n', 't' };$/;"	v	file:
s_4_35	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_35[3] = { 'u', 0xBA, 'i' };$/;"	v	file:
s_4_35	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_35[3] = { 0xD5, 0xC5, 0xD4 };$/;"	v	file:
s_4_35	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_35[5] = { 'e', 'm', 'e', 'n', 't' };$/;"	v	file:
s_4_35	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_35[7] = { 'o', 'n', 'k', 0xC3, 0xA9, 'n', 't' };$/;"	v	file:
s_4_35	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_35[4] = { 'u', 0xC5, 0x9F, 'i' };$/;"	v	file:
s_4_35	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_35[4] = { 0xD1, 0x8B, 0xD0, 0xBC };$/;"	v	file:
s_4_36	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_36[8] = { 'i', 's', 's', 'e', 'm', 'e', 'n', 't' };$/;"	v	file:
s_4_36	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_36[2] = { 'o', 't' };$/;"	v	file:
s_4_36	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_36[3] = { 0xE2, 0xBA, 'i' };$/;"	v	file:
s_4_36	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_36[2] = { 0xC9, 0xD4 };$/;"	v	file:
s_4_36	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_36[8] = { 'i', 's', 's', 'e', 'm', 'e', 'n', 't' };$/;"	v	file:
s_4_36	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_36[2] = { 'o', 't' };$/;"	v	file:
s_4_36	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_36[5] = { 0xC3, 0xA2, 0xC5, 0x9F, 'i' };$/;"	v	file:
s_4_36	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_36[4] = { 0xD0, 0xB5, 0xD0, 0xBC };$/;"	v	file:
s_4_37	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_37[6] = { 'a', 'm', 'm', 'e', 'n', 't' };$/;"	v	file:
s_4_37	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_37[3] = { 0xE9, 'r', 't' };$/;"	v	file:
s_4_37	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_37[2] = { 0xE2, 'i' };$/;"	v	file:
s_4_37	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_37[2] = { 0xD1, 0xD4 };$/;"	v	file:
s_4_37	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_37[6] = { 'a', 'm', 'm', 'e', 'n', 't' };$/;"	v	file:
s_4_37	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_37[4] = { 0xC3, 0xA9, 'r', 't' };$/;"	v	file:
s_4_37	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_37[3] = { 0xC3, 0xA2, 'i' };$/;"	v	file:
s_4_37	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_37[4] = { 0xD0, 0xB8, 0xD0, 0xBC };$/;"	v	file:
s_4_38	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_38[6] = { 'e', 'm', 'm', 'e', 'n', 't' };$/;"	v	file:
s_4_38	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_38[2] = { 0xF6, 't' };$/;"	v	file:
s_4_38	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_38[3] = { 'a', 0xFE, 'i' };$/;"	v	file:
s_4_38	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_38[2] = { 0xD9, 0xD4 };$/;"	v	file:
s_4_38	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_38[6] = { 'e', 'm', 'm', 'e', 'n', 't' };$/;"	v	file:
s_4_38	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_38[3] = { 0xC3, 0xB6, 't' };$/;"	v	file:
s_4_38	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_38[4] = { 'a', 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_38	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_38[2] = { 0xD0, 0xBD };$/;"	v	file:
s_4_39	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_39[3] = { 'a', 'u', 'x' };$/;"	v	file:
s_4_39	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_39[3] = { 'h', 'e', 'z' };$/;"	v	file:
s_4_39	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_39[4] = { 'e', 'a', 0xFE, 'i' };$/;"	v	file:
s_4_39	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_39[2] = { 0xD4, 0xD8 };$/;"	v	file:
s_4_39	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_39[3] = { 'a', 'u', 'x' };$/;"	v	file:
s_4_39	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_39[3] = { 'h', 'e', 'z' };$/;"	v	file:
s_4_39	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_39[5] = { 'e', 'a', 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_39	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_39[4] = { 0xD0, 0xB5, 0xD0, 0xBD };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_4_4[4] = { 'b', 'a', 'a', 'r' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_4_4[5] = { 'e', 'e', 'd', 'l', 'y' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_4_4[2] = { 's', 'i' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_4[5] = { 'l', 'o', 'g', 'i', 'e' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_4_4[4] = { 'i', 's', 'c', 'h' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_4_4[4] = { 'i', 'c', 'a', 'l' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_4[2] = { 'i', 'g' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_4[3] = { 'i', 'n', 'd' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_4[3] = { 0xD9, 0xCC, 0xC1 };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_4_4[4] = { 'b', 'a', 'a', 'r' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_4_4[5] = { 'e', 'e', 'd', 'l', 'y' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_4_4[2] = { 's', 'i' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_4[5] = { 'l', 'o', 'g', 'i', 'e' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_4_4[4] = { 'i', 's', 'c', 'h' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_4[2] = { 'i', 'g' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_4_4[4] = { 'i', 'c', 'a', 'l' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_4[3] = { 'i', 'n', 'd' };$/;"	v	file:
s_4_4	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_4[4] = { 0xD0, 0xB5, 0xD1, 0x82 };$/;"	v	file:
s_4_40	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_40[4] = { 'e', 'a', 'u', 'x' };$/;"	v	file:
s_4_40	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_40[3] = { 'h', 'o', 'z' };$/;"	v	file:
s_4_40	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_40[4] = { 'i', 'a', 0xFE, 'i' };$/;"	v	file:
s_4_40	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_40[3] = { 0xC9, 0xD4, 0xD8 };$/;"	v	file:
s_4_40	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_40[4] = { 'e', 'a', 'u', 'x' };$/;"	v	file:
s_4_40	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_40[3] = { 'h', 'o', 'z' };$/;"	v	file:
s_4_40	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_40[5] = { 'i', 'a', 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_40	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_40[4] = { 0xD0, 0xBB, 0xD0, 0xBE };$/;"	v	file:
s_4_41	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_41[3] = { 'e', 'u', 'x' };$/;"	v	file:
s_4_41	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_41[3] = { 'h', 0xF6, 'z' };$/;"	v	file:
s_4_41	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_41[3] = { 'e', 0xFE, 'i' };$/;"	v	file:
s_4_41	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_41[3] = { 0xD9, 0xD4, 0xD8 };$/;"	v	file:
s_4_41	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_41[3] = { 'e', 'u', 'x' };$/;"	v	file:
s_4_41	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_41[4] = { 'h', 0xC3, 0xB6, 'z' };$/;"	v	file:
s_4_41	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_41[4] = { 'e', 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_41	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_41[6] = { 0xD1, 0x8B, 0xD0, 0xBB, 0xD0, 0xBE };$/;"	v	file:
s_4_42	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_42[3] = { 'i', 't', 0xE9 };$/;"	v	file:
s_4_42	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_42[2] = { 'v', 0xE1 };$/;"	v	file:
s_4_42	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_42[3] = { 'i', 0xFE, 'i' };$/;"	v	file:
s_4_42	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_42[3] = { 0xC5, 0xDB, 0xD8 };$/;"	v	file:
s_4_42	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_42[4] = { 'i', 't', 0xC3, 0xA9 };$/;"	v	file:
s_4_42	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_42[3] = { 'v', 0xC3, 0xA1 };$/;"	v	file:
s_4_42	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_42[4] = { 'i', 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_42	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_42[6] = { 0xD0, 0xB8, 0xD0, 0xBB, 0xD0, 0xBE };$/;"	v	file:
s_4_43	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_43[2] = { 'v', 0xE9 };$/;"	v	file:
s_4_43	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_43[3] = { 0xE2, 0xFE, 'i' };$/;"	v	file:
s_4_43	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_43[3] = { 0xC9, 0xDB, 0xD8 };$/;"	v	file:
s_4_43	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_43[3] = { 'v', 0xC3, 0xA9 };$/;"	v	file:
s_4_43	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_43[7] = { 'a', 'r', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_43	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_43[4] = { 0xD0, 0xBD, 0xD0, 0xBE };$/;"	v	file:
s_4_44	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_44[5] = { 'a', 'r', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_4_44	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_44[2] = { 0xCE, 0xD9 };$/;"	v	file:
s_4_44	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_44[8] = { 's', 'e', 'r', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_44	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_44[6] = { 0xD0, 0xB5, 0xD0, 0xBD, 0xD0, 0xBE };$/;"	v	file:
s_4_45	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_45[6] = { 's', 'e', 'r', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_4_45	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_45[3] = { 0xC5, 0xCE, 0xD9 };$/;"	v	file:
s_4_45	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_45[9] = { 'a', 's', 'e', 'r', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_45	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_45[6] = { 0xD0, 0xBD, 0xD0, 0xBD, 0xD0, 0xBE };$/;"	v	file:
s_4_46	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_46[7] = { 'a', 's', 'e', 'r', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_4_46	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_46[10] = { 's', 'e', 's', 'e', 'r', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_47	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_47[8] = { 's', 'e', 's', 'e', 'r', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_4_47	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_47[9] = { 'i', 's', 'e', 'r', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_48	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_48[7] = { 'i', 's', 'e', 'r', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_4_48	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_48[9] = { 'u', 's', 'e', 'r', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_49	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_49[7] = { 'u', 's', 'e', 'r', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_4_49	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_49[10] = { 0xC3, 0xA2, 's', 'e', 'r', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_4_5[3] = { 'b', 'a', 'r' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_4_5[5] = { 'i', 'n', 'g', 'l', 'y' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_4_5[2] = { 'a', 'n' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_5[4] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_4_5[2] = { 'i', 'k' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_4_5[3] = { 'f', 'u', 'l' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_5[3] = { 'n', 'a', 'k' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_5[3] = { 0xE2, 'n', 'd' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_5[2] = { 0xCE, 0xC1 };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_4_5[3] = { 'b', 'a', 'r' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_4_5[5] = { 'i', 'n', 'g', 'l', 'y' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_4_5[2] = { 'a', 'n' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_5[4] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_4_5[2] = { 'i', 'k' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_5[3] = { 'n', 'a', 'k' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_4_5[3] = { 'f', 'u', 'l' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_5[4] = { 0xC3, 0xA2, 'n', 'd' };$/;"	v	file:
s_4_5	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_5[6] = { 0xD1, 0x83, 0xD0, 0xB5, 0xD1, 0x82 };$/;"	v	file:
s_4_50	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_50[7] = { 0xE2, 's', 'e', 'r', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_4_50	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_50[7] = { 'i', 'r', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_51	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_51[5] = { 'i', 'r', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_4_51	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_51[7] = { 'u', 'r', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_52	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_52[5] = { 'u', 'r', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_4_52	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_52[8] = { 0xC3, 0xA2, 'r', 0xC4, 0x83, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_53	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_53[5] = { 0xE2, 'r', 0xE3, 0xFE, 'i' };$/;"	v	file:
s_4_53	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_53[5] = { 0xC3, 0xA2, 0xC5, 0xA3, 'i' };$/;"	v	file:
s_4_54	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_54[2] = { 'a', 'm' };$/;"	v	file:
s_4_54	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_54[2] = { 'a', 'm' };$/;"	v	file:
s_4_55	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_55[3] = { 'e', 'a', 'm' };$/;"	v	file:
s_4_55	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_55[3] = { 'e', 'a', 'm' };$/;"	v	file:
s_4_56	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_56[3] = { 'i', 'a', 'm' };$/;"	v	file:
s_4_56	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_56[3] = { 'i', 'a', 'm' };$/;"	v	file:
s_4_57	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_57[2] = { 'e', 'm' };$/;"	v	file:
s_4_57	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_57[2] = { 'e', 'm' };$/;"	v	file:
s_4_58	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_58[4] = { 'a', 's', 'e', 'm' };$/;"	v	file:
s_4_58	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_58[4] = { 'a', 's', 'e', 'm' };$/;"	v	file:
s_4_59	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_59[5] = { 's', 'e', 's', 'e', 'm' };$/;"	v	file:
s_4_59	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_59[5] = { 's', 'e', 's', 'e', 'm' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_4_6[2] = { 'e', 'n' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_6[4] = { 'i', 's', 'm', 'e' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_4_6[4] = { 'h', 'e', 'i', 't' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_4_6[4] = { 'n', 'e', 's', 's' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_6[3] = { 'n', 'e', 'k' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_6[3] = { 'a', 'r', 'e' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_6[3] = { 0xC5, 0xCE, 0xC1 };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_4_6[2] = { 'e', 'n' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_6[4] = { 'i', 's', 'm', 'e' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_4_6[4] = { 'h', 'e', 'i', 't' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_6[3] = { 'n', 'e', 'k' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_4_6[4] = { 'n', 'e', 's', 's' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_6[3] = { 'a', 'r', 'e' };$/;"	v	file:
s_4_6	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_6[4] = { 0xD0, 0xB8, 0xD1, 0x82 };$/;"	v	file:
s_4_60	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_60[4] = { 'i', 's', 'e', 'm' };$/;"	v	file:
s_4_60	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_60[4] = { 'i', 's', 'e', 'm' };$/;"	v	file:
s_4_61	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_61[4] = { 'u', 's', 'e', 'm' };$/;"	v	file:
s_4_61	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_61[4] = { 'u', 's', 'e', 'm' };$/;"	v	file:
s_4_62	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_62[4] = { 0xE2, 's', 'e', 'm' };$/;"	v	file:
s_4_62	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_62[5] = { 0xC3, 0xA2, 's', 'e', 'm' };$/;"	v	file:
s_4_63	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_63[2] = { 'i', 'm' };$/;"	v	file:
s_4_63	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_63[2] = { 'i', 'm' };$/;"	v	file:
s_4_64	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_64[2] = { 0xE2, 'm' };$/;"	v	file:
s_4_64	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_64[3] = { 0xC4, 0x83, 'm' };$/;"	v	file:
s_4_65	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_65[2] = { 0xE3, 'm' };$/;"	v	file:
s_4_65	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_65[5] = { 'a', 'r', 0xC4, 0x83, 'm' };$/;"	v	file:
s_4_66	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_66[4] = { 'a', 'r', 0xE3, 'm' };$/;"	v	file:
s_4_66	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_66[6] = { 's', 'e', 'r', 0xC4, 0x83, 'm' };$/;"	v	file:
s_4_67	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_67[5] = { 's', 'e', 'r', 0xE3, 'm' };$/;"	v	file:
s_4_67	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_67[7] = { 'a', 's', 'e', 'r', 0xC4, 0x83, 'm' };$/;"	v	file:
s_4_68	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_68[6] = { 'a', 's', 'e', 'r', 0xE3, 'm' };$/;"	v	file:
s_4_68	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_68[8] = { 's', 'e', 's', 'e', 'r', 0xC4, 0x83, 'm' };$/;"	v	file:
s_4_69	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_69[7] = { 's', 'e', 's', 'e', 'r', 0xE3, 'm' };$/;"	v	file:
s_4_69	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_69[7] = { 'i', 's', 'e', 'r', 0xC4, 0x83, 'm' };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_4_7[2] = { 0xE4, 'n' };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_7[4] = { 'e', 'u', 's', 'e' };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_4_7[4] = { 'k', 'e', 'i', 't' };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_7[3] = { 'v', 'a', 'l' };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_7[3] = { 'e', 'r', 'e' };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_7[3] = { 0xC5, 0xD4, 0xC5 };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_4_7[3] = { 0xC3, 0xA4, 'n' };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_7[4] = { 'e', 'u', 's', 'e' };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_4_7[4] = { 'k', 'e', 'i', 't' };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_7[3] = { 'v', 'a', 'l' };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_7[3] = { 'e', 'r', 'e' };$/;"	v	file:
s_4_7	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_7[4] = { 0xD0, 0xBD, 0xD1, 0x8B };$/;"	v	file:
s_4_70	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_70[6] = { 'i', 's', 'e', 'r', 0xE3, 'm' };$/;"	v	file:
s_4_70	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_70[7] = { 'u', 's', 'e', 'r', 0xC4, 0x83, 'm' };$/;"	v	file:
s_4_71	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_71[6] = { 'u', 's', 'e', 'r', 0xE3, 'm' };$/;"	v	file:
s_4_71	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_71[8] = { 0xC3, 0xA2, 's', 'e', 'r', 0xC4, 0x83, 'm' };$/;"	v	file:
s_4_72	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_72[6] = { 0xE2, 's', 'e', 'r', 0xE3, 'm' };$/;"	v	file:
s_4_72	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_72[5] = { 'i', 'r', 0xC4, 0x83, 'm' };$/;"	v	file:
s_4_73	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_73[4] = { 'i', 'r', 0xE3, 'm' };$/;"	v	file:
s_4_73	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_73[5] = { 'u', 'r', 0xC4, 0x83, 'm' };$/;"	v	file:
s_4_74	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_74[4] = { 'u', 'r', 0xE3, 'm' };$/;"	v	file:
s_4_74	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_74[6] = { 0xC3, 0xA2, 'r', 0xC4, 0x83, 'm' };$/;"	v	file:
s_4_75	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_75[4] = { 0xE2, 'r', 0xE3, 'm' };$/;"	v	file:
s_4_75	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_75[3] = { 0xC3, 0xA2, 'm' };$/;"	v	file:
s_4_76	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_76[2] = { 'a', 'u' };$/;"	v	file:
s_4_76	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_76[2] = { 'a', 'u' };$/;"	v	file:
s_4_77	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_77[3] = { 'e', 'a', 'u' };$/;"	v	file:
s_4_77	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_77[3] = { 'e', 'a', 'u' };$/;"	v	file:
s_4_78	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_78[3] = { 'i', 'a', 'u' };$/;"	v	file:
s_4_78	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_78[3] = { 'i', 'a', 'u' };$/;"	v	file:
s_4_79	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_79[4] = { 'i', 'n', 'd', 'u' };$/;"	v	file:
s_4_79	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_79[4] = { 'i', 'n', 'd', 'u' };$/;"	v	file:
s_4_8	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_4_8[3] = { 'n', 's', 0xE4 };$/;"	v	file:
s_4_8	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_8[4] = { 'i', 's', 't', 'e' };$/;"	v	file:
s_4_8	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_8[3] = { 'v', 'e', 'l' };$/;"	v	file:
s_4_8	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_8[3] = { 'i', 'r', 'e' };$/;"	v	file:
s_4_8	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_8[3] = { 0xC9, 0xD4, 0xC5 };$/;"	v	file:
s_4_8	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_4_8[4] = { 'n', 's', 0xC3, 0xA4 };$/;"	v	file:
s_4_8	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_8[4] = { 'i', 's', 't', 'e' };$/;"	v	file:
s_4_8	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_8[3] = { 'v', 'e', 'l' };$/;"	v	file:
s_4_8	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_8[3] = { 'i', 'r', 'e' };$/;"	v	file:
s_4_8	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_8[6] = { 0xD0, 0xB5, 0xD0, 0xBD, 0xD1, 0x8B };$/;"	v	file:
s_4_80	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_80[4] = { 0xE2, 'n', 'd', 'u' };$/;"	v	file:
s_4_80	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_80[5] = { 0xC3, 0xA2, 'n', 'd', 'u' };$/;"	v	file:
s_4_81	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_81[2] = { 'e', 'z' };$/;"	v	file:
s_4_81	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_81[2] = { 'e', 'z' };$/;"	v	file:
s_4_82	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_82[5] = { 'e', 'a', 's', 'c', 0xE3 };$/;"	v	file:
s_4_82	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_82[6] = { 'e', 'a', 's', 'c', 0xC4, 0x83 };$/;"	v	file:
s_4_83	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_83[3] = { 'a', 'r', 0xE3 };$/;"	v	file:
s_4_83	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_83[4] = { 'a', 'r', 0xC4, 0x83 };$/;"	v	file:
s_4_84	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_84[4] = { 's', 'e', 'r', 0xE3 };$/;"	v	file:
s_4_84	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_84[5] = { 's', 'e', 'r', 0xC4, 0x83 };$/;"	v	file:
s_4_85	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_85[5] = { 'a', 's', 'e', 'r', 0xE3 };$/;"	v	file:
s_4_85	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_85[6] = { 'a', 's', 'e', 'r', 0xC4, 0x83 };$/;"	v	file:
s_4_86	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_86[6] = { 's', 'e', 's', 'e', 'r', 0xE3 };$/;"	v	file:
s_4_86	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_86[7] = { 's', 'e', 's', 'e', 'r', 0xC4, 0x83 };$/;"	v	file:
s_4_87	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_87[5] = { 'i', 's', 'e', 'r', 0xE3 };$/;"	v	file:
s_4_87	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_87[6] = { 'i', 's', 'e', 'r', 0xC4, 0x83 };$/;"	v	file:
s_4_88	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_88[5] = { 'u', 's', 'e', 'r', 0xE3 };$/;"	v	file:
s_4_88	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_88[6] = { 'u', 's', 'e', 'r', 0xC4, 0x83 };$/;"	v	file:
s_4_89	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_89[5] = { 0xE2, 's', 'e', 'r', 0xE3 };$/;"	v	file:
s_4_89	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_89[7] = { 0xC3, 0xA2, 's', 'e', 'r', 0xC4, 0x83 };$/;"	v	file:
s_4_9	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_4_9[3] = { 'i', 'v', 'e' };$/;"	v	file:
s_4_9	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_4_9[2] = { 'u', 'l' };$/;"	v	file:
s_4_9	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_9[3] = { 0xE2, 'r', 'e' };$/;"	v	file:
s_4_9	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_4_9[3] = { 0xCA, 0xD4, 0xC5 };$/;"	v	file:
s_4_9	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_4_9[3] = { 'i', 'v', 'e' };$/;"	v	file:
s_4_9	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_4_9[2] = { 'u', 'l' };$/;"	v	file:
s_4_9	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_9[4] = { 0xC3, 0xA2, 'r', 'e' };$/;"	v	file:
s_4_9	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_4_9[4] = { 0xD1, 0x82, 0xD1, 0x8C };$/;"	v	file:
s_4_90	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_90[3] = { 'i', 'r', 0xE3 };$/;"	v	file:
s_4_90	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_90[4] = { 'i', 'r', 0xC4, 0x83 };$/;"	v	file:
s_4_91	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_91[3] = { 'u', 'r', 0xE3 };$/;"	v	file:
s_4_91	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_91[4] = { 'u', 'r', 0xC4, 0x83 };$/;"	v	file:
s_4_92	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_92[3] = { 0xE2, 'r', 0xE3 };$/;"	v	file:
s_4_92	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_92[5] = { 0xC3, 0xA2, 'r', 0xC4, 0x83 };$/;"	v	file:
s_4_93	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_4_93[4] = { 'e', 'a', 'z', 0xE3 };$/;"	v	file:
s_4_93	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_4_93[5] = { 'e', 'a', 'z', 0xC4, 0x83 };$/;"	v	file:
s_5	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_5[] = { 'y' };$/;"	v	file:
s_5	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5[] = { 's', 's' };$/;"	v	file:
s_5	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_5[] = { 'e' };$/;"	v	file:
s_5	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5[] = { 'Y' };$/;"	v	file:
s_5	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_5[] = { 'Y' };$/;"	v	file:
s_5	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_5[] = { 'q', 'U' };$/;"	v	file:
s_5	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5[] = { 'y' };$/;"	v	file:
s_5	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5[] = { 'u' };$/;"	v	file:
s_5	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_5[] = { 'i', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_5	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_5[] = { 'a' };$/;"	v	file:
s_5	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_5[] = { 'u' };$/;"	v	file:
s_5	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5[] = { 0xD1 };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_5[] = { 'y' };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5[] = { 's', 's' };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_5[] = { 'e' };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5[] = { 'Y' };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_5[] = { 'Y' };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_5[] = { 'a' };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_5[] = { 'q', 'U' };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5[] = { 'y' };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5[] = { 'u' };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_5[] = { 'u' };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5[] = { 0xD1, 0x8F };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_5[] = { 'i', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_5	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_5[] = { 0xC3, 0xB6 };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_5_0[2] = { 'a', 'a' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_0[4] = { 'a', 'n', 'c', 'i' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_5_0[2] = { 'a', 'a' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_0[3] = { 'i', 'r', 'a' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_5_0[2] = { 'i', 'c' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_0[2] = { 'i', 'c' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_0[3] = { 'i', 'c', 'a' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_5_0[2] = { 'i', 'c' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_5_0[2] = { 0xE1, 'n' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_5_0[1] = { 'a' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_0[1] = { 0xC0 };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_5_0[2] = { 'a', 'a' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_0[4] = { 'a', 'n', 'c', 'i' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_5_0[2] = { 'a', 'a' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_0[3] = { 'i', 'r', 'a' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_5_0[3] = { 0xC3, 0xA1, 'n' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_5_0[2] = { 'i', 'c' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_0[2] = { 'i', 'c' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_0[3] = { 'i', 'c', 'a' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_5_0[1] = { 'a' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_0[2] = { 0xD1, 0x83 };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_5_0[2] = { 'i', 'c' };$/;"	v	file:
s_5_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_5_0[2] = { 'n', 'a' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_5_1[2] = { 'e', 'e' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_1[4] = { 'e', 'n', 'c', 'i' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_5_1[2] = { 'e', 'e' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_1[2] = { 'i', 'e' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_5_1[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_1[4] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_1[5] = { 0xE2, 'n', 'c', 'i', 'a' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_5_1[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_5_1[2] = { 0xE9, 'n' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_5_1[1] = { 'e' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_1[2] = { 0xC9, 0xC0 };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_5_1[2] = { 'e', 'e' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_1[4] = { 'e', 'n', 'c', 'i' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_5_1[2] = { 'e', 'e' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_1[2] = { 'i', 'e' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_5_1[3] = { 0xC3, 0xA9, 'n' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_5_1[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_1[4] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_1[6] = { 0xC3, 0xA2, 'n', 'c', 'i', 'a' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_5_1[1] = { 'e' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_1[4] = { 0xD1, 0x8F, 0xD1, 0x85 };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_5_1[4] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_5_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_5_1[2] = { 'n', 'e' };$/;"	v	file:
s_5_10	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_10[5] = { 'e', 'n', 't', 'l', 'i' };$/;"	v	file:
s_5_10	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_10[5] = { 'i', 's', 's', 'e', 's' };$/;"	v	file:
s_5_10	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_10[3] = { 'i', 's', 'm' };$/;"	v	file:
s_5_10	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_10[5] = { 'i', 'd', 'a', 'd', 'e' };$/;"	v	file:
s_5_10	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_10[1] = { 0xC9 };$/;"	v	file:
s_5_10	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_10[5] = { 'e', 'n', 't', 'l', 'i' };$/;"	v	file:
s_5_10	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_10[5] = { 'i', 's', 's', 'e', 's' };$/;"	v	file:
s_5_10	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_10[3] = { 'i', 's', 'm' };$/;"	v	file:
s_5_10	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_10[5] = { 'i', 'd', 'a', 'd', 'e' };$/;"	v	file:
s_5_10	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_10[4] = { 0xD1, 0x8C, 0xD1, 0x8F };$/;"	v	file:
s_5_11	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_11[5] = { 'a', 'l', 'i', 't', 'i' };$/;"	v	file:
s_5_11	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_11[8] = { 'i', 's', 's', 'a', 'n', 't', 'e', 's' };$/;"	v	file:
s_5_11	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_11[3] = { 'i', 'o', 'n' };$/;"	v	file:
s_5_11	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_11[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_5_11	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_11[2] = { 0xC5, 0xC9 };$/;"	v	file:
s_5_11	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_11[5] = { 'a', 'l', 'i', 't', 'i' };$/;"	v	file:
s_5_11	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_11[8] = { 'i', 's', 's', 'a', 'n', 't', 'e', 's' };$/;"	v	file:
s_5_11	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_11[3] = { 'i', 'o', 'n' };$/;"	v	file:
s_5_11	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_11[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_5_11	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_11[4] = { 0xD0, 0xB8, 0xD1, 0x8F };$/;"	v	file:
s_5_12	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_12[6] = { 'b', 'i', 'l', 'i', 't', 'i' };$/;"	v	file:
s_5_12	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_12[4] = { 0xEE, 't', 'e', 's' };$/;"	v	file:
s_5_12	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_12[2] = { 'e', 'r' };$/;"	v	file:
s_5_12	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_12[5] = { 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_5_12	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_12[2] = { 0xC9, 0xC9 };$/;"	v	file:
s_5_12	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_12[6] = { 'b', 'i', 'l', 'i', 't', 'i' };$/;"	v	file:
s_5_12	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_12[5] = { 0xC3, 0xAE, 't', 'e', 's' };$/;"	v	file:
s_5_12	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_12[2] = { 'e', 'r' };$/;"	v	file:
s_5_12	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_12[5] = { 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_5_12	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_12[2] = { 0xD0, 0xB0 };$/;"	v	file:
s_5_13	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_13[5] = { 'i', 'v', 'i', 't', 'i' };$/;"	v	file:
s_5_13	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_13[2] = { 'i', 's' };$/;"	v	file:
s_5_13	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_13[3] = { 'o', 'u', 's' };$/;"	v	file:
s_5_13	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_13[6] = { 'a', 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_5_13	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_13[3] = { 0xC1, 0xCD, 0xC9 };$/;"	v	file:
s_5_13	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_13[5] = { 'i', 'v', 'i', 't', 'i' };$/;"	v	file:
s_5_13	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_13[2] = { 'i', 's' };$/;"	v	file:
s_5_13	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_13[3] = { 'o', 'u', 's' };$/;"	v	file:
s_5_13	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_13[6] = { 'a', 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_5_13	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_13[4] = { 0xD0, 0xB5, 0xD0, 0xB2 };$/;"	v	file:
s_5_14	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_14[6] = { 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_5_14	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_14[5] = { 'i', 'r', 'a', 'i', 's' };$/;"	v	file:
s_5_14	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_14[3] = { 'a', 'n', 't' };$/;"	v	file:
s_5_14	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_14[4] = { 0xE1, 'v', 'e', 'l' };$/;"	v	file:
s_5_14	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_14[3] = { 0xD1, 0xCD, 0xC9 };$/;"	v	file:
s_5_14	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_14[6] = { 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_5_14	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_14[5] = { 'i', 'r', 'a', 'i', 's' };$/;"	v	file:
s_5_14	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_14[3] = { 'a', 'n', 't' };$/;"	v	file:
s_5_14	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_14[5] = { 0xC3, 0xA1, 'v', 'e', 'l' };$/;"	v	file:
s_5_14	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_14[4] = { 0xD0, 0xBE, 0xD0, 0xB2 };$/;"	v	file:
s_5_15	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_15[7] = { 'a', 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_5_15	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_15[6] = { 'i', 's', 's', 'a', 'i', 's' };$/;"	v	file:
s_5_15	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_15[3] = { 'e', 'n', 't' };$/;"	v	file:
s_5_15	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_15[4] = { 0xED, 'v', 'e', 'l' };$/;"	v	file:
s_5_15	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_15[4] = { 0xC9, 0xD1, 0xCD, 0xC9 };$/;"	v	file:
s_5_15	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_15[7] = { 'a', 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_5_15	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_15[6] = { 'i', 's', 's', 'a', 'i', 's' };$/;"	v	file:
s_5_15	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_15[3] = { 'e', 'n', 't' };$/;"	v	file:
s_5_15	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_15[5] = { 0xC3, 0xAD, 'v', 'e', 'l' };$/;"	v	file:
s_5_15	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_15[2] = { 0xD0, 0xB5 };$/;"	v	file:
s_5_16	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_16[5] = { 'a', 'l', 'i', 's', 'm' };$/;"	v	file:
s_5_16	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_16[6] = { 'i', 'r', 'i', 'o', 'n', 's' };$/;"	v	file:
s_5_16	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_16[4] = { 'm', 'e', 'n', 't' };$/;"	v	file:
s_5_16	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_16[5] = { 'u', 'c', 'i', 0xF3, 'n' };$/;"	v	file:
s_5_16	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_16[1] = { 0xCA };$/;"	v	file:
s_5_16	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_16[5] = { 'a', 'l', 'i', 's', 'm' };$/;"	v	file:
s_5_16	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_16[6] = { 'i', 'r', 'i', 'o', 'n', 's' };$/;"	v	file:
s_5_16	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_16[4] = { 'm', 'e', 'n', 't' };$/;"	v	file:
s_5_16	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_16[6] = { 'u', 'c', 'i', 0xC3, 0xB3, 'n' };$/;"	v	file:
s_5_16	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_16[4] = { 0xD1, 0x8C, 0xD0, 0xB5 };$/;"	v	file:
s_5_17	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_17[5] = { 'a', 't', 'i', 'o', 'n' };$/;"	v	file:
s_5_17	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_17[7] = { 'i', 's', 's', 'i', 'o', 'n', 's' };$/;"	v	file:
s_5_17	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_17[5] = { 'e', 'm', 'e', 'n', 't' };$/;"	v	file:
s_5_17	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_17[3] = { 'i', 'c', 'o' };$/;"	v	file:
s_5_17	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_17[2] = { 0xC5, 0xCA };$/;"	v	file:
s_5_17	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_17[5] = { 'a', 't', 'i', 'o', 'n' };$/;"	v	file:
s_5_17	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_17[7] = { 'i', 's', 's', 'i', 'o', 'n', 's' };$/;"	v	file:
s_5_17	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_17[5] = { 'e', 'm', 'e', 'n', 't' };$/;"	v	file:
s_5_17	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_17[3] = { 'i', 'c', 'o' };$/;"	v	file:
s_5_17	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_17[4] = { 0xD0, 0xB8, 0xD0, 0xB5 };$/;"	v	file:
s_5_18	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_18[7] = { 'i', 'z', 'a', 't', 'i', 'o', 'n' };$/;"	v	file:
s_5_18	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_18[5] = { 'i', 'r', 'o', 'n', 's' };$/;"	v	file:
s_5_18	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_18[2] = { 'o', 'u' };$/;"	v	file:
s_5_18	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_18[4] = { 'i', 's', 'm', 'o' };$/;"	v	file:
s_5_18	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_18[3] = { 0xC9, 0xC5, 0xCA };$/;"	v	file:
s_5_18	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_18[7] = { 'i', 'z', 'a', 't', 'i', 'o', 'n' };$/;"	v	file:
s_5_18	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_18[5] = { 'i', 'r', 'o', 'n', 's' };$/;"	v	file:
s_5_18	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_18[2] = { 'o', 'u' };$/;"	v	file:
s_5_18	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_18[4] = { 'i', 's', 'm', 'o' };$/;"	v	file:
s_5_18	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_18[2] = { 0xD0, 0xB8 };$/;"	v	file:
s_5_19	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_19[4] = { 'i', 'z', 'e', 'r' };$/;"	v	file:
s_5_19	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_19[6] = { 'i', 's', 's', 'o', 'n', 's' };$/;"	v	file:
s_5_19	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_19[3] = { 'o', 's', 'o' };$/;"	v	file:
s_5_19	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_19[2] = { 0xC9, 0xCA };$/;"	v	file:
s_5_19	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_19[4] = { 'i', 'z', 'e', 'r' };$/;"	v	file:
s_5_19	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_19[6] = { 'i', 's', 's', 'o', 'n', 's' };$/;"	v	file:
s_5_19	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_19[3] = { 'o', 's', 'o' };$/;"	v	file:
s_5_19	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_19[4] = { 0xD0, 0xB5, 0xD0, 0xB8 };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_5_2[2] = { 'o', 'o' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_2[3] = { 'o', 'g', 'i' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_5_2[2] = { 'i', 'i' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_2[4] = { 'i', 's', 's', 'e' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_5_2[2] = { 'i', 'v' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_2[4] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_2[5] = { 0xEA, 'n', 'c', 'i', 'a' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_5_2[2] = { 'i', 'v' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_5_2[6] = { 0xE1, 'n', 'k', 0xE9, 'n', 't' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_5_2[2] = { 'i', 'e' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_2[2] = { 0xD8, 0xC0 };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_5_2[2] = { 'o', 'o' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_2[3] = { 'o', 'g', 'i' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_5_2[2] = { 'i', 'i' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_2[4] = { 'i', 's', 's', 'e' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_5_2[8] = { 0xC3, 0xA1, 'n', 'k', 0xC3, 0xA9, 'n', 't' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_5_2[2] = { 'i', 'v' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_2[4] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_2[6] = { 0xC3, 0xAA, 'n', 'c', 'i', 'a' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_5_2[2] = { 'i', 'e' };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_2[6] = { 0xD0, 0xB8, 0xD1, 0x8F, 0xD1, 0x85 };$/;"	v	file:
s_5_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_5_2[2] = { 'i', 'v' };$/;"	v	file:
s_5_20	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_20[4] = { 'a', 't', 'o', 'r' };$/;"	v	file:
s_5_20	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_20[7] = { 'i', 's', 's', 'a', 'n', 't', 's' };$/;"	v	file:
s_5_20	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_20[6] = { 'a', 'm', 'e', 'n', 't', 'o' };$/;"	v	file:
s_5_20	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_20[2] = { 0xCF, 0xCA };$/;"	v	file:
s_5_20	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_20[4] = { 'a', 't', 'o', 'r' };$/;"	v	file:
s_5_20	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_20[7] = { 'i', 's', 's', 'a', 'n', 't', 's' };$/;"	v	file:
s_5_20	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_20[6] = { 'a', 'm', 'e', 'n', 't', 'o' };$/;"	v	file:
s_5_20	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_20[4] = { 0xD0, 0xB8, 0xD0, 0xB8 };$/;"	v	file:
s_5_21	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_21[7] = { 'i', 'v', 'e', 'n', 'e', 's', 's' };$/;"	v	file:
s_5_21	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_21[2] = { 'i', 't' };$/;"	v	file:
s_5_21	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_21[6] = { 'i', 'm', 'e', 'n', 't', 'o' };$/;"	v	file:
s_5_21	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_21[2] = { 0xC1, 0xCD };$/;"	v	file:
s_5_21	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_21[7] = { 'i', 'v', 'e', 'n', 'e', 's', 's' };$/;"	v	file:
s_5_21	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_21[2] = { 'i', 't' };$/;"	v	file:
s_5_21	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_21[6] = { 'i', 'm', 'e', 'n', 't', 'o' };$/;"	v	file:
s_5_21	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_21[6] = { 0xD1, 0x8F, 0xD0, 0xBC, 0xD0, 0xB8 };$/;"	v	file:
s_5_22	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_22[7] = { 'f', 'u', 'l', 'n', 'e', 's', 's' };$/;"	v	file:
s_5_22	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_22[5] = { 'i', 'r', 'a', 'i', 't' };$/;"	v	file:
s_5_22	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_22[3] = { 'i', 'v', 'o' };$/;"	v	file:
s_5_22	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_22[2] = { 0xC5, 0xCD };$/;"	v	file:
s_5_22	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_22[7] = { 'f', 'u', 'l', 'n', 'e', 's', 's' };$/;"	v	file:
s_5_22	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_22[5] = { 'i', 'r', 'a', 'i', 't' };$/;"	v	file:
s_5_22	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_22[3] = { 'i', 'v', 'o' };$/;"	v	file:
s_5_22	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_22[8] = { 0xD0, 0xB8, 0xD1, 0x8F, 0xD0, 0xBC, 0xD0, 0xB8 };$/;"	v	file:
s_5_23	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_23[7] = { 'o', 'u', 's', 'n', 'e', 's', 's' };$/;"	v	file:
s_5_23	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_23[6] = { 'i', 's', 's', 'a', 'i', 't' };$/;"	v	file:
s_5_23	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_23[5] = { 'a', 0xE7, 'a', '~', 'o' };$/;"	v	file:
s_5_23	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_23[3] = { 0xC9, 0xC5, 0xCD };$/;"	v	file:
s_5_23	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_23[7] = { 'o', 'u', 's', 'n', 'e', 's', 's' };$/;"	v	file:
s_5_23	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_23[6] = { 'i', 's', 's', 'a', 'i', 't' };$/;"	v	file:
s_5_23	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_23[6] = { 'a', 0xC3, 0xA7, 'a', '~', 'o' };$/;"	v	file:
s_5_23	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_23[6] = { 0xD0, 0xB0, 0xD0, 0xBC, 0xD0, 0xB8 };$/;"	v	file:
s_5_24	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_24[6] = { 'i', 's', 's', 'a', 'n', 't' };$/;"	v	file:
s_5_24	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_24[4] = { 'a', 'd', 'o', 'r' };$/;"	v	file:
s_5_24	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_24[2] = { 0xCF, 0xCD };$/;"	v	file:
s_5_24	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_24[6] = { 'i', 's', 's', 'a', 'n', 't' };$/;"	v	file:
s_5_24	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_24[4] = { 'a', 'd', 'o', 'r' };$/;"	v	file:
s_5_24	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_24[2] = { 0xD0, 0xB9 };$/;"	v	file:
s_5_25	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_25[7] = { 'i', 'r', 'a', 'I', 'e', 'n', 't' };$/;"	v	file:
s_5_25	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_25[4] = { 'i', 'c', 'a', 's' };$/;"	v	file:
s_5_25	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_25[2] = { 0xD1, 0xCD };$/;"	v	file:
s_5_25	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_25[7] = { 'i', 'r', 'a', 'I', 'e', 'n', 't' };$/;"	v	file:
s_5_25	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_25[4] = { 'i', 'c', 'a', 's' };$/;"	v	file:
s_5_25	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_25[4] = { 0xD0, 0xB5, 0xD0, 0xB9 };$/;"	v	file:
s_5_26	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_26[8] = { 'i', 's', 's', 'a', 'I', 'e', 'n', 't' };$/;"	v	file:
s_5_26	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_26[6] = { 0xEA, 'n', 'c', 'i', 'a', 's' };$/;"	v	file:
s_5_26	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_26[3] = { 0xC9, 0xD1, 0xCD };$/;"	v	file:
s_5_26	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_26[8] = { 'i', 's', 's', 'a', 'I', 'e', 'n', 't' };$/;"	v	file:
s_5_26	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_26[7] = { 0xC3, 0xAA, 'n', 'c', 'i', 'a', 's' };$/;"	v	file:
s_5_26	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_26[6] = { 0xD0, 0xB8, 0xD0, 0xB5, 0xD0, 0xB9 };$/;"	v	file:
s_5_27	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_27[5] = { 'i', 'r', 'e', 'n', 't' };$/;"	v	file:
s_5_27	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_27[4] = { 'i', 'r', 'a', 's' };$/;"	v	file:
s_5_27	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_27[1] = { 0xCF };$/;"	v	file:
s_5_27	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_27[5] = { 'i', 'r', 'e', 'n', 't' };$/;"	v	file:
s_5_27	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_27[4] = { 'i', 'r', 'a', 's' };$/;"	v	file:
s_5_27	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_27[4] = { 0xD0, 0xB8, 0xD0, 0xB9 };$/;"	v	file:
s_5_28	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_28[6] = { 'i', 's', 's', 'e', 'n', 't' };$/;"	v	file:
s_5_28	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_28[6] = { 'a', 'd', 'o', 'r', 'a', 's' };$/;"	v	file:
s_5_28	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_28[1] = { 0xD1 };$/;"	v	file:
s_5_28	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_28[6] = { 'i', 's', 's', 'e', 'n', 't' };$/;"	v	file:
s_5_28	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_28[6] = { 'a', 'd', 'o', 'r', 'a', 's' };$/;"	v	file:
s_5_28	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_28[4] = { 0xD0, 0xBE, 0xD0, 0xB9 };$/;"	v	file:
s_5_29	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_29[5] = { 'i', 'r', 'o', 'n', 't' };$/;"	v	file:
s_5_29	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_29[4] = { 'o', 's', 'a', 's' };$/;"	v	file:
s_5_29	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_29[2] = { 0xC9, 0xD1 };$/;"	v	file:
s_5_29	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_29[5] = { 'i', 'r', 'o', 'n', 't' };$/;"	v	file:
s_5_29	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_29[4] = { 'o', 's', 'a', 's' };$/;"	v	file:
s_5_29	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_29[4] = { 0xD1, 0x8F, 0xD0, 0xBC };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_5_3[2] = { 'u', 'u' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_3[2] = { 'l', 'i' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_5_3[2] = { 'o', 'o' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_3[7] = { 'i', 's', 's', 'a', 'n', 't', 'e' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_3[4] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_3[3] = { 'i', 'r', 'a' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_5_3[1] = { 'i' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_3[1] = { 0xC1 };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_5_3[2] = { 'u', 'u' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_3[2] = { 'l', 'i' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_5_3[2] = { 'o', 'o' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_3[7] = { 'i', 's', 's', 'a', 'n', 't', 'e' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_3[4] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_3[3] = { 'i', 'r', 'a' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_5_3[1] = { 'i' };$/;"	v	file:
s_5_3	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_3[4] = { 0xD0, 0xB0, 0xD1, 0x85 };$/;"	v	file:
s_5_30	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_30[2] = { 0xEE, 't' };$/;"	v	file:
s_5_30	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_30[5] = { 'i', 's', 't', 'a', 's' };$/;"	v	file:
s_5_30	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_30[2] = { 0xD8, 0xD1 };$/;"	v	file:
s_5_30	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_30[3] = { 0xC3, 0xAE, 't' };$/;"	v	file:
s_5_30	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_30[5] = { 'i', 's', 't', 'a', 's' };$/;"	v	file:
s_5_30	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_30[6] = { 0xD0, 0xB8, 0xD1, 0x8F, 0xD0, 0xBC };$/;"	v	file:
s_5_31	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_31[5] = { 'i', 'r', 'i', 'e', 'z' };$/;"	v	file:
s_5_31	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_31[4] = { 'i', 'v', 'a', 's' };$/;"	v	file:
s_5_31	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_31[1] = { 0xD5 };$/;"	v	file:
s_5_31	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_31[5] = { 'i', 'r', 'i', 'e', 'z' };$/;"	v	file:
s_5_31	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_31[4] = { 'i', 'v', 'a', 's' };$/;"	v	file:
s_5_31	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_31[4] = { 0xD0, 0xB0, 0xD0, 0xBC };$/;"	v	file:
s_5_32	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_32[6] = { 'i', 's', 's', 'i', 'e', 'z' };$/;"	v	file:
s_5_32	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_32[4] = { 'e', 'z', 'a', 's' };$/;"	v	file:
s_5_32	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_32[2] = { 0xC5, 0xD7 };$/;"	v	file:
s_5_32	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_32[6] = { 'i', 's', 's', 'i', 'e', 'z' };$/;"	v	file:
s_5_32	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_32[4] = { 'e', 'z', 'a', 's' };$/;"	v	file:
s_5_32	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_32[4] = { 0xD0, 0xB5, 0xD0, 0xBC };$/;"	v	file:
s_5_33	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_33[4] = { 'i', 'r', 'e', 'z' };$/;"	v	file:
s_5_33	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_33[6] = { 'l', 'o', 'g', 0xED, 'a', 's' };$/;"	v	file:
s_5_33	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_33[2] = { 0xCF, 0xD7 };$/;"	v	file:
s_5_33	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_33[4] = { 'i', 'r', 'e', 'z' };$/;"	v	file:
s_5_33	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_33[7] = { 'l', 'o', 'g', 0xC3, 0xAD, 'a', 's' };$/;"	v	file:
s_5_33	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_33[6] = { 0xD0, 0xB8, 0xD0, 0xB5, 0xD0, 0xBC };$/;"	v	file:
s_5_34	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_34[5] = { 'i', 's', 's', 'e', 'z' };$/;"	v	file:
s_5_34	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_34[6] = { 'i', 'd', 'a', 'd', 'e', 's' };$/;"	v	file:
s_5_34	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_34[1] = { 0xD8 };$/;"	v	file:
s_5_34	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_34[5] = { 'i', 's', 's', 'e', 'z' };$/;"	v	file:
s_5_34	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_34[6] = { 'i', 'd', 'a', 'd', 'e', 's' };$/;"	v	file:
s_5_34	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_34[4] = { 0xD0, 0xBE, 0xD0, 0xBC };$/;"	v	file:
s_5_35	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_35[7] = { 'u', 'c', 'i', 'o', 'n', 'e', 's' };$/;"	v	file:
s_5_35	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_35[1] = { 0xD9 };$/;"	v	file:
s_5_35	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_35[7] = { 'u', 'c', 'i', 'o', 'n', 'e', 's' };$/;"	v	file:
s_5_35	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_35[2] = { 0xD0, 0xBE };$/;"	v	file:
s_5_36	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_36[6] = { 'a', 'd', 'o', 'r', 'e', 's' };$/;"	v	file:
s_5_36	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_36[6] = { 'a', 'd', 'o', 'r', 'e', 's' };$/;"	v	file:
s_5_37	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_37[5] = { 'a', 'n', 't', 'e', 's' };$/;"	v	file:
s_5_37	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_37[5] = { 'a', 'n', 't', 'e', 's' };$/;"	v	file:
s_5_38	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_38[6] = { 'a', 0xE7, 'o', '~', 'e', 's' };$/;"	v	file:
s_5_38	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_38[7] = { 'a', 0xC3, 0xA7, 'o', '~', 'e', 's' };$/;"	v	file:
s_5_39	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_39[4] = { 'i', 'c', 'o', 's' };$/;"	v	file:
s_5_39	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_39[4] = { 'i', 'c', 'o', 's' };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_4[3] = { 'b', 'l', 'i' };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_5_4[2] = { 'u', 'u' };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_4[1] = { 'i' };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_4[4] = { 'i', 'b', 'l', 'e' };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_4[5] = { 'a', 'd', 'o', 'r', 'a' };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_5_4[1] = { 0xE3 };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_4[1] = { 0xC5 };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_4[3] = { 'b', 'l', 'i' };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_5_4[2] = { 'u', 'u' };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_4[1] = { 'i' };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_4[4] = { 'i', 'b', 'l', 'e' };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_4[5] = { 'a', 'd', 'o', 'r', 'a' };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_5_4[2] = { 0xC4, 0x83 };$/;"	v	file:
s_5_4	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_4[2] = { 0xD1, 0x8B };$/;"	v	file:
s_5_40	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_40[5] = { 'i', 's', 'm', 'o', 's' };$/;"	v	file:
s_5_40	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_40[5] = { 'i', 's', 'm', 'o', 's' };$/;"	v	file:
s_5_41	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_41[4] = { 'o', 's', 'o', 's' };$/;"	v	file:
s_5_41	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_41[4] = { 'o', 's', 'o', 's' };$/;"	v	file:
s_5_42	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_42[7] = { 'a', 'm', 'e', 'n', 't', 'o', 's' };$/;"	v	file:
s_5_42	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_42[7] = { 'a', 'm', 'e', 'n', 't', 'o', 's' };$/;"	v	file:
s_5_43	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_43[7] = { 'i', 'm', 'e', 'n', 't', 'o', 's' };$/;"	v	file:
s_5_43	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_43[7] = { 'i', 'm', 'e', 'n', 't', 'o', 's' };$/;"	v	file:
s_5_44	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_44[4] = { 'i', 'v', 'o', 's' };$/;"	v	file:
s_5_44	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_44[4] = { 'i', 'v', 'o', 's' };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_5[4] = { 'a', 'b', 'l', 'i' };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_5_5[2] = { 0xE4, 0xE4 };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_5[4] = { 'i', 'r', 'a', 'i' };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_5[3] = { 'a', 't', 'e' };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_5[3] = { 'o', 's', 'a' };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_5[2] = { 0xC9, 0xC5 };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_5[4] = { 'a', 'b', 'l', 'i' };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_5_5[4] = { 0xC3, 0xA4, 0xC3, 0xA4 };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_5[4] = { 'i', 'r', 'a', 'i' };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_5[3] = { 'a', 't', 'e' };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_5[3] = { 'o', 's', 'a' };$/;"	v	file:
s_5_5	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_5[2] = { 0xD1, 0x8C };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_6[4] = { 'a', 'l', 'l', 'i' };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_5_6[2] = { 0xF6, 0xF6 };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_6[2] = { 'i', 'r' };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_6[3] = { 'i', 'v', 'e' };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_6[4] = { 'i', 's', 't', 'a' };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_6[2] = { 0xD8, 0xC5 };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_6[4] = { 'a', 'l', 'l', 'i' };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_5_6[4] = { 0xC3, 0xB6, 0xC3, 0xB6 };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_6[2] = { 'i', 'r' };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_6[3] = { 'i', 'v', 'e' };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_6[4] = { 'i', 's', 't', 'a' };$/;"	v	file:
s_5_6	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_6[2] = { 0xD1, 0x8E };$/;"	v	file:
s_5_7	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_7[5] = { 'f', 'u', 'l', 'l', 'i' };$/;"	v	file:
s_5_7	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_7[4] = { 'i', 'r', 'a', 's' };$/;"	v	file:
s_5_7	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_7[3] = { 'i', 'z', 'e' };$/;"	v	file:
s_5_7	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_7[3] = { 'i', 'v', 'a' };$/;"	v	file:
s_5_7	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_7[2] = { 0xC1, 0xC8 };$/;"	v	file:
s_5_7	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_7[5] = { 'f', 'u', 'l', 'l', 'i' };$/;"	v	file:
s_5_7	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_7[4] = { 'i', 'r', 'a', 's' };$/;"	v	file:
s_5_7	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_7[3] = { 'i', 'z', 'e' };$/;"	v	file:
s_5_7	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_7[3] = { 'i', 'v', 'a' };$/;"	v	file:
s_5_7	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_7[4] = { 0xD1, 0x8C, 0xD1, 0x8E };$/;"	v	file:
s_5_8	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_8[6] = { 'l', 'e', 's', 's', 'l', 'i' };$/;"	v	file:
s_5_8	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_8[3] = { 'i', 'e', 's' };$/;"	v	file:
s_5_8	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_8[3] = { 'i', 't', 'i' };$/;"	v	file:
s_5_8	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_8[3] = { 'e', 'z', 'a' };$/;"	v	file:
s_5_8	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_8[2] = { 0xD1, 0xC8 };$/;"	v	file:
s_5_8	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_8[6] = { 'l', 'e', 's', 's', 'l', 'i' };$/;"	v	file:
s_5_8	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_8[3] = { 'i', 'e', 's' };$/;"	v	file:
s_5_8	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_8[3] = { 'i', 't', 'i' };$/;"	v	file:
s_5_8	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_8[3] = { 'e', 'z', 'a' };$/;"	v	file:
s_5_8	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_8[4] = { 0xD0, 0xB8, 0xD1, 0x8E };$/;"	v	file:
s_5_9	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_5_9[5] = { 'o', 'u', 's', 'l', 'i' };$/;"	v	file:
s_5_9	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_5_9[4] = { 0xEE, 'm', 'e', 's' };$/;"	v	file:
s_5_9	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_5_9[2] = { 'a', 'l' };$/;"	v	file:
s_5_9	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_5_9[5] = { 'l', 'o', 'g', 0xED, 'a' };$/;"	v	file:
s_5_9	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_5_9[3] = { 0xC9, 0xD1, 0xC8 };$/;"	v	file:
s_5_9	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_5_9[5] = { 'o', 'u', 's', 'l', 'i' };$/;"	v	file:
s_5_9	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_5_9[5] = { 0xC3, 0xAE, 'm', 'e', 's' };$/;"	v	file:
s_5_9	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_5_9[2] = { 'a', 'l' };$/;"	v	file:
s_5_9	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_5_9[6] = { 'l', 'o', 'g', 0xC3, 0xAD, 'a' };$/;"	v	file:
s_5_9	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_5_9[2] = { 0xD1, 0x8F };$/;"	v	file:
s_6	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_6[] = { 'Y' };$/;"	v	file:
s_6	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_6[] = { 'i' };$/;"	v	file:
s_6	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6[] = { 'i' };$/;"	v	file:
s_6	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6[] = { 'y' };$/;"	v	file:
s_6	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_6[] = { 'y' };$/;"	v	file:
s_6	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6[] = { 'u' };$/;"	v	file:
s_6	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_6[] = { 'Y' };$/;"	v	file:
s_6	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_6	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6[] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_6	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_6[] = { 'e' };$/;"	v	file:
s_6	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_6[] = { 'a' };$/;"	v	file:
s_6	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_6[] = { 0xCE };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_6[] = { 'Y' };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_6[] = { 'i' };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6[] = { 'i' };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6[] = { 'y' };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_6[] = { 'y' };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_6[] = { 'e' };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6[] = { 'u' };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_6[] = { 'Y' };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_6[] = { 'a' };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_6[] = { 0xD0, 0xBD };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6[] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_6	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_6[] = { 'u' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_6_0[5] = { 'i', 'c', 'a', 't', 'e' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_0[1] = { 'a' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_0[1] = { 'a' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_0[3] = { 'i', 'c', 'a' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_0[3] = { 'a', 'd', 'a' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_0[3] = { 'i', 'c', 'a' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_6_0[4] = { 's', 't', 'u', 'l' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_6_0[3] = { 0xCF, 0xD3, 0xD4 };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_6_0[5] = { 'i', 'c', 'a', 't', 'e' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_0[1] = { 'a' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_0[1] = { 'a' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_6_0[4] = { 's', 't', 'u', 'l' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_0[3] = { 'i', 'c', 'a' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_0[3] = { 'a', 'd', 'a' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_6_0[6] = { 0xD0, 0xBE, 0xD1, 0x81, 0xD1, 0x82 };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_0[3] = { 'i', 'c', 'a' };$/;"	v	file:
s_6_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_6_0[2] = { 'd', 'a' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_6_1[5] = { 'a', 't', 'i', 'v', 'e' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_1[3] = { 'l', 'l', 'a' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_1[3] = { 'e', 'r', 'a' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_1[5] = { 'l', 'o', 'g', 'i', 'a' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_1[3] = { 'i', 'd', 'a' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_1[5] = { 'a', 'n', 'c', 'i', 'a' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_6_1[5] = { 'a', 's', 't', 'u', 'l' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_6_1[4] = { 0xCF, 0xD3, 0xD4, 0xD8 };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_6_1[5] = { 'a', 't', 'i', 'v', 'e' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_1[3] = { 'l', 'l', 'a' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_1[3] = { 'e', 'r', 'a' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_6_1[5] = { 'a', 's', 't', 'u', 'l' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_1[5] = { 'l', 'o', 'g', 'i', 'a' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_1[3] = { 'i', 'd', 'a' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_6_1[8] = { 0xD0, 0xBE, 0xD1, 0x81, 0xD1, 0x82, 0xD1, 0x8C };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_1[5] = { 'a', 'n', 'c', 'i', 'a' };$/;"	v	file:
s_6_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_6_1[2] = { 't', 'a' };$/;"	v	file:
s_6_10	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_10[3] = { 'k', 's', 'i' };$/;"	v	file:
s_6_10	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_10[4] = { 0xE2, 'm', 'e', 's' };$/;"	v	file:
s_6_10	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_10[5] = { 'l', 'o', 'g', 'i', 'e' };$/;"	v	file:
s_6_10	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_10[4] = { 'a', 's', 's', 'e' };$/;"	v	file:
s_6_10	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_10[4] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_6_10	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_10[3] = { 'k', 's', 'i' };$/;"	v	file:
s_6_10	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_10[5] = { 0xC3, 0xA2, 'm', 'e', 's' };$/;"	v	file:
s_6_10	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_10[5] = { 'l', 'o', 'g', 'i', 'e' };$/;"	v	file:
s_6_10	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_10[4] = { 'a', 's', 's', 'e' };$/;"	v	file:
s_6_10	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_10[4] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_6_100	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_100[6] = { 'a', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_100	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_100[6] = { 'a', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_101	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_101[6] = { 'e', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_101	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_101[6] = { 'e', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_102	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_102[6] = { 'i', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_102	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_102[6] = { 'i', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_103	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_103[7] = { 0xE1, 's', 's', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_103	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_103[8] = { 0xC3, 0xA1, 's', 's', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_104	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_104[7] = { 0xEA, 's', 's', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_104	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_104[8] = { 0xC3, 0xAA, 's', 's', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_105	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_105[7] = { 0xED, 's', 's', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_105	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_105[8] = { 0xC3, 0xAD, 's', 's', 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_106	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_106[4] = { 'i', 'm', 'o', 's' };$/;"	v	file:
s_6_106	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_106[4] = { 'i', 'm', 'o', 's' };$/;"	v	file:
s_6_107	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_107[5] = { 'a', 'r', 'm', 'o', 's' };$/;"	v	file:
s_6_107	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_107[5] = { 'a', 'r', 'm', 'o', 's' };$/;"	v	file:
s_6_108	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_108[5] = { 'e', 'r', 'm', 'o', 's' };$/;"	v	file:
s_6_108	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_108[5] = { 'e', 'r', 'm', 'o', 's' };$/;"	v	file:
s_6_109	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_109[5] = { 'i', 'r', 'm', 'o', 's' };$/;"	v	file:
s_6_109	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_109[5] = { 'i', 'r', 'm', 'o', 's' };$/;"	v	file:
s_6_11	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_11[1] = { 'n' };$/;"	v	file:
s_6_11	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_11[5] = { 'a', 's', 's', 'e', 's' };$/;"	v	file:
s_6_11	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_11[5] = { 'a', 'b', 'i', 'l', 'e' };$/;"	v	file:
s_6_11	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_11[4] = { 'e', 's', 's', 'e' };$/;"	v	file:
s_6_11	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_11[4] = { 'i', 'b', 'l', 'e' };$/;"	v	file:
s_6_11	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_11[1] = { 'n' };$/;"	v	file:
s_6_11	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_11[5] = { 'a', 's', 's', 'e', 's' };$/;"	v	file:
s_6_11	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_11[5] = { 'a', 'b', 'i', 'l', 'e' };$/;"	v	file:
s_6_11	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_11[4] = { 'e', 's', 's', 'e' };$/;"	v	file:
s_6_11	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_11[4] = { 'i', 'b', 'l', 'e' };$/;"	v	file:
s_6_110	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_110[4] = { 0xE1, 'm', 'o', 's' };$/;"	v	file:
s_6_110	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_110[5] = { 0xC3, 0xA1, 'm', 'o', 's' };$/;"	v	file:
s_6_111	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_111[4] = { 'a', 'r', 0xE1, 's' };$/;"	v	file:
s_6_111	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_111[5] = { 'a', 'r', 0xC3, 0xA1, 's' };$/;"	v	file:
s_6_112	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_112[4] = { 'e', 'r', 0xE1, 's' };$/;"	v	file:
s_6_112	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_112[5] = { 'e', 'r', 0xC3, 0xA1, 's' };$/;"	v	file:
s_6_113	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_113[4] = { 'i', 'r', 0xE1, 's' };$/;"	v	file:
s_6_113	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_113[5] = { 'i', 'r', 0xC3, 0xA1, 's' };$/;"	v	file:
s_6_114	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_114[2] = { 'e', 'u' };$/;"	v	file:
s_6_114	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_114[2] = { 'e', 'u' };$/;"	v	file:
s_6_115	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_115[2] = { 'i', 'u' };$/;"	v	file:
s_6_115	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_115[2] = { 'i', 'u' };$/;"	v	file:
s_6_116	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_116[2] = { 'o', 'u' };$/;"	v	file:
s_6_116	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_116[2] = { 'o', 'u' };$/;"	v	file:
s_6_117	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_117[3] = { 'a', 'r', 0xE1 };$/;"	v	file:
s_6_117	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_117[4] = { 'a', 'r', 0xC3, 0xA1 };$/;"	v	file:
s_6_118	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_118[3] = { 'e', 'r', 0xE1 };$/;"	v	file:
s_6_118	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_118[4] = { 'e', 'r', 0xC3, 0xA1 };$/;"	v	file:
s_6_119	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_119[3] = { 'i', 'r', 0xE1 };$/;"	v	file:
s_6_119	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_119[4] = { 'i', 'r', 0xC3, 0xA1 };$/;"	v	file:
s_6_12	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_12[3] = { 'h', 'a', 'n' };$/;"	v	file:
s_6_12	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_12[5] = { 'a', 'n', 't', 'e', 's' };$/;"	v	file:
s_6_12	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_12[5] = { 'i', 'b', 'i', 'l', 'e' };$/;"	v	file:
s_6_12	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_12[4] = { 'i', 's', 's', 'e' };$/;"	v	file:
s_6_12	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_12[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_6_12	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_12[3] = { 'h', 'a', 'n' };$/;"	v	file:
s_6_12	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_12[5] = { 'a', 'n', 't', 'e', 's' };$/;"	v	file:
s_6_12	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_12[5] = { 'i', 'b', 'i', 'l', 'e' };$/;"	v	file:
s_6_12	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_12[4] = { 'i', 's', 's', 'e' };$/;"	v	file:
s_6_12	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_12[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_6_13	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_13[3] = { 'd', 'e', 'n' };$/;"	v	file:
s_6_13	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_13[4] = { 0xE2, 't', 'e', 's' };$/;"	v	file:
s_6_13	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_13[6] = { 'u', 's', 'i', 'o', 'n', 'e' };$/;"	v	file:
s_6_13	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_13[4] = { 'a', 's', 't', 'e' };$/;"	v	file:
s_6_13	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_13[5] = { 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_6_13	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_13[3] = { 'd', 'e', 'n' };$/;"	v	file:
s_6_13	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_13[5] = { 0xC3, 0xA2, 't', 'e', 's' };$/;"	v	file:
s_6_13	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_13[6] = { 'u', 's', 'i', 'o', 'n', 'e' };$/;"	v	file:
s_6_13	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_13[4] = { 'a', 's', 't', 'e' };$/;"	v	file:
s_6_13	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_13[5] = { 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_6_14	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_14[4] = { 's', 'e', 'e', 'n' };$/;"	v	file:
s_6_14	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_14[3] = { 0xE9, 'e', 's' };$/;"	v	file:
s_6_14	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_14[6] = { 'a', 'z', 'i', 'o', 'n', 'e' };$/;"	v	file:
s_6_14	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_14[4] = { 'e', 's', 't', 'e' };$/;"	v	file:
s_6_14	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_14[6] = { 'a', 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_6_14	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_14[4] = { 's', 'e', 'e', 'n' };$/;"	v	file:
s_6_14	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_14[4] = { 0xC3, 0xA9, 'e', 's' };$/;"	v	file:
s_6_14	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_14[6] = { 'a', 'z', 'i', 'o', 'n', 'e' };$/;"	v	file:
s_6_14	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_14[4] = { 'e', 's', 't', 'e' };$/;"	v	file:
s_6_14	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_14[6] = { 'a', 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_6_15	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_15[3] = { 'h', 'e', 'n' };$/;"	v	file:
s_6_15	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_15[3] = { 'a', 'i', 's' };$/;"	v	file:
s_6_15	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_15[6] = { 'u', 'z', 'i', 'o', 'n', 'e' };$/;"	v	file:
s_6_15	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_15[4] = { 'i', 's', 't', 'e' };$/;"	v	file:
s_6_15	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_15[5] = { 'a', 'c', 'i', 0xF3, 'n' };$/;"	v	file:
s_6_15	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_15[3] = { 'h', 'e', 'n' };$/;"	v	file:
s_6_15	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_15[3] = { 'a', 'i', 's' };$/;"	v	file:
s_6_15	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_15[6] = { 'u', 'z', 'i', 'o', 'n', 'e' };$/;"	v	file:
s_6_15	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_15[4] = { 'i', 's', 't', 'e' };$/;"	v	file:
s_6_15	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_15[6] = { 'a', 'c', 'i', 0xC3, 0xB3, 'n' };$/;"	v	file:
s_6_16	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_16[4] = { 't', 't', 'e', 'n' };$/;"	v	file:
s_6_16	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_16[5] = { 'e', 'r', 'a', 'i', 's' };$/;"	v	file:
s_6_16	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_16[5] = { 'a', 't', 'o', 'r', 'e' };$/;"	v	file:
s_6_16	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_16[2] = { 'e', 'i' };$/;"	v	file:
s_6_16	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_16[5] = { 'u', 'c', 'i', 0xF3, 'n' };$/;"	v	file:
s_6_16	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_16[4] = { 't', 't', 'e', 'n' };$/;"	v	file:
s_6_16	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_16[5] = { 'e', 'r', 'a', 'i', 's' };$/;"	v	file:
s_6_16	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_16[5] = { 'a', 't', 'o', 'r', 'e' };$/;"	v	file:
s_6_16	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_16[2] = { 'e', 'i' };$/;"	v	file:
s_6_16	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_16[6] = { 'u', 'c', 'i', 0xC3, 0xB3, 'n' };$/;"	v	file:
s_6_17	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_17[3] = { 'h', 'i', 'n' };$/;"	v	file:
s_6_17	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_17[4] = { 'i', 'o', 'n', 's' };$/;"	v	file:
s_6_17	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_17[3] = { 'o', 's', 'e' };$/;"	v	file:
s_6_17	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_17[4] = { 'a', 'r', 'e', 'i' };$/;"	v	file:
s_6_17	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_17[3] = { 'i', 'c', 'o' };$/;"	v	file:
s_6_17	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_17[3] = { 'h', 'i', 'n' };$/;"	v	file:
s_6_17	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_17[4] = { 'i', 'o', 'n', 's' };$/;"	v	file:
s_6_17	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_17[3] = { 'o', 's', 'e' };$/;"	v	file:
s_6_17	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_17[4] = { 'a', 'r', 'e', 'i' };$/;"	v	file:
s_6_17	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_17[3] = { 'i', 'c', 'o' };$/;"	v	file:
s_6_18	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_18[4] = { 's', 'i', 'i', 'n' };$/;"	v	file:
s_6_18	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_18[6] = { 'e', 'r', 'i', 'o', 'n', 's' };$/;"	v	file:
s_6_18	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_18[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_6_18	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_18[4] = { 'e', 'r', 'e', 'i' };$/;"	v	file:
s_6_18	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_18[4] = { 'i', 's', 'm', 'o' };$/;"	v	file:
s_6_18	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_18[4] = { 's', 'i', 'i', 'n' };$/;"	v	file:
s_6_18	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_18[6] = { 'e', 'r', 'i', 'o', 'n', 's' };$/;"	v	file:
s_6_18	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_18[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_6_18	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_18[4] = { 'e', 'r', 'e', 'i' };$/;"	v	file:
s_6_18	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_18[4] = { 'i', 's', 'm', 'o' };$/;"	v	file:
s_6_19	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_19[3] = { 'h', 'o', 'n' };$/;"	v	file:
s_6_19	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_19[7] = { 'a', 's', 's', 'i', 'o', 'n', 's' };$/;"	v	file:
s_6_19	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_19[5] = { 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_6_19	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_19[4] = { 'i', 'r', 'e', 'i' };$/;"	v	file:
s_6_19	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_19[3] = { 'o', 's', 'o' };$/;"	v	file:
s_6_19	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_19[3] = { 'h', 'o', 'n' };$/;"	v	file:
s_6_19	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_19[7] = { 'a', 's', 's', 'i', 'o', 'n', 's' };$/;"	v	file:
s_6_19	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_19[5] = { 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_6_19	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_19[4] = { 'i', 'r', 'e', 'i' };$/;"	v	file:
s_6_19	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_19[3] = { 'o', 's', 'o' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_6_2[5] = { 'a', 'l', 'i', 'z', 'e' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_2[2] = { 'n', 'a' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_2[4] = { 'a', 's', 's', 'e' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_2[3] = { 'o', 's', 'a' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_2[2] = { 'i', 'a' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_2[5] = { 'e', 'n', 'c', 'i', 'a' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_6_2[5] = { 0xE1, 's', 't', 'u', 'l' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_6_2[5] = { 'a', 'l', 'i', 'z', 'e' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_2[2] = { 'n', 'a' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_2[4] = { 'a', 's', 's', 'e' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_6_2[6] = { 0xC3, 0xA1, 's', 't', 'u', 'l' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_2[3] = { 'o', 's', 'a' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_2[2] = { 'i', 'a' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_2[5] = { 'e', 'n', 'c', 'i', 'a' };$/;"	v	file:
s_6_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_6_2[2] = { 'd', 'e' };$/;"	v	file:
s_6_20	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_20[3] = { 'h', 0xE4, 'n' };$/;"	v	file:
s_6_20	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_20[5] = { 'e', 'r', 'o', 'n', 's' };$/;"	v	file:
s_6_20	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_20[6] = { 'a', 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_6_20	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_20[2] = { 'a', 'm' };$/;"	v	file:
s_6_20	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_20[7] = { 'a', 'm', 'i', 'e', 'n', 't', 'o' };$/;"	v	file:
s_6_20	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_20[4] = { 'h', 0xC3, 0xA4, 'n' };$/;"	v	file:
s_6_20	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_20[5] = { 'e', 'r', 'o', 'n', 's' };$/;"	v	file:
s_6_20	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_20[6] = { 'a', 'm', 'e', 'n', 't', 'e' };$/;"	v	file:
s_6_20	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_20[2] = { 'a', 'm' };$/;"	v	file:
s_6_20	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_20[7] = { 'a', 'm', 'i', 'e', 'n', 't', 'o' };$/;"	v	file:
s_6_21	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_21[3] = { 'h', 0xF6, 'n' };$/;"	v	file:
s_6_21	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_21[4] = { 'a', 'n', 't', 's' };$/;"	v	file:
s_6_21	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_21[4] = { 'i', 's', 't', 'e' };$/;"	v	file:
s_6_21	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_21[3] = { 'i', 'a', 'm' };$/;"	v	file:
s_6_21	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_21[7] = { 'i', 'm', 'i', 'e', 'n', 't', 'o' };$/;"	v	file:
s_6_21	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_21[4] = { 'h', 0xC3, 0xB6, 'n' };$/;"	v	file:
s_6_21	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_21[4] = { 'a', 'n', 't', 's' };$/;"	v	file:
s_6_21	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_21[4] = { 'i', 's', 't', 'e' };$/;"	v	file:
s_6_21	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_21[3] = { 'i', 'a', 'm' };$/;"	v	file:
s_6_21	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_21[7] = { 'i', 'm', 'i', 'e', 'n', 't', 'o' };$/;"	v	file:
s_6_22	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_22[1] = { 0xE4 };$/;"	v	file:
s_6_22	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_22[2] = { 0xE9, 's' };$/;"	v	file:
s_6_22	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_22[3] = { 'i', 'v', 'e' };$/;"	v	file:
s_6_22	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_22[5] = { 'a', 'r', 'i', 'a', 'm' };$/;"	v	file:
s_6_22	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_22[3] = { 'i', 'v', 'o' };$/;"	v	file:
s_6_22	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_22[2] = { 0xC3, 0xA4 };$/;"	v	file:
s_6_22	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_22[3] = { 0xC3, 0xA9, 's' };$/;"	v	file:
s_6_22	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_22[3] = { 'i', 'v', 'e' };$/;"	v	file:
s_6_22	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_22[5] = { 'a', 'r', 'i', 'a', 'm' };$/;"	v	file:
s_6_22	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_22[3] = { 'i', 'v', 'o' };$/;"	v	file:
s_6_23	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_23[3] = { 'l', 'l', 0xE4 };$/;"	v	file:
s_6_23	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_23[3] = { 'a', 'i', 't' };$/;"	v	file:
s_6_23	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_23[4] = { 'a', 'n', 'z', 'e' };$/;"	v	file:
s_6_23	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_23[5] = { 'e', 'r', 'i', 'a', 'm' };$/;"	v	file:
s_6_23	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_23[4] = { 'a', 'd', 'o', 'r' };$/;"	v	file:
s_6_23	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_23[4] = { 'l', 'l', 0xC3, 0xA4 };$/;"	v	file:
s_6_23	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_23[3] = { 'a', 'i', 't' };$/;"	v	file:
s_6_23	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_23[4] = { 'a', 'n', 'z', 'e' };$/;"	v	file:
s_6_23	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_23[5] = { 'e', 'r', 'i', 'a', 'm' };$/;"	v	file:
s_6_23	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_23[4] = { 'a', 'd', 'o', 'r' };$/;"	v	file:
s_6_24	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_24[2] = { 'n', 0xE4 };$/;"	v	file:
s_6_24	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_24[5] = { 'e', 'r', 'a', 'i', 't' };$/;"	v	file:
s_6_24	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_24[4] = { 'e', 'n', 'z', 'e' };$/;"	v	file:
s_6_24	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_24[5] = { 'i', 'r', 'i', 'a', 'm' };$/;"	v	file:
s_6_24	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_24[4] = { 'i', 'c', 'a', 's' };$/;"	v	file:
s_6_24	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_24[3] = { 'n', 0xC3, 0xA4 };$/;"	v	file:
s_6_24	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_24[5] = { 'e', 'r', 'a', 'i', 't' };$/;"	v	file:
s_6_24	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_24[4] = { 'e', 'n', 'z', 'e' };$/;"	v	file:
s_6_24	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_24[5] = { 'i', 'r', 'i', 'a', 'm' };$/;"	v	file:
s_6_24	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_24[4] = { 'i', 'c', 'a', 's' };$/;"	v	file:
s_6_25	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_25[3] = { 's', 's', 0xE4 };$/;"	v	file:
s_6_25	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_25[3] = { 'a', 'n', 't' };$/;"	v	file:
s_6_25	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_25[3] = { 'i', 'c', 'i' };$/;"	v	file:
s_6_25	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_25[4] = { 'a', 'r', 'a', 'm' };$/;"	v	file:
s_6_25	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_25[6] = { 'a', 'n', 'c', 'i', 'a', 's' };$/;"	v	file:
s_6_25	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_25[4] = { 's', 's', 0xC3, 0xA4 };$/;"	v	file:
s_6_25	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_25[3] = { 'a', 'n', 't' };$/;"	v	file:
s_6_25	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_25[3] = { 'i', 'c', 'i' };$/;"	v	file:
s_6_25	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_25[4] = { 'a', 'r', 'a', 'm' };$/;"	v	file:
s_6_25	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_25[6] = { 'a', 'n', 'c', 'i', 'a', 's' };$/;"	v	file:
s_6_26	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_26[2] = { 't', 0xE4 };$/;"	v	file:
s_6_26	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_26[5] = { 'a', 'I', 'e', 'n', 't' };$/;"	v	file:
s_6_26	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_26[6] = { 'a', 't', 'r', 'i', 'c', 'i' };$/;"	v	file:
s_6_26	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_26[4] = { 'e', 'r', 'a', 'm' };$/;"	v	file:
s_6_26	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_26[6] = { 'e', 'n', 'c', 'i', 'a', 's' };$/;"	v	file:
s_6_26	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_26[3] = { 't', 0xC3, 0xA4 };$/;"	v	file:
s_6_26	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_26[5] = { 'a', 'I', 'e', 'n', 't' };$/;"	v	file:
s_6_26	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_26[6] = { 'a', 't', 'r', 'i', 'c', 'i' };$/;"	v	file:
s_6_26	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_26[4] = { 'e', 'r', 'a', 'm' };$/;"	v	file:
s_6_26	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_26[6] = { 'e', 'n', 'c', 'i', 'a', 's' };$/;"	v	file:
s_6_27	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_27[3] = { 'l', 't', 0xE4 };$/;"	v	file:
s_6_27	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_27[7] = { 'e', 'r', 'a', 'I', 'e', 'n', 't' };$/;"	v	file:
s_6_27	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_27[4] = { 'i', 'c', 'h', 'i' };$/;"	v	file:
s_6_27	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_27[4] = { 'i', 'r', 'a', 'm' };$/;"	v	file:
s_6_27	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_27[6] = { 'a', 'd', 'o', 'r', 'a', 's' };$/;"	v	file:
s_6_27	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_27[4] = { 'l', 't', 0xC3, 0xA4 };$/;"	v	file:
s_6_27	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_27[7] = { 'e', 'r', 'a', 'I', 'e', 'n', 't' };$/;"	v	file:
s_6_27	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_27[4] = { 'i', 'c', 'h', 'i' };$/;"	v	file:
s_6_27	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_27[4] = { 'i', 'r', 'a', 'm' };$/;"	v	file:
s_6_27	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_27[6] = { 'a', 'd', 'o', 'r', 'a', 's' };$/;"	v	file:
s_6_28	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_28[3] = { 's', 't', 0xE4 };$/;"	v	file:
s_6_28	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_28[5] = { 0xE8, 'r', 'e', 'n', 't' };$/;"	v	file:
s_6_28	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_28[5] = { 'a', 'b', 'i', 'l', 'i' };$/;"	v	file:
s_6_28	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_28[4] = { 'a', 'v', 'a', 'm' };$/;"	v	file:
s_6_28	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_28[4] = { 'o', 's', 'a', 's' };$/;"	v	file:
s_6_28	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_28[4] = { 's', 't', 0xC3, 0xA4 };$/;"	v	file:
s_6_28	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_28[6] = { 0xC3, 0xA8, 'r', 'e', 'n', 't' };$/;"	v	file:
s_6_28	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_28[5] = { 'a', 'b', 'i', 'l', 'i' };$/;"	v	file:
s_6_28	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_28[4] = { 'a', 'v', 'a', 'm' };$/;"	v	file:
s_6_28	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_28[4] = { 'o', 's', 'a', 's' };$/;"	v	file:
s_6_29	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_29[3] = { 't', 't', 0xE4 };$/;"	v	file:
s_6_29	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_29[6] = { 'a', 's', 's', 'e', 'n', 't' };$/;"	v	file:
s_6_29	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_29[5] = { 'i', 'b', 'i', 'l', 'i' };$/;"	v	file:
s_6_29	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_29[2] = { 'e', 'm' };$/;"	v	file:
s_6_29	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_29[5] = { 'i', 's', 't', 'a', 's' };$/;"	v	file:
s_6_29	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_29[4] = { 't', 't', 0xC3, 0xA4 };$/;"	v	file:
s_6_29	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_29[6] = { 'a', 's', 's', 'e', 'n', 't' };$/;"	v	file:
s_6_29	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_29[5] = { 'i', 'b', 'i', 'l', 'i' };$/;"	v	file:
s_6_29	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_29[2] = { 'e', 'm' };$/;"	v	file:
s_6_29	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_29[5] = { 'i', 's', 't', 'a', 's' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_6_3[5] = { 'i', 'c', 'i', 't', 'i' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_3[3] = { 's', 's', 'a' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_3[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_3[4] = { 'i', 's', 't', 'a' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_3[4] = { 'a', 'r', 'i', 'a' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_3[5] = { 'a', 'd', 'o', 'r', 'a' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_6_3[4] = { 's', 't', 0xFC, 'l' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_6_3[5] = { 'i', 'c', 'i', 't', 'i' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_3[3] = { 's', 's', 'a' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_3[4] = { 'a', 'n', 't', 'e' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_6_3[5] = { 's', 't', 0xC3, 0xBC, 'l' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_3[4] = { 'i', 's', 't', 'a' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_3[4] = { 'a', 'r', 'i', 'a' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_3[5] = { 'a', 'd', 'o', 'r', 'a' };$/;"	v	file:
s_6_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_6_3[2] = { 't', 'e' };$/;"	v	file:
s_6_30	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_30[5] = { 'e', 'r', 'o', 'n', 't' };$/;"	v	file:
s_6_30	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_30[4] = { 'i', 's', 'm', 'i' };$/;"	v	file:
s_6_30	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_30[4] = { 'a', 'r', 'e', 'm' };$/;"	v	file:
s_6_30	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_30[4] = { 'i', 'v', 'a', 's' };$/;"	v	file:
s_6_30	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_30[5] = { 'e', 'r', 'o', 'n', 't' };$/;"	v	file:
s_6_30	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_30[4] = { 'i', 's', 'm', 'i' };$/;"	v	file:
s_6_30	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_30[4] = { 'a', 'r', 'e', 'm' };$/;"	v	file:
s_6_30	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_30[4] = { 'i', 'v', 'a', 's' };$/;"	v	file:
s_6_31	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_31[2] = { 0xE2, 't' };$/;"	v	file:
s_6_31	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_31[6] = { 'u', 's', 'i', 'o', 'n', 'i' };$/;"	v	file:
s_6_31	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_31[4] = { 'e', 'r', 'e', 'm' };$/;"	v	file:
s_6_31	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_31[5] = { 'a', 'n', 'z', 'a', 's' };$/;"	v	file:
s_6_31	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_31[3] = { 0xC3, 0xA2, 't' };$/;"	v	file:
s_6_31	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_31[6] = { 'u', 's', 'i', 'o', 'n', 'i' };$/;"	v	file:
s_6_31	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_31[4] = { 'e', 'r', 'e', 'm' };$/;"	v	file:
s_6_31	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_31[5] = { 'a', 'n', 'z', 'a', 's' };$/;"	v	file:
s_6_32	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_32[2] = { 'e', 'z' };$/;"	v	file:
s_6_32	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_32[6] = { 'a', 'z', 'i', 'o', 'n', 'i' };$/;"	v	file:
s_6_32	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_32[4] = { 'i', 'r', 'e', 'm' };$/;"	v	file:
s_6_32	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_32[6] = { 'l', 'o', 'g', 0xED, 'a', 's' };$/;"	v	file:
s_6_32	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_32[2] = { 'e', 'z' };$/;"	v	file:
s_6_32	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_32[6] = { 'a', 'z', 'i', 'o', 'n', 'i' };$/;"	v	file:
s_6_32	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_32[4] = { 'i', 'r', 'e', 'm' };$/;"	v	file:
s_6_32	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_32[7] = { 'l', 'o', 'g', 0xC3, 0xAD, 'a', 's' };$/;"	v	file:
s_6_33	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_33[3] = { 'i', 'e', 'z' };$/;"	v	file:
s_6_33	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_33[6] = { 'u', 'z', 'i', 'o', 'n', 'i' };$/;"	v	file:
s_6_33	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_33[5] = { 'a', 's', 's', 'e', 'm' };$/;"	v	file:
s_6_33	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_33[6] = { 'i', 'd', 'a', 'd', 'e', 's' };$/;"	v	file:
s_6_33	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_33[3] = { 'i', 'e', 'z' };$/;"	v	file:
s_6_33	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_33[6] = { 'u', 'z', 'i', 'o', 'n', 'i' };$/;"	v	file:
s_6_33	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_33[5] = { 'a', 's', 's', 'e', 'm' };$/;"	v	file:
s_6_33	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_33[6] = { 'i', 'd', 'a', 'd', 'e', 's' };$/;"	v	file:
s_6_34	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_34[5] = { 'e', 'r', 'i', 'e', 'z' };$/;"	v	file:
s_6_34	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_34[5] = { 'a', 't', 'o', 'r', 'i' };$/;"	v	file:
s_6_34	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_34[5] = { 'e', 's', 's', 'e', 'm' };$/;"	v	file:
s_6_34	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_34[5] = { 'a', 'b', 'l', 'e', 's' };$/;"	v	file:
s_6_34	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_34[5] = { 'e', 'r', 'i', 'e', 'z' };$/;"	v	file:
s_6_34	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_34[5] = { 'a', 't', 'o', 'r', 'i' };$/;"	v	file:
s_6_34	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_34[5] = { 'e', 's', 's', 'e', 'm' };$/;"	v	file:
s_6_34	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_34[5] = { 'a', 'b', 'l', 'e', 's' };$/;"	v	file:
s_6_35	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_35[6] = { 'a', 's', 's', 'i', 'e', 'z' };$/;"	v	file:
s_6_35	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_35[3] = { 'o', 's', 'i' };$/;"	v	file:
s_6_35	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_35[5] = { 'i', 's', 's', 'e', 'm' };$/;"	v	file:
s_6_35	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_35[5] = { 'i', 'b', 'l', 'e', 's' };$/;"	v	file:
s_6_35	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_35[6] = { 'a', 's', 's', 'i', 'e', 'z' };$/;"	v	file:
s_6_35	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_35[3] = { 'o', 's', 'i' };$/;"	v	file:
s_6_35	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_35[5] = { 'i', 's', 's', 'e', 'm' };$/;"	v	file:
s_6_35	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_35[5] = { 'i', 'b', 'l', 'e', 's' };$/;"	v	file:
s_6_36	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_36[4] = { 'e', 'r', 'e', 'z' };$/;"	v	file:
s_6_36	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_36[4] = { 'a', 'n', 't', 'i' };$/;"	v	file:
s_6_36	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_36[3] = { 'a', 'd', 'o' };$/;"	v	file:
s_6_36	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_36[7] = { 'a', 'c', 'i', 'o', 'n', 'e', 's' };$/;"	v	file:
s_6_36	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_36[4] = { 'e', 'r', 'e', 'z' };$/;"	v	file:
s_6_36	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_36[4] = { 'a', 'n', 't', 'i' };$/;"	v	file:
s_6_36	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_36[3] = { 'a', 'd', 'o' };$/;"	v	file:
s_6_36	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_36[7] = { 'a', 'c', 'i', 'o', 'n', 'e', 's' };$/;"	v	file:
s_6_37	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_37[1] = { 0xE9 };$/;"	v	file:
s_6_37	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_37[6] = { 'a', 'm', 'e', 'n', 't', 'i' };$/;"	v	file:
s_6_37	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_37[3] = { 'i', 'd', 'o' };$/;"	v	file:
s_6_37	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_37[7] = { 'u', 'c', 'i', 'o', 'n', 'e', 's' };$/;"	v	file:
s_6_37	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_37[2] = { 0xC3, 0xA9 };$/;"	v	file:
s_6_37	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_37[6] = { 'a', 'm', 'e', 'n', 't', 'i' };$/;"	v	file:
s_6_37	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_37[3] = { 'i', 'd', 'o' };$/;"	v	file:
s_6_37	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_37[7] = { 'u', 'c', 'i', 'o', 'n', 'e', 's' };$/;"	v	file:
s_6_38	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_38[6] = { 'i', 'm', 'e', 'n', 't', 'i' };$/;"	v	file:
s_6_38	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_38[4] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_6_38	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_38[6] = { 'a', 'd', 'o', 'r', 'e', 's' };$/;"	v	file:
s_6_38	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_38[6] = { 'i', 'm', 'e', 'n', 't', 'i' };$/;"	v	file:
s_6_38	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_38[4] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_6_38	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_38[6] = { 'a', 'd', 'o', 'r', 'e', 's' };$/;"	v	file:
s_6_39	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_39[4] = { 'i', 's', 't', 'i' };$/;"	v	file:
s_6_39	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_39[4] = { 'e', 'n', 'd', 'o' };$/;"	v	file:
s_6_39	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_39[5] = { 'a', 'n', 't', 'e', 's' };$/;"	v	file:
s_6_39	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_39[4] = { 'i', 's', 't', 'i' };$/;"	v	file:
s_6_39	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_39[4] = { 'e', 'n', 'd', 'o' };$/;"	v	file:
s_6_39	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_39[5] = { 'a', 'n', 't', 'e', 's' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_6_4[4] = { 'i', 'c', 'a', 'l' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_4[2] = { 't', 'a' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_4[2] = { 0xE9, 'e' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_4[3] = { 'i', 'v', 'a' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_4[4] = { 'e', 'r', 'i', 'a' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_4[3] = { 'o', 's', 'a' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_6_4[5] = { 'e', 's', 't', 0xFC, 'l' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_6_4[4] = { 'i', 'c', 'a', 'l' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_4[2] = { 't', 'a' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_4[3] = { 0xC3, 0xA9, 'e' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_6_4[6] = { 'e', 's', 't', 0xC3, 0xBC, 'l' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_4[3] = { 'i', 'v', 'a' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_4[4] = { 'e', 'r', 'i', 'a' };$/;"	v	file:
s_6_4	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_4[3] = { 'o', 's', 'a' };$/;"	v	file:
s_6_40	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_40[3] = { 'i', 'v', 'i' };$/;"	v	file:
s_6_40	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_40[4] = { 'i', 'n', 'd', 'o' };$/;"	v	file:
s_6_40	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_40[4] = { 'i', 'c', 'o', 's' };$/;"	v	file:
s_6_40	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_40[3] = { 'i', 'v', 'i' };$/;"	v	file:
s_6_40	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_40[4] = { 'i', 'n', 'd', 'o' };$/;"	v	file:
s_6_40	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_40[4] = { 'i', 'c', 'o', 's' };$/;"	v	file:
s_6_41	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_41[3] = { 'i', 'c', 'o' };$/;"	v	file:
s_6_41	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_41[5] = { 'a', 'r', 'a', '~', 'o' };$/;"	v	file:
s_6_41	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_41[5] = { 'i', 's', 'm', 'o', 's' };$/;"	v	file:
s_6_41	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_41[3] = { 'i', 'c', 'o' };$/;"	v	file:
s_6_41	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_41[5] = { 'a', 'r', 'a', '~', 'o' };$/;"	v	file:
s_6_41	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_41[5] = { 'i', 's', 'm', 'o', 's' };$/;"	v	file:
s_6_42	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_42[4] = { 'i', 's', 'm', 'o' };$/;"	v	file:
s_6_42	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_42[5] = { 'e', 'r', 'a', '~', 'o' };$/;"	v	file:
s_6_42	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_42[4] = { 'o', 's', 'o', 's' };$/;"	v	file:
s_6_42	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_42[4] = { 'i', 's', 'm', 'o' };$/;"	v	file:
s_6_42	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_42[5] = { 'e', 'r', 'a', '~', 'o' };$/;"	v	file:
s_6_42	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_42[4] = { 'o', 's', 'o', 's' };$/;"	v	file:
s_6_43	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_43[3] = { 'o', 's', 'o' };$/;"	v	file:
s_6_43	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_43[5] = { 'i', 'r', 'a', '~', 'o' };$/;"	v	file:
s_6_43	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_43[8] = { 'a', 'm', 'i', 'e', 'n', 't', 'o', 's' };$/;"	v	file:
s_6_43	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_43[3] = { 'o', 's', 'o' };$/;"	v	file:
s_6_43	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_43[5] = { 'i', 'r', 'a', '~', 'o' };$/;"	v	file:
s_6_43	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_43[8] = { 'a', 'm', 'i', 'e', 'n', 't', 'o', 's' };$/;"	v	file:
s_6_44	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_44[6] = { 'a', 'm', 'e', 'n', 't', 'o' };$/;"	v	file:
s_6_44	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_44[2] = { 'a', 'r' };$/;"	v	file:
s_6_44	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_44[8] = { 'i', 'm', 'i', 'e', 'n', 't', 'o', 's' };$/;"	v	file:
s_6_44	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_44[6] = { 'a', 'm', 'e', 'n', 't', 'o' };$/;"	v	file:
s_6_44	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_44[2] = { 'a', 'r' };$/;"	v	file:
s_6_44	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_44[8] = { 'i', 'm', 'i', 'e', 'n', 't', 'o', 's' };$/;"	v	file:
s_6_45	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_45[6] = { 'i', 'm', 'e', 'n', 't', 'o' };$/;"	v	file:
s_6_45	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_45[2] = { 'e', 'r' };$/;"	v	file:
s_6_45	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_45[4] = { 'i', 'v', 'o', 's' };$/;"	v	file:
s_6_45	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_45[6] = { 'i', 'm', 'e', 'n', 't', 'o' };$/;"	v	file:
s_6_45	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_45[2] = { 'e', 'r' };$/;"	v	file:
s_6_45	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_45[4] = { 'i', 'v', 'o', 's' };$/;"	v	file:
s_6_46	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_46[3] = { 'i', 'v', 'o' };$/;"	v	file:
s_6_46	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_46[2] = { 'i', 'r' };$/;"	v	file:
s_6_46	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_46[3] = { 'i', 'v', 'o' };$/;"	v	file:
s_6_46	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_46[2] = { 'i', 'r' };$/;"	v	file:
s_6_47	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_47[3] = { 'i', 't', 0xE0 };$/;"	v	file:
s_6_47	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_47[2] = { 'a', 's' };$/;"	v	file:
s_6_47	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_47[4] = { 'i', 't', 0xC3, 0xA0 };$/;"	v	file:
s_6_47	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_47[2] = { 'a', 's' };$/;"	v	file:
s_6_48	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_48[4] = { 'i', 's', 't', 0xE0 };$/;"	v	file:
s_6_48	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_48[4] = { 'a', 'd', 'a', 's' };$/;"	v	file:
s_6_48	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_48[5] = { 'i', 's', 't', 0xC3, 0xA0 };$/;"	v	file:
s_6_48	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_48[4] = { 'a', 'd', 'a', 's' };$/;"	v	file:
s_6_49	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_49[4] = { 'i', 's', 't', 0xE8 };$/;"	v	file:
s_6_49	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_49[4] = { 'i', 'd', 'a', 's' };$/;"	v	file:
s_6_49	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_49[5] = { 'i', 's', 't', 0xC3, 0xA8 };$/;"	v	file:
s_6_49	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_49[4] = { 'i', 'd', 'a', 's' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_6_5[6] = { 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_5[3] = { 'l', 't', 'a' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_5[2] = { 'a', 'i' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_5[4] = { 'a', 'n', 'z', 'a' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_5[4] = { 'i', 'r', 'i', 'a' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_5[4] = { 'i', 's', 't', 'a' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_6_5[5] = { 0xE9, 's', 't', 0xFC, 'l' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_6_5[6] = { 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_5[3] = { 'l', 't', 'a' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_5[2] = { 'a', 'i' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_6_5[7] = { 0xC3, 0xA9, 's', 't', 0xC3, 0xBC, 'l' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_5[4] = { 'a', 'n', 'z', 'a' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_5[4] = { 'i', 'r', 'i', 'a' };$/;"	v	file:
s_6_5	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_5[4] = { 'i', 's', 't', 'a' };$/;"	v	file:
s_6_50	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_50[4] = { 'i', 's', 't', 0xEC };$/;"	v	file:
s_6_50	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_50[3] = { 'i', 'a', 's' };$/;"	v	file:
s_6_50	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_50[5] = { 'i', 's', 't', 0xC3, 0xAC };$/;"	v	file:
s_6_50	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_50[3] = { 'i', 'a', 's' };$/;"	v	file:
s_6_51	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_51[5] = { 'a', 'r', 'i', 'a', 's' };$/;"	v	file:
s_6_51	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_51[5] = { 'a', 'r', 'i', 'a', 's' };$/;"	v	file:
s_6_52	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_52[5] = { 'e', 'r', 'i', 'a', 's' };$/;"	v	file:
s_6_52	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_52[5] = { 'e', 'r', 'i', 'a', 's' };$/;"	v	file:
s_6_53	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_53[5] = { 'i', 'r', 'i', 'a', 's' };$/;"	v	file:
s_6_53	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_53[5] = { 'i', 'r', 'i', 'a', 's' };$/;"	v	file:
s_6_54	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_54[4] = { 'a', 'r', 'a', 's' };$/;"	v	file:
s_6_54	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_54[4] = { 'a', 'r', 'a', 's' };$/;"	v	file:
s_6_55	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_55[4] = { 'e', 'r', 'a', 's' };$/;"	v	file:
s_6_55	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_55[4] = { 'e', 'r', 'a', 's' };$/;"	v	file:
s_6_56	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_56[4] = { 'i', 'r', 'a', 's' };$/;"	v	file:
s_6_56	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_56[4] = { 'i', 'r', 'a', 's' };$/;"	v	file:
s_6_57	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_57[4] = { 'a', 'v', 'a', 's' };$/;"	v	file:
s_6_57	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_57[4] = { 'a', 'v', 'a', 's' };$/;"	v	file:
s_6_58	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_58[2] = { 'e', 's' };$/;"	v	file:
s_6_58	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_58[2] = { 'e', 's' };$/;"	v	file:
s_6_59	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_59[5] = { 'a', 'r', 'd', 'e', 's' };$/;"	v	file:
s_6_59	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_59[5] = { 'a', 'r', 'd', 'e', 's' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_6_6[7] = { 'a', 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_6[3] = { 's', 't', 'a' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_6[4] = { 'e', 'r', 'a', 'i' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_6[4] = { 'e', 'n', 'z', 'a' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_6[3] = { 'a', 'r', 'a' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_6[3] = { 'i', 'v', 'a' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_6_6[7] = { 'a', 't', 'i', 'o', 'n', 'a', 'l' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_6[3] = { 's', 't', 'a' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_6[4] = { 'e', 'r', 'a', 'i' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_6[4] = { 'e', 'n', 'z', 'a' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_6[3] = { 'a', 'r', 'a' };$/;"	v	file:
s_6_6	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_6[3] = { 'i', 'v', 'a' };$/;"	v	file:
s_6_60	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_60[5] = { 'e', 'r', 'd', 'e', 's' };$/;"	v	file:
s_6_60	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_60[5] = { 'e', 'r', 'd', 'e', 's' };$/;"	v	file:
s_6_61	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_61[5] = { 'i', 'r', 'd', 'e', 's' };$/;"	v	file:
s_6_61	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_61[5] = { 'i', 'r', 'd', 'e', 's' };$/;"	v	file:
s_6_62	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_62[4] = { 'a', 'r', 'e', 's' };$/;"	v	file:
s_6_62	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_62[4] = { 'a', 'r', 'e', 's' };$/;"	v	file:
s_6_63	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_63[4] = { 'e', 'r', 'e', 's' };$/;"	v	file:
s_6_63	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_63[4] = { 'e', 'r', 'e', 's' };$/;"	v	file:
s_6_64	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_64[4] = { 'i', 'r', 'e', 's' };$/;"	v	file:
s_6_64	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_64[4] = { 'i', 'r', 'e', 's' };$/;"	v	file:
s_6_65	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_65[5] = { 'a', 's', 's', 'e', 's' };$/;"	v	file:
s_6_65	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_65[5] = { 'a', 's', 's', 'e', 's' };$/;"	v	file:
s_6_66	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_66[5] = { 'e', 's', 's', 'e', 's' };$/;"	v	file:
s_6_66	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_66[5] = { 'e', 's', 's', 'e', 's' };$/;"	v	file:
s_6_67	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_67[5] = { 'i', 's', 's', 'e', 's' };$/;"	v	file:
s_6_67	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_67[5] = { 'i', 's', 's', 'e', 's' };$/;"	v	file:
s_6_68	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_68[5] = { 'a', 's', 't', 'e', 's' };$/;"	v	file:
s_6_68	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_68[5] = { 'a', 's', 't', 'e', 's' };$/;"	v	file:
s_6_69	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_69[5] = { 'e', 's', 't', 'e', 's' };$/;"	v	file:
s_6_69	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_69[5] = { 'e', 's', 't', 'e', 's' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_6_7[3] = { 'f', 'u', 'l' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_7[3] = { 't', 't', 'a' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_7[2] = { 'e', 'r' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_7[3] = { 'i', 'c', 'e' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_7[3] = { 'e', 'r', 'a' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_7[4] = { 'a', 'n', 'z', 'a' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_6_7[3] = { 'f', 'u', 'l' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_7[3] = { 't', 't', 'a' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_7[2] = { 'e', 'r' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_7[3] = { 'i', 'c', 'e' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_7[3] = { 'e', 'r', 'a' };$/;"	v	file:
s_6_7	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_7[4] = { 'a', 'n', 'z', 'a' };$/;"	v	file:
s_6_70	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_70[5] = { 'i', 's', 't', 'e', 's' };$/;"	v	file:
s_6_70	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_70[5] = { 'i', 's', 't', 'e', 's' };$/;"	v	file:
s_6_71	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_71[2] = { 'i', 's' };$/;"	v	file:
s_6_71	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_71[2] = { 'i', 's' };$/;"	v	file:
s_6_72	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_72[3] = { 'a', 'i', 's' };$/;"	v	file:
s_6_72	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_72[3] = { 'a', 'i', 's' };$/;"	v	file:
s_6_73	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_73[3] = { 'e', 'i', 's' };$/;"	v	file:
s_6_73	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_73[3] = { 'e', 'i', 's' };$/;"	v	file:
s_6_74	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_74[5] = { 'a', 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_74	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_74[5] = { 'a', 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_75	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_75[5] = { 'e', 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_75	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_75[5] = { 'e', 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_76	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_76[5] = { 'i', 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_76	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_76[5] = { 'i', 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_77	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_77[5] = { 0xE1, 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_77	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_77[6] = { 0xC3, 0xA1, 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_78	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_78[5] = { 0xE9, 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_78	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_78[6] = { 0xC3, 0xA9, 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_79	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_79[5] = { 0xED, 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_79	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_79[6] = { 0xC3, 0xAD, 'r', 'e', 'i', 's' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_6_8[4] = { 'n', 'e', 's', 's' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_8[3] = { 'l', 'l', 'e' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_8[2] = { 'a', 's' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_8[6] = { 'a', 't', 'r', 'i', 'c', 'e' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_8[3] = { 'i', 'r', 'a' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_8[5] = { 'l', 'o', 'g', 0xED, 'a' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_6_8[4] = { 'n', 'e', 's', 's' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_8[3] = { 'l', 'l', 'e' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_8[2] = { 'a', 's' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_8[6] = { 'a', 't', 'r', 'i', 'c', 'e' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_8[3] = { 'i', 'r', 'a' };$/;"	v	file:
s_6_8	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_8[6] = { 'l', 'o', 'g', 0xC3, 0xAD, 'a' };$/;"	v	file:
s_6_80	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_80[6] = { 0xE1, 's', 's', 'e', 'i', 's' };$/;"	v	file:
s_6_80	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_80[7] = { 0xC3, 0xA1, 's', 's', 'e', 'i', 's' };$/;"	v	file:
s_6_81	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_81[6] = { 0xE9, 's', 's', 'e', 'i', 's' };$/;"	v	file:
s_6_81	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_81[7] = { 0xC3, 0xA9, 's', 's', 'e', 'i', 's' };$/;"	v	file:
s_6_82	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_82[6] = { 0xED, 's', 's', 'e', 'i', 's' };$/;"	v	file:
s_6_82	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_82[7] = { 0xC3, 0xAD, 's', 's', 'e', 'i', 's' };$/;"	v	file:
s_6_83	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_83[5] = { 0xE1, 'v', 'e', 'i', 's' };$/;"	v	file:
s_6_83	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_83[6] = { 0xC3, 0xA1, 'v', 'e', 'i', 's' };$/;"	v	file:
s_6_84	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_84[4] = { 0xED, 'e', 'i', 's' };$/;"	v	file:
s_6_84	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_84[5] = { 0xC3, 0xAD, 'e', 'i', 's' };$/;"	v	file:
s_6_85	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_85[6] = { 'a', 'r', 0xED, 'e', 'i', 's' };$/;"	v	file:
s_6_85	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_85[7] = { 'a', 'r', 0xC3, 0xAD, 'e', 'i', 's' };$/;"	v	file:
s_6_86	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_86[6] = { 'e', 'r', 0xED, 'e', 'i', 's' };$/;"	v	file:
s_6_86	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_86[7] = { 'e', 'r', 0xC3, 0xAD, 'e', 'i', 's' };$/;"	v	file:
s_6_87	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_87[6] = { 'i', 'r', 0xED, 'e', 'i', 's' };$/;"	v	file:
s_6_87	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_87[7] = { 'i', 'r', 0xC3, 0xAD, 'e', 'i', 's' };$/;"	v	file:
s_6_88	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_88[4] = { 'a', 'd', 'o', 's' };$/;"	v	file:
s_6_88	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_88[4] = { 'a', 'd', 'o', 's' };$/;"	v	file:
s_6_89	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_89[4] = { 'i', 'd', 'o', 's' };$/;"	v	file:
s_6_89	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_89[4] = { 'i', 'd', 'o', 's' };$/;"	v	file:
s_6_9	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_6_9[3] = { 'i', 'n', 'e' };$/;"	v	file:
s_6_9	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_6_9[4] = { 'e', 'r', 'a', 's' };$/;"	v	file:
s_6_9	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_6_9[4] = { 'i', 'c', 'h', 'e' };$/;"	v	file:
s_6_9	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_9[3] = { 'a', 'v', 'a' };$/;"	v	file:
s_6_9	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_6_9[4] = { 'i', 'd', 'a', 'd' };$/;"	v	file:
s_6_9	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_6_9[3] = { 'i', 'n', 'e' };$/;"	v	file:
s_6_9	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_6_9[4] = { 'e', 'r', 'a', 's' };$/;"	v	file:
s_6_9	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_6_9[4] = { 'i', 'c', 'h', 'e' };$/;"	v	file:
s_6_9	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_9[3] = { 'a', 'v', 'a' };$/;"	v	file:
s_6_9	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_6_9[4] = { 'i', 'd', 'a', 'd' };$/;"	v	file:
s_6_90	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_90[4] = { 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_90	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_90[4] = { 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_91	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_91[6] = { 0xE1, 'r', 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_91	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_91[7] = { 0xC3, 0xA1, 'r', 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_92	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_92[6] = { 0xE9, 'r', 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_92	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_92[7] = { 0xC3, 0xA9, 'r', 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_93	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_93[6] = { 0xED, 'r', 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_93	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_93[7] = { 0xC3, 0xAD, 'r', 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_94	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_94[6] = { 0xE1, 'v', 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_94	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_94[7] = { 0xC3, 0xA1, 'v', 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_95	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_95[5] = { 0xED, 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_95	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_95[6] = { 0xC3, 0xAD, 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_96	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_96[7] = { 'a', 'r', 0xED, 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_96	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_96[8] = { 'a', 'r', 0xC3, 0xAD, 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_97	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_97[7] = { 'e', 'r', 0xED, 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_97	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_97[8] = { 'e', 'r', 0xC3, 0xAD, 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_98	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_98[7] = { 'i', 'r', 0xED, 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_98	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_98[8] = { 'i', 'r', 0xC3, 0xAD, 'a', 'm', 'o', 's' };$/;"	v	file:
s_6_99	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_6_99[4] = { 'e', 'm', 'o', 's' };$/;"	v	file:
s_6_99	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_6_99[4] = { 'e', 'm', 'o', 's' };$/;"	v	file:
s_7	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_7[] = { 'i' };$/;"	v	file:
s_7	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7[] = { 'i', 'e' };$/;"	v	file:
s_7	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7[] = { 'o' };$/;"	v	file:
s_7	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_7[] = { 'Y' };$/;"	v	file:
s_7	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_7[] = { 'u' };$/;"	v	file:
s_7	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7[] = { 'U' };$/;"	v	file:
s_7	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_7[] = { 'i' };$/;"	v	file:
s_7	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_7[] = { 'a', 't' };$/;"	v	file:
s_7	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7[] = { 'a', 'r' };$/;"	v	file:
s_7	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_7[] = { 'a' };$/;"	v	file:
s_7	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_7[] = { 'e' };$/;"	v	file:
s_7	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_7[] = { 0xCE };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_7[] = { 'i' };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7[] = { 'i', 'e' };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7[] = { 'o' };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_7[] = { 'Y' };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_7[] = { 'u' };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_7[] = { 'a' };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7[] = { 'U' };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_7[] = { 'i' };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_7[] = { 'a', 't' };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_7[] = { 'e' };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_7[] = { 0xD0, 0xBD };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7[] = { 'a', 'r' };$/;"	v	file:
s_7	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_7[] = { 0xC3, 0xBC };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_0[2] = { 'i', 'c' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_0[3] = { 'e', 'j', 'a' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_7_0[1] = { 'e' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_0[4] = { 'i', 's', 'c', 'a' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_7_0[1] = { 'a' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_0[2] = { 'y', 'a' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_7_0[1] = { 0xE1 };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_7_0[4] = { 0xC5, 0xCA, 0xDB, 0xC5 };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_0[2] = { 'i', 'c' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_0[3] = { 'e', 'j', 'a' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_7_0[1] = { 'e' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_7_0[2] = { 0xC3, 0xA1 };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_0[4] = { 'i', 's', 'c', 'a' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_7_0[1] = { 'a' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_7_0[6] = { 0xD0, 0xB5, 0xD0, 0xB9, 0xD1, 0x88 };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_0[2] = { 'y', 'a' };$/;"	v	file:
s_7_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_7_0[3] = { 'n', 'd', 'a' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_1[4] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_1[3] = { 'm', 'm', 'a' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_7_1[4] = { 'I', 0xE8, 'r', 'e' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_1[4] = { 'e', 'n', 'd', 'a' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_7_1[1] = { 'i' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_1[2] = { 'y', 'e' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_7_1[1] = { 0xE9 };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_7_1[1] = { 0xCE };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_1[4] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_1[3] = { 'm', 'm', 'a' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_7_1[5] = { 'I', 0xC3, 0xA8, 'r', 'e' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_7_1[2] = { 0xC3, 0xA9 };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_1[4] = { 'e', 'n', 'd', 'a' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_7_1[1] = { 'i' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_7_1[2] = { 0xD1, 0x8C };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_1[2] = { 'y', 'e' };$/;"	v	file:
s_7_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_7_1[3] = { 'n', 'd', 'e' };$/;"	v	file:
s_7_10	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_10[3] = { 'i', 's', 'm' };$/;"	v	file:
s_7_10	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_10[3] = { 'm', 'm', 0xE4 };$/;"	v	file:
s_7_10	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_10[4] = { 'i', 's', 'c', 'e' };$/;"	v	file:
s_7_10	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_10[5] = { 'y', 'a', 'm', 'o', 's' };$/;"	v	file:
s_7_10	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_10[3] = { 'i', 's', 'm' };$/;"	v	file:
s_7_10	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_10[4] = { 'm', 'm', 0xC3, 0xA4 };$/;"	v	file:
s_7_10	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_10[4] = { 'i', 's', 'c', 'e' };$/;"	v	file:
s_7_10	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_10[5] = { 'y', 'a', 'm', 'o', 's' };$/;"	v	file:
s_7_11	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_11[3] = { 'i', 'o', 'n' };$/;"	v	file:
s_7_11	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_11[4] = { 'i', 'm', 'm', 0xE4 };$/;"	v	file:
s_7_11	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_11[4] = { 'e', 'n', 'd', 'e' };$/;"	v	file:
s_7_11	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_11[2] = { 'y', 0xF3 };$/;"	v	file:
s_7_11	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_11[3] = { 'i', 'o', 'n' };$/;"	v	file:
s_7_11	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_11[5] = { 'i', 'm', 'm', 0xC3, 0xA4 };$/;"	v	file:
s_7_11	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_11[4] = { 'e', 'n', 'd', 'e' };$/;"	v	file:
s_7_11	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_11[3] = { 'y', 0xC3, 0xB3 };$/;"	v	file:
s_7_12	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_12[2] = { 'e', 'r' };$/;"	v	file:
s_7_12	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_12[3] = { 'm', 'p', 0xE4 };$/;"	v	file:
s_7_12	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_12[3] = { 'a', 'r', 'e' };$/;"	v	file:
s_7_12	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_12[2] = { 'e', 'r' };$/;"	v	file:
s_7_12	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_12[4] = { 'm', 'p', 0xC3, 0xA4 };$/;"	v	file:
s_7_12	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_12[3] = { 'a', 'r', 'e' };$/;"	v	file:
s_7_13	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_13[3] = { 'o', 'u', 's' };$/;"	v	file:
s_7_13	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_13[4] = { 'i', 'm', 'p', 0xE4 };$/;"	v	file:
s_7_13	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_13[3] = { 'e', 'r', 'e' };$/;"	v	file:
s_7_13	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_13[3] = { 'o', 'u', 's' };$/;"	v	file:
s_7_13	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_13[5] = { 'i', 'm', 'p', 0xC3, 0xA4 };$/;"	v	file:
s_7_13	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_13[3] = { 'e', 'r', 'e' };$/;"	v	file:
s_7_14	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_14[3] = { 'a', 'n', 't' };$/;"	v	file:
s_7_14	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_14[3] = { 'i', 'r', 'e' };$/;"	v	file:
s_7_14	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_14[3] = { 'a', 'n', 't' };$/;"	v	file:
s_7_14	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_14[3] = { 'i', 'r', 'e' };$/;"	v	file:
s_7_15	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_15[3] = { 'e', 'n', 't' };$/;"	v	file:
s_7_15	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_15[4] = { 'a', 's', 's', 'e' };$/;"	v	file:
s_7_15	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_15[3] = { 'e', 'n', 't' };$/;"	v	file:
s_7_15	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_15[4] = { 'a', 's', 's', 'e' };$/;"	v	file:
s_7_16	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_16[4] = { 'm', 'e', 'n', 't' };$/;"	v	file:
s_7_16	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_16[3] = { 'a', 't', 'e' };$/;"	v	file:
s_7_16	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_16[4] = { 'm', 'e', 'n', 't' };$/;"	v	file:
s_7_16	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_16[3] = { 'a', 't', 'e' };$/;"	v	file:
s_7_17	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_17[5] = { 'e', 'm', 'e', 'n', 't' };$/;"	v	file:
s_7_17	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_17[5] = { 'a', 'v', 'a', 't', 'e' };$/;"	v	file:
s_7_17	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_17[5] = { 'e', 'm', 'e', 'n', 't' };$/;"	v	file:
s_7_17	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_17[5] = { 'a', 'v', 'a', 't', 'e' };$/;"	v	file:
s_7_18	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_18[5] = { 'e', 'v', 'a', 't', 'e' };$/;"	v	file:
s_7_18	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_18[5] = { 'e', 'v', 'a', 't', 'e' };$/;"	v	file:
s_7_19	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_19[5] = { 'i', 'v', 'a', 't', 'e' };$/;"	v	file:
s_7_19	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_19[5] = { 'i', 'v', 'a', 't', 'e' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_2[4] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_2[4] = { 'i', 'm', 'm', 'a' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_7_2[4] = { 'i', 0xE8, 'r', 'e' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_2[3] = { 'a', 't', 'a' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_7_2[1] = { 'o' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_2[3] = { 'y', 'a', 'n' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_7_2[1] = { 0xD8 };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_2[4] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_2[4] = { 'i', 'm', 'm', 'a' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_7_2[5] = { 'i', 0xC3, 0xA8, 'r', 'e' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_2[3] = { 'a', 't', 'a' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_7_2[1] = { 'o' };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_7_2[8] = { 0xD0, 0xB5, 0xD0, 0xB9, 0xD1, 0x88, 0xD0, 0xB5 };$/;"	v	file:
s_7_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_2[3] = { 'y', 'a', 'n' };$/;"	v	file:
s_7_20	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_20[3] = { 'e', 't', 'e' };$/;"	v	file:
s_7_20	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_20[3] = { 'e', 't', 'e' };$/;"	v	file:
s_7_21	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_21[5] = { 'e', 'r', 'e', 't', 'e' };$/;"	v	file:
s_7_21	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_21[5] = { 'e', 'r', 'e', 't', 'e' };$/;"	v	file:
s_7_22	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_22[5] = { 'i', 'r', 'e', 't', 'e' };$/;"	v	file:
s_7_22	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_22[5] = { 'i', 'r', 'e', 't', 'e' };$/;"	v	file:
s_7_23	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_23[3] = { 'i', 't', 'e' };$/;"	v	file:
s_7_23	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_23[3] = { 'i', 't', 'e' };$/;"	v	file:
s_7_24	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_24[6] = { 'e', 'r', 'e', 's', 't', 'e' };$/;"	v	file:
s_7_24	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_24[6] = { 'e', 'r', 'e', 's', 't', 'e' };$/;"	v	file:
s_7_25	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_25[6] = { 'i', 'r', 'e', 's', 't', 'e' };$/;"	v	file:
s_7_25	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_25[6] = { 'i', 'r', 'e', 's', 't', 'e' };$/;"	v	file:
s_7_26	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_26[3] = { 'u', 't', 'e' };$/;"	v	file:
s_7_26	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_26[3] = { 'u', 't', 'e' };$/;"	v	file:
s_7_27	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_27[4] = { 'e', 'r', 'a', 'i' };$/;"	v	file:
s_7_27	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_27[4] = { 'e', 'r', 'a', 'i' };$/;"	v	file:
s_7_28	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_28[4] = { 'i', 'r', 'a', 'i' };$/;"	v	file:
s_7_28	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_28[4] = { 'i', 'r', 'a', 'i' };$/;"	v	file:
s_7_29	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_29[4] = { 'i', 's', 'c', 'i' };$/;"	v	file:
s_7_29	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_29[4] = { 'i', 's', 'c', 'i' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_3[4] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_3[3] = { 'm', 'p', 'a' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_7_3[3] = { 'i', 'o', 'n' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_3[3] = { 'i', 't', 'a' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_7_3[2] = { 'o', 's' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_3[3] = { 'y', 'e', 'n' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_7_3[3] = { 0xC5, 0xCA, 0xDB };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_3[4] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_3[3] = { 'm', 'p', 'a' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_7_3[3] = { 'i', 'o', 'n' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_3[3] = { 'i', 't', 'a' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_7_3[2] = { 'o', 's' };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_7_3[2] = { 0xD0, 0xBD };$/;"	v	file:
s_7_3	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_3[3] = { 'y', 'e', 'n' };$/;"	v	file:
s_7_30	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_30[4] = { 'e', 'n', 'd', 'i' };$/;"	v	file:
s_7_30	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_30[4] = { 'e', 'n', 'd', 'i' };$/;"	v	file:
s_7_31	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_31[4] = { 'e', 'r', 'e', 'i' };$/;"	v	file:
s_7_31	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_31[4] = { 'e', 'r', 'e', 'i' };$/;"	v	file:
s_7_32	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_32[4] = { 'i', 'r', 'e', 'i' };$/;"	v	file:
s_7_32	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_32[4] = { 'i', 'r', 'e', 'i' };$/;"	v	file:
s_7_33	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_33[4] = { 'a', 's', 's', 'i' };$/;"	v	file:
s_7_33	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_33[4] = { 'a', 's', 's', 'i' };$/;"	v	file:
s_7_34	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_34[3] = { 'a', 't', 'i' };$/;"	v	file:
s_7_34	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_34[3] = { 'a', 't', 'i' };$/;"	v	file:
s_7_35	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_35[3] = { 'i', 't', 'i' };$/;"	v	file:
s_7_35	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_35[3] = { 'i', 't', 'i' };$/;"	v	file:
s_7_36	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_36[6] = { 'e', 'r', 'e', 's', 't', 'i' };$/;"	v	file:
s_7_36	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_36[6] = { 'e', 'r', 'e', 's', 't', 'i' };$/;"	v	file:
s_7_37	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_37[6] = { 'i', 'r', 'e', 's', 't', 'i' };$/;"	v	file:
s_7_37	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_37[6] = { 'i', 'r', 'e', 's', 't', 'i' };$/;"	v	file:
s_7_38	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_38[3] = { 'u', 't', 'i' };$/;"	v	file:
s_7_38	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_38[3] = { 'u', 't', 'i' };$/;"	v	file:
s_7_39	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_39[3] = { 'a', 'v', 'i' };$/;"	v	file:
s_7_39	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_39[3] = { 'a', 'v', 'i' };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_4[4] = { 'i', 'b', 'l', 'e' };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_4[4] = { 'i', 'm', 'p', 'a' };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_7_4[3] = { 'I', 'e', 'r' };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_4[3] = { 'u', 't', 'a' };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_7_4[1] = { 0xE1 };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_4[5] = { 'y', 'e', 'r', 'o', 'n' };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_4[4] = { 'i', 'b', 'l', 'e' };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_4[4] = { 'i', 'm', 'p', 'a' };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_7_4[3] = { 'I', 'e', 'r' };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_4[3] = { 'u', 't', 'a' };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_7_4[2] = { 0xC3, 0xA1 };$/;"	v	file:
s_7_4	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_4[5] = { 'y', 'e', 'r', 'o', 'n' };$/;"	v	file:
s_7_40	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_40[3] = { 'e', 'v', 'i' };$/;"	v	file:
s_7_40	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_40[3] = { 'e', 'v', 'i' };$/;"	v	file:
s_7_41	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_41[3] = { 'i', 'v', 'i' };$/;"	v	file:
s_7_41	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_41[3] = { 'i', 'v', 'i' };$/;"	v	file:
s_7_42	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_42[4] = { 'i', 's', 'c', 'o' };$/;"	v	file:
s_7_42	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_42[4] = { 'i', 's', 'c', 'o' };$/;"	v	file:
s_7_43	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_43[4] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_7_43	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_43[4] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_7_44	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_44[4] = { 'e', 'n', 'd', 'o' };$/;"	v	file:
s_7_44	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_44[4] = { 'e', 'n', 'd', 'o' };$/;"	v	file:
s_7_45	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_45[4] = { 'Y', 'a', 'm', 'o' };$/;"	v	file:
s_7_45	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_45[4] = { 'Y', 'a', 'm', 'o' };$/;"	v	file:
s_7_46	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_46[4] = { 'i', 'a', 'm', 'o' };$/;"	v	file:
s_7_46	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_46[4] = { 'i', 'a', 'm', 'o' };$/;"	v	file:
s_7_47	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_47[5] = { 'a', 'v', 'a', 'm', 'o' };$/;"	v	file:
s_7_47	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_47[5] = { 'a', 'v', 'a', 'm', 'o' };$/;"	v	file:
s_7_48	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_48[5] = { 'e', 'v', 'a', 'm', 'o' };$/;"	v	file:
s_7_48	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_48[5] = { 'e', 'v', 'a', 'm', 'o' };$/;"	v	file:
s_7_49	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_49[5] = { 'i', 'v', 'a', 'm', 'o' };$/;"	v	file:
s_7_49	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_49[5] = { 'i', 'v', 'a', 'm', 'o' };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_5[3] = { 'a', 't', 'e' };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_5[3] = { 'm', 'm', 'i' };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_7_5[3] = { 'i', 'e', 'r' };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_5[3] = { 'a', 'v', 'a' };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_7_5[1] = { 0xED };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_5[5] = { 'y', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_5[3] = { 'a', 't', 'e' };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_5[3] = { 'm', 'm', 'i' };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_7_5[3] = { 'i', 'e', 'r' };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_5[3] = { 'a', 'v', 'a' };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_7_5[2] = { 0xC3, 0xAD };$/;"	v	file:
s_7_5	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_5[5] = { 'y', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_7_50	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_50[5] = { 'e', 'r', 'e', 'm', 'o' };$/;"	v	file:
s_7_50	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_50[5] = { 'e', 'r', 'e', 'm', 'o' };$/;"	v	file:
s_7_51	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_51[5] = { 'i', 'r', 'e', 'm', 'o' };$/;"	v	file:
s_7_51	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_51[5] = { 'i', 'r', 'e', 'm', 'o' };$/;"	v	file:
s_7_52	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_52[6] = { 'a', 's', 's', 'i', 'm', 'o' };$/;"	v	file:
s_7_52	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_52[6] = { 'a', 's', 's', 'i', 'm', 'o' };$/;"	v	file:
s_7_53	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_53[4] = { 'a', 'm', 'm', 'o' };$/;"	v	file:
s_7_53	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_53[4] = { 'a', 'm', 'm', 'o' };$/;"	v	file:
s_7_54	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_54[4] = { 'e', 'm', 'm', 'o' };$/;"	v	file:
s_7_54	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_54[4] = { 'e', 'm', 'm', 'o' };$/;"	v	file:
s_7_55	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_55[6] = { 'e', 'r', 'e', 'm', 'm', 'o' };$/;"	v	file:
s_7_55	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_55[6] = { 'e', 'r', 'e', 'm', 'm', 'o' };$/;"	v	file:
s_7_56	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_56[6] = { 'i', 'r', 'e', 'm', 'm', 'o' };$/;"	v	file:
s_7_56	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_56[6] = { 'i', 'r', 'e', 'm', 'm', 'o' };$/;"	v	file:
s_7_57	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_57[4] = { 'i', 'm', 'm', 'o' };$/;"	v	file:
s_7_57	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_57[4] = { 'i', 'm', 'm', 'o' };$/;"	v	file:
s_7_58	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_58[3] = { 'a', 'n', 'o' };$/;"	v	file:
s_7_58	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_58[3] = { 'a', 'n', 'o' };$/;"	v	file:
s_7_59	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_59[6] = { 'i', 's', 'c', 'a', 'n', 'o' };$/;"	v	file:
s_7_59	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_59[6] = { 'i', 's', 'c', 'a', 'n', 'o' };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_6[3] = { 'i', 'v', 'e' };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_6[4] = { 'i', 'm', 'm', 'i' };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_7_6[1] = { 0xEB };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_6[3] = { 'e', 'v', 'a' };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_7_6[1] = { 0xF3 };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_6[2] = { 'y', 'o' };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_6[3] = { 'i', 'v', 'e' };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_6[4] = { 'i', 'm', 'm', 'i' };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_7_6[2] = { 0xC3, 0xAB };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_6[3] = { 'e', 'v', 'a' };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_7_6[2] = { 0xC3, 0xB3 };$/;"	v	file:
s_7_6	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_6[2] = { 'y', 'o' };$/;"	v	file:
s_7_60	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_60[5] = { 'a', 'v', 'a', 'n', 'o' };$/;"	v	file:
s_7_60	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_60[5] = { 'a', 'v', 'a', 'n', 'o' };$/;"	v	file:
s_7_61	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_61[5] = { 'e', 'v', 'a', 'n', 'o' };$/;"	v	file:
s_7_61	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_61[5] = { 'e', 'v', 'a', 'n', 'o' };$/;"	v	file:
s_7_62	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_62[5] = { 'i', 'v', 'a', 'n', 'o' };$/;"	v	file:
s_7_62	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_62[5] = { 'i', 'v', 'a', 'n', 'o' };$/;"	v	file:
s_7_63	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_63[6] = { 'e', 'r', 'a', 'n', 'n', 'o' };$/;"	v	file:
s_7_63	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_63[6] = { 'e', 'r', 'a', 'n', 'n', 'o' };$/;"	v	file:
s_7_64	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_64[6] = { 'i', 'r', 'a', 'n', 'n', 'o' };$/;"	v	file:
s_7_64	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_64[6] = { 'i', 'r', 'a', 'n', 'n', 'o' };$/;"	v	file:
s_7_65	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_65[3] = { 'o', 'n', 'o' };$/;"	v	file:
s_7_65	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_65[3] = { 'o', 'n', 'o' };$/;"	v	file:
s_7_66	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_66[6] = { 'i', 's', 'c', 'o', 'n', 'o' };$/;"	v	file:
s_7_66	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_66[6] = { 'i', 's', 'c', 'o', 'n', 'o' };$/;"	v	file:
s_7_67	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_67[5] = { 'a', 'r', 'o', 'n', 'o' };$/;"	v	file:
s_7_67	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_67[5] = { 'a', 'r', 'o', 'n', 'o' };$/;"	v	file:
s_7_68	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_68[5] = { 'e', 'r', 'o', 'n', 'o' };$/;"	v	file:
s_7_68	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_68[5] = { 'e', 'r', 'o', 'n', 'o' };$/;"	v	file:
s_7_69	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_69[5] = { 'i', 'r', 'o', 'n', 'o' };$/;"	v	file:
s_7_69	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_69[5] = { 'i', 'r', 'o', 'n', 'o' };$/;"	v	file:
s_7_7	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_7[3] = { 'i', 'z', 'e' };$/;"	v	file:
s_7_7	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_7[3] = { 'm', 'p', 'i' };$/;"	v	file:
s_7_7	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_7[3] = { 'i', 'v', 'a' };$/;"	v	file:
s_7_7	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_7[3] = { 'y', 'a', 's' };$/;"	v	file:
s_7_7	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_7[3] = { 'i', 'z', 'e' };$/;"	v	file:
s_7_7	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_7[3] = { 'm', 'p', 'i' };$/;"	v	file:
s_7_7	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_7[3] = { 'i', 'v', 'a' };$/;"	v	file:
s_7_7	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_7[3] = { 'y', 'a', 's' };$/;"	v	file:
s_7_70	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_70[8] = { 'e', 'r', 'e', 'b', 'b', 'e', 'r', 'o' };$/;"	v	file:
s_7_70	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_70[8] = { 'e', 'r', 'e', 'b', 'b', 'e', 'r', 'o' };$/;"	v	file:
s_7_71	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_71[8] = { 'i', 'r', 'e', 'b', 'b', 'e', 'r', 'o' };$/;"	v	file:
s_7_71	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_71[8] = { 'i', 'r', 'e', 'b', 'b', 'e', 'r', 'o' };$/;"	v	file:
s_7_72	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_72[6] = { 'a', 's', 's', 'e', 'r', 'o' };$/;"	v	file:
s_7_72	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_72[6] = { 'a', 's', 's', 'e', 'r', 'o' };$/;"	v	file:
s_7_73	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_73[6] = { 'e', 's', 's', 'e', 'r', 'o' };$/;"	v	file:
s_7_73	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_73[6] = { 'e', 's', 's', 'e', 'r', 'o' };$/;"	v	file:
s_7_74	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_74[6] = { 'i', 's', 's', 'e', 'r', 'o' };$/;"	v	file:
s_7_74	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_74[6] = { 'i', 's', 's', 'e', 'r', 'o' };$/;"	v	file:
s_7_75	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_75[3] = { 'a', 't', 'o' };$/;"	v	file:
s_7_75	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_75[3] = { 'a', 't', 'o' };$/;"	v	file:
s_7_76	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_76[3] = { 'i', 't', 'o' };$/;"	v	file:
s_7_76	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_76[3] = { 'i', 't', 'o' };$/;"	v	file:
s_7_77	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_77[3] = { 'u', 't', 'o' };$/;"	v	file:
s_7_77	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_77[3] = { 'u', 't', 'o' };$/;"	v	file:
s_7_78	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_78[3] = { 'a', 'v', 'o' };$/;"	v	file:
s_7_78	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_78[3] = { 'a', 'v', 'o' };$/;"	v	file:
s_7_79	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_79[3] = { 'e', 'v', 'o' };$/;"	v	file:
s_7_79	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_79[3] = { 'e', 'v', 'o' };$/;"	v	file:
s_7_8	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_8[3] = { 'i', 't', 'i' };$/;"	v	file:
s_7_8	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_8[4] = { 'i', 'm', 'p', 'i' };$/;"	v	file:
s_7_8	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_8[6] = { 'e', 'r', 'e', 'b', 'b', 'e' };$/;"	v	file:
s_7_8	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_8[3] = { 'y', 'e', 's' };$/;"	v	file:
s_7_8	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_8[3] = { 'i', 't', 'i' };$/;"	v	file:
s_7_8	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_8[4] = { 'i', 'm', 'p', 'i' };$/;"	v	file:
s_7_8	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_8[6] = { 'e', 'r', 'e', 'b', 'b', 'e' };$/;"	v	file:
s_7_8	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_8[3] = { 'y', 'e', 's' };$/;"	v	file:
s_7_80	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_80[3] = { 'i', 'v', 'o' };$/;"	v	file:
s_7_80	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_80[3] = { 'i', 'v', 'o' };$/;"	v	file:
s_7_81	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_81[2] = { 'a', 'r' };$/;"	v	file:
s_7_81	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_81[2] = { 'a', 'r' };$/;"	v	file:
s_7_82	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_82[2] = { 'i', 'r' };$/;"	v	file:
s_7_82	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_82[2] = { 'i', 'r' };$/;"	v	file:
s_7_83	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_83[3] = { 'e', 'r', 0xE0 };$/;"	v	file:
s_7_83	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_83[4] = { 'e', 'r', 0xC3, 0xA0 };$/;"	v	file:
s_7_84	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_84[3] = { 'i', 'r', 0xE0 };$/;"	v	file:
s_7_84	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_84[4] = { 'i', 'r', 0xC3, 0xA0 };$/;"	v	file:
s_7_85	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_85[3] = { 'e', 'r', 0xF2 };$/;"	v	file:
s_7_85	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_85[4] = { 'e', 'r', 0xC3, 0xB2 };$/;"	v	file:
s_7_86	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_86[3] = { 'i', 'r', 0xF2 };$/;"	v	file:
s_7_86	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_86[4] = { 'i', 'r', 0xC3, 0xB2 };$/;"	v	file:
s_7_9	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_7_9[2] = { 'a', 'l' };$/;"	v	file:
s_7_9	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_7_9[3] = { 'e', 'j', 0xE4 };$/;"	v	file:
s_7_9	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_7_9[6] = { 'i', 'r', 'e', 'b', 'b', 'e' };$/;"	v	file:
s_7_9	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_7_9[4] = { 'y', 'a', 'i', 's' };$/;"	v	file:
s_7_9	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_7_9[2] = { 'a', 'l' };$/;"	v	file:
s_7_9	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_7_9[4] = { 'e', 'j', 0xC3, 0xA4 };$/;"	v	file:
s_7_9	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_7_9[6] = { 'i', 'r', 'e', 'b', 'b', 'e' };$/;"	v	file:
s_7_9	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_7_9[4] = { 'y', 'a', 'i', 's' };$/;"	v	file:
s_8	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_8[] = { 'I' };$/;"	v	file:
s_8	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_8[] = { 'e', 'e' };$/;"	v	file:
s_8	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_8[] = { 0xE4 };$/;"	v	file:
s_8	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_8[] = { 'q' };$/;"	v	file:
s_8	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_8[] = { 'a' };$/;"	v	file:
s_8	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_8[] = { 'i' };$/;"	v	file:
s_8	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_8[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_8	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_8[] = { 'a', 't' };$/;"	v	file:
s_8	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8[] = { 'e', 'r' };$/;"	v	file:
s_8	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_8[] = { 'e' };$/;"	v	file:
s_8	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_8[] = { 'i' };$/;"	v	file:
s_8	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_8[] = { 0xCE };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_8[] = { 'I' };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_8[] = { 'e', 'e' };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_8[] = { 0xC3, 0xA4 };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_8[] = { 'q' };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_8[] = { 'a' };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_8[] = { 'e' };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_8[] = { 'i' };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_8[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_8[] = { 'a', 't' };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_8[] = { 'i' };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_8[] = { 0xD0, 0xBD };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8[] = { 'e', 'r' };$/;"	v	file:
s_8	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_8[] = { 'n' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_8_0[1] = { 'e' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_8_0[1] = { 'i' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_8_0[3] = { 'e', 'l', 'l' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_8_0[1] = { 'e' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_0[3] = { 'a', 'b', 'a' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_8_0[1] = { 'k' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_8_0[1] = { 'e' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_8_0[1] = { 'i' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_8_0[3] = { 'e', 'l', 'l' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_8_0[1] = { 'k' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_8_0[1] = { 'e' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_0[3] = { 'a', 'b', 'a' };$/;"	v	file:
s_8_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_8_0[3] = { 'd', 'a', 'n' };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_8_1[1] = { 'l' };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_8_1[1] = { 'j' };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_8_1[4] = { 'e', 'i', 'l', 'l' };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_8_1[1] = { 0xE7 };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_1[3] = { 'a', 'd', 'a' };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_8_1[2] = { 'a', 'k' };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_8_1[1] = { 'l' };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_8_1[1] = { 'j' };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_8_1[4] = { 'e', 'i', 'l', 'l' };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_8_1[2] = { 'a', 'k' };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_8_1[2] = { 0xC3, 0xA7 };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_1[3] = { 'a', 'd', 'a' };$/;"	v	file:
s_8_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_8_1[3] = { 't', 'a', 'n' };$/;"	v	file:
s_8_10	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_10[2] = { 'e', 'd' };$/;"	v	file:
s_8_10	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_10[2] = { 'e', 'd' };$/;"	v	file:
s_8_11	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_11[2] = { 'i', 'd' };$/;"	v	file:
s_8_11	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_11[2] = { 'i', 'd' };$/;"	v	file:
s_8_12	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_12[3] = { 'a', 's', 'e' };$/;"	v	file:
s_8_12	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_12[3] = { 'a', 's', 'e' };$/;"	v	file:
s_8_13	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_13[4] = { 'i', 'e', 's', 'e' };$/;"	v	file:
s_8_13	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_13[4] = { 'i', 'e', 's', 'e' };$/;"	v	file:
s_8_14	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_14[4] = { 'a', 's', 't', 'e' };$/;"	v	file:
s_8_14	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_14[4] = { 'a', 's', 't', 'e' };$/;"	v	file:
s_8_15	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_15[4] = { 'i', 's', 't', 'e' };$/;"	v	file:
s_8_15	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_15[4] = { 'i', 's', 't', 'e' };$/;"	v	file:
s_8_16	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_16[2] = { 'a', 'n' };$/;"	v	file:
s_8_16	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_16[2] = { 'a', 'n' };$/;"	v	file:
s_8_17	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_17[4] = { 'a', 'b', 'a', 'n' };$/;"	v	file:
s_8_17	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_17[4] = { 'a', 'b', 'a', 'n' };$/;"	v	file:
s_8_18	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_18[4] = { 'a', 'r', 'a', 'n' };$/;"	v	file:
s_8_18	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_18[4] = { 'a', 'r', 'a', 'n' };$/;"	v	file:
s_8_19	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_19[5] = { 'i', 'e', 'r', 'a', 'n' };$/;"	v	file:
s_8_19	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_19[5] = { 'i', 'e', 'r', 'a', 'n' };$/;"	v	file:
s_8_2	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_8_2[3] = { 'e', 'n', 'n' };$/;"	v	file:
s_8_2	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_8_2[1] = { 0xE9 };$/;"	v	file:
s_8_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_2[3] = { 'i', 'd', 'a' };$/;"	v	file:
s_8_2	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_8_2[2] = { 'e', 'k' };$/;"	v	file:
s_8_2	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_8_2[3] = { 'e', 'n', 'n' };$/;"	v	file:
s_8_2	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_8_2[2] = { 'e', 'k' };$/;"	v	file:
s_8_2	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_8_2[2] = { 0xC3, 0xA9 };$/;"	v	file:
s_8_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_2[3] = { 'i', 'd', 'a' };$/;"	v	file:
s_8_2	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_8_2[3] = { 'd', 'e', 'n' };$/;"	v	file:
s_8_20	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_20[3] = { 0xED, 'a', 'n' };$/;"	v	file:
s_8_20	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_20[4] = { 0xC3, 0xAD, 'a', 'n' };$/;"	v	file:
s_8_21	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_21[5] = { 'a', 'r', 0xED, 'a', 'n' };$/;"	v	file:
s_8_21	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_21[6] = { 'a', 'r', 0xC3, 0xAD, 'a', 'n' };$/;"	v	file:
s_8_22	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_22[5] = { 'e', 'r', 0xED, 'a', 'n' };$/;"	v	file:
s_8_22	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_22[6] = { 'e', 'r', 0xC3, 0xAD, 'a', 'n' };$/;"	v	file:
s_8_23	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_23[5] = { 'i', 'r', 0xED, 'a', 'n' };$/;"	v	file:
s_8_23	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_23[6] = { 'i', 'r', 0xC3, 0xAD, 'a', 'n' };$/;"	v	file:
s_8_24	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_24[2] = { 'e', 'n' };$/;"	v	file:
s_8_24	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_24[2] = { 'e', 'n' };$/;"	v	file:
s_8_25	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_25[4] = { 'a', 's', 'e', 'n' };$/;"	v	file:
s_8_25	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_25[4] = { 'a', 's', 'e', 'n' };$/;"	v	file:
s_8_26	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_26[5] = { 'i', 'e', 's', 'e', 'n' };$/;"	v	file:
s_8_26	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_26[5] = { 'i', 'e', 's', 'e', 'n' };$/;"	v	file:
s_8_27	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_27[4] = { 'a', 'r', 'o', 'n' };$/;"	v	file:
s_8_27	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_27[4] = { 'a', 'r', 'o', 'n' };$/;"	v	file:
s_8_28	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_28[5] = { 'i', 'e', 'r', 'o', 'n' };$/;"	v	file:
s_8_28	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_28[5] = { 'i', 'e', 'r', 'o', 'n' };$/;"	v	file:
s_8_29	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_29[4] = { 'a', 'r', 0xE1, 'n' };$/;"	v	file:
s_8_29	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_29[5] = { 'a', 'r', 0xC3, 0xA1, 'n' };$/;"	v	file:
s_8_3	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_8_3[3] = { 'o', 'n', 'n' };$/;"	v	file:
s_8_3	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_8_3[1] = { 0xEA };$/;"	v	file:
s_8_3	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_3[3] = { 'a', 'r', 'a' };$/;"	v	file:
s_8_3	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_8_3[2] = { 'o', 'k' };$/;"	v	file:
s_8_3	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_8_3[3] = { 'o', 'n', 'n' };$/;"	v	file:
s_8_3	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_8_3[2] = { 'o', 'k' };$/;"	v	file:
s_8_3	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_8_3[2] = { 0xC3, 0xAA };$/;"	v	file:
s_8_3	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_3[3] = { 'a', 'r', 'a' };$/;"	v	file:
s_8_3	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_8_3[3] = { 't', 'e', 'n' };$/;"	v	file:
s_8_30	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_30[4] = { 'e', 'r', 0xE1, 'n' };$/;"	v	file:
s_8_30	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_30[5] = { 'e', 'r', 0xC3, 0xA1, 'n' };$/;"	v	file:
s_8_31	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_31[4] = { 'i', 'r', 0xE1, 'n' };$/;"	v	file:
s_8_31	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_31[5] = { 'i', 'r', 0xC3, 0xA1, 'n' };$/;"	v	file:
s_8_32	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_32[3] = { 'a', 'd', 'o' };$/;"	v	file:
s_8_32	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_32[3] = { 'a', 'd', 'o' };$/;"	v	file:
s_8_33	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_33[3] = { 'i', 'd', 'o' };$/;"	v	file:
s_8_33	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_33[3] = { 'i', 'd', 'o' };$/;"	v	file:
s_8_34	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_34[4] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_8_34	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_34[4] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_8_35	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_35[5] = { 'i', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_8_35	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_35[5] = { 'i', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_8_36	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_36[2] = { 'a', 'r' };$/;"	v	file:
s_8_36	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_36[2] = { 'a', 'r' };$/;"	v	file:
s_8_37	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_37[2] = { 'e', 'r' };$/;"	v	file:
s_8_37	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_37[2] = { 'e', 'r' };$/;"	v	file:
s_8_38	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_38[2] = { 'i', 'r' };$/;"	v	file:
s_8_38	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_38[2] = { 'i', 'r' };$/;"	v	file:
s_8_39	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_39[2] = { 'a', 's' };$/;"	v	file:
s_8_39	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_39[2] = { 'a', 's' };$/;"	v	file:
s_8_4	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_8_4[3] = { 'e', 't', 't' };$/;"	v	file:
s_8_4	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_4[4] = { 'i', 'e', 'r', 'a' };$/;"	v	file:
s_8_4	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_8_4[2] = { 0xE1, 'k' };$/;"	v	file:
s_8_4	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_8_4[3] = { 'e', 't', 't' };$/;"	v	file:
s_8_4	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_8_4[3] = { 0xC3, 0xA1, 'k' };$/;"	v	file:
s_8_4	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_4[4] = { 'i', 'e', 'r', 'a' };$/;"	v	file:
s_8_40	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_40[4] = { 'a', 'b', 'a', 's' };$/;"	v	file:
s_8_40	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_40[4] = { 'a', 'b', 'a', 's' };$/;"	v	file:
s_8_41	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_41[4] = { 'a', 'd', 'a', 's' };$/;"	v	file:
s_8_41	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_41[4] = { 'a', 'd', 'a', 's' };$/;"	v	file:
s_8_42	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_42[4] = { 'i', 'd', 'a', 's' };$/;"	v	file:
s_8_42	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_42[4] = { 'i', 'd', 'a', 's' };$/;"	v	file:
s_8_43	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_43[4] = { 'a', 'r', 'a', 's' };$/;"	v	file:
s_8_43	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_43[4] = { 'a', 'r', 'a', 's' };$/;"	v	file:
s_8_44	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_44[5] = { 'i', 'e', 'r', 'a', 's' };$/;"	v	file:
s_8_44	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_44[5] = { 'i', 'e', 'r', 'a', 's' };$/;"	v	file:
s_8_45	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_45[3] = { 0xED, 'a', 's' };$/;"	v	file:
s_8_45	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_45[4] = { 0xC3, 0xAD, 'a', 's' };$/;"	v	file:
s_8_46	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_46[5] = { 'a', 'r', 0xED, 'a', 's' };$/;"	v	file:
s_8_46	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_46[6] = { 'a', 'r', 0xC3, 0xAD, 'a', 's' };$/;"	v	file:
s_8_47	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_47[5] = { 'e', 'r', 0xED, 'a', 's' };$/;"	v	file:
s_8_47	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_47[6] = { 'e', 'r', 0xC3, 0xAD, 'a', 's' };$/;"	v	file:
s_8_48	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_48[5] = { 'i', 'r', 0xED, 'a', 's' };$/;"	v	file:
s_8_48	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_48[6] = { 'i', 'r', 0xC3, 0xAD, 'a', 's' };$/;"	v	file:
s_8_49	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_49[2] = { 'e', 's' };$/;"	v	file:
s_8_49	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_49[2] = { 'e', 's' };$/;"	v	file:
s_8_5	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_5[2] = { 0xED, 'a' };$/;"	v	file:
s_8_5	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_8_5[2] = { 0xE9, 'k' };$/;"	v	file:
s_8_5	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_8_5[3] = { 0xC3, 0xA9, 'k' };$/;"	v	file:
s_8_5	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_5[3] = { 0xC3, 0xAD, 'a' };$/;"	v	file:
s_8_50	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_50[4] = { 'a', 's', 'e', 's' };$/;"	v	file:
s_8_50	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_50[4] = { 'a', 's', 'e', 's' };$/;"	v	file:
s_8_51	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_51[5] = { 'i', 'e', 's', 'e', 's' };$/;"	v	file:
s_8_51	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_51[5] = { 'i', 'e', 's', 'e', 's' };$/;"	v	file:
s_8_52	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_52[5] = { 'a', 'b', 'a', 'i', 's' };$/;"	v	file:
s_8_52	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_52[5] = { 'a', 'b', 'a', 'i', 's' };$/;"	v	file:
s_8_53	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_53[5] = { 'a', 'r', 'a', 'i', 's' };$/;"	v	file:
s_8_53	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_53[5] = { 'a', 'r', 'a', 'i', 's' };$/;"	v	file:
s_8_54	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_54[6] = { 'i', 'e', 'r', 'a', 'i', 's' };$/;"	v	file:
s_8_54	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_54[6] = { 'i', 'e', 'r', 'a', 'i', 's' };$/;"	v	file:
s_8_55	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_55[4] = { 0xED, 'a', 'i', 's' };$/;"	v	file:
s_8_55	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_55[5] = { 0xC3, 0xAD, 'a', 'i', 's' };$/;"	v	file:
s_8_56	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_56[6] = { 'a', 'r', 0xED, 'a', 'i', 's' };$/;"	v	file:
s_8_56	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_56[7] = { 'a', 'r', 0xC3, 0xAD, 'a', 'i', 's' };$/;"	v	file:
s_8_57	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_57[6] = { 'e', 'r', 0xED, 'a', 'i', 's' };$/;"	v	file:
s_8_57	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_57[7] = { 'e', 'r', 0xC3, 0xAD, 'a', 'i', 's' };$/;"	v	file:
s_8_58	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_58[6] = { 'i', 'r', 0xED, 'a', 'i', 's' };$/;"	v	file:
s_8_58	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_58[7] = { 'i', 'r', 0xC3, 0xAD, 'a', 'i', 's' };$/;"	v	file:
s_8_59	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_59[5] = { 'a', 's', 'e', 'i', 's' };$/;"	v	file:
s_8_59	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_59[5] = { 'a', 's', 'e', 'i', 's' };$/;"	v	file:
s_8_6	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_6[4] = { 'a', 'r', 0xED, 'a' };$/;"	v	file:
s_8_6	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_8_6[2] = { 0xF6, 'k' };$/;"	v	file:
s_8_6	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_8_6[3] = { 0xC3, 0xB6, 'k' };$/;"	v	file:
s_8_6	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_6[5] = { 'a', 'r', 0xC3, 0xAD, 'a' };$/;"	v	file:
s_8_60	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_60[6] = { 'i', 'e', 's', 'e', 'i', 's' };$/;"	v	file:
s_8_60	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_60[6] = { 'i', 'e', 's', 'e', 'i', 's' };$/;"	v	file:
s_8_61	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_61[6] = { 'a', 's', 't', 'e', 'i', 's' };$/;"	v	file:
s_8_61	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_61[6] = { 'a', 's', 't', 'e', 'i', 's' };$/;"	v	file:
s_8_62	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_62[6] = { 'i', 's', 't', 'e', 'i', 's' };$/;"	v	file:
s_8_62	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_62[6] = { 'i', 's', 't', 'e', 'i', 's' };$/;"	v	file:
s_8_63	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_63[3] = { 0xE1, 'i', 's' };$/;"	v	file:
s_8_63	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_63[4] = { 0xC3, 0xA1, 'i', 's' };$/;"	v	file:
s_8_64	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_64[3] = { 0xE9, 'i', 's' };$/;"	v	file:
s_8_64	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_64[4] = { 0xC3, 0xA9, 'i', 's' };$/;"	v	file:
s_8_65	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_65[5] = { 'a', 'r', 0xE9, 'i', 's' };$/;"	v	file:
s_8_65	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_65[6] = { 'a', 'r', 0xC3, 0xA9, 'i', 's' };$/;"	v	file:
s_8_66	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_66[5] = { 'e', 'r', 0xE9, 'i', 's' };$/;"	v	file:
s_8_66	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_66[6] = { 'e', 'r', 0xC3, 0xA9, 'i', 's' };$/;"	v	file:
s_8_67	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_67[5] = { 'i', 'r', 0xE9, 'i', 's' };$/;"	v	file:
s_8_67	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_67[6] = { 'i', 'r', 0xC3, 0xA9, 'i', 's' };$/;"	v	file:
s_8_68	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_68[4] = { 'a', 'd', 'o', 's' };$/;"	v	file:
s_8_68	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_68[4] = { 'a', 'd', 'o', 's' };$/;"	v	file:
s_8_69	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_69[4] = { 'i', 'd', 'o', 's' };$/;"	v	file:
s_8_69	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_69[4] = { 'i', 'd', 'o', 's' };$/;"	v	file:
s_8_7	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_7[4] = { 'e', 'r', 0xED, 'a' };$/;"	v	file:
s_8_7	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_7[5] = { 'e', 'r', 0xC3, 0xAD, 'a' };$/;"	v	file:
s_8_70	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_70[4] = { 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_70	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_70[4] = { 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_71	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_71[6] = { 0xE1, 'b', 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_71	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_71[7] = { 0xC3, 0xA1, 'b', 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_72	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_72[6] = { 0xE1, 'r', 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_72	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_72[7] = { 0xC3, 0xA1, 'r', 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_73	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_73[7] = { 'i', 0xE9, 'r', 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_73	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_73[8] = { 'i', 0xC3, 0xA9, 'r', 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_74	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_74[5] = { 0xED, 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_74	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_74[6] = { 0xC3, 0xAD, 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_75	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_75[7] = { 'a', 'r', 0xED, 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_75	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_75[8] = { 'a', 'r', 0xC3, 0xAD, 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_76	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_76[7] = { 'e', 'r', 0xED, 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_76	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_76[8] = { 'e', 'r', 0xC3, 0xAD, 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_77	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_77[7] = { 'i', 'r', 0xED, 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_77	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_77[8] = { 'i', 'r', 0xC3, 0xAD, 'a', 'm', 'o', 's' };$/;"	v	file:
s_8_78	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_78[4] = { 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_78	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_78[4] = { 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_79	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_79[6] = { 'a', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_79	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_79[6] = { 'a', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_8	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_8[4] = { 'i', 'r', 0xED, 'a' };$/;"	v	file:
s_8_8	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_8[5] = { 'i', 'r', 0xC3, 0xAD, 'a' };$/;"	v	file:
s_8_80	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_80[6] = { 'e', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_80	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_80[6] = { 'e', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_81	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_81[6] = { 'i', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_81	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_81[6] = { 'i', 'r', 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_82	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_82[6] = { 0xE1, 's', 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_82	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_82[7] = { 0xC3, 0xA1, 's', 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_83	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_83[7] = { 'i', 0xE9, 's', 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_83	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_83[8] = { 'i', 0xC3, 0xA9, 's', 'e', 'm', 'o', 's' };$/;"	v	file:
s_8_84	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_84[4] = { 'i', 'm', 'o', 's' };$/;"	v	file:
s_8_84	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_84[4] = { 'i', 'm', 'o', 's' };$/;"	v	file:
s_8_85	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_85[4] = { 'a', 'r', 0xE1, 's' };$/;"	v	file:
s_8_85	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_85[5] = { 'a', 'r', 0xC3, 0xA1, 's' };$/;"	v	file:
s_8_86	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_86[4] = { 'e', 'r', 0xE1, 's' };$/;"	v	file:
s_8_86	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_86[5] = { 'e', 'r', 0xC3, 0xA1, 's' };$/;"	v	file:
s_8_87	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_87[4] = { 'i', 'r', 0xE1, 's' };$/;"	v	file:
s_8_87	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_87[5] = { 'i', 'r', 0xC3, 0xA1, 's' };$/;"	v	file:
s_8_88	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_88[2] = { 0xED, 's' };$/;"	v	file:
s_8_88	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_88[3] = { 0xC3, 0xAD, 's' };$/;"	v	file:
s_8_89	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_89[3] = { 'a', 'r', 0xE1 };$/;"	v	file:
s_8_89	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_89[4] = { 'a', 'r', 0xC3, 0xA1 };$/;"	v	file:
s_8_9	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_9[2] = { 'a', 'd' };$/;"	v	file:
s_8_9	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_9[2] = { 'a', 'd' };$/;"	v	file:
s_8_90	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_90[3] = { 'e', 'r', 0xE1 };$/;"	v	file:
s_8_90	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_90[4] = { 'e', 'r', 0xC3, 0xA1 };$/;"	v	file:
s_8_91	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_91[3] = { 'i', 'r', 0xE1 };$/;"	v	file:
s_8_91	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_91[4] = { 'i', 'r', 0xC3, 0xA1 };$/;"	v	file:
s_8_92	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_92[3] = { 'a', 'r', 0xE9 };$/;"	v	file:
s_8_92	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_92[4] = { 'a', 'r', 0xC3, 0xA9 };$/;"	v	file:
s_8_93	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_93[3] = { 'e', 'r', 0xE9 };$/;"	v	file:
s_8_93	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_93[4] = { 'e', 'r', 0xC3, 0xA9 };$/;"	v	file:
s_8_94	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_94[3] = { 'i', 'r', 0xE9 };$/;"	v	file:
s_8_94	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_94[4] = { 'i', 'r', 0xC3, 0xA9 };$/;"	v	file:
s_8_95	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_8_95[2] = { 'i', 0xF3 };$/;"	v	file:
s_8_95	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_8_95[3] = { 'i', 0xC3, 0xB3 };$/;"	v	file:
s_9	libstemmer/src_c/stem_ISO_8859_1_dutch.c	/^static const symbol s_9[] = { 'y' };$/;"	v	file:
s_9	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_9[] = { 'e' };$/;"	v	file:
s_9	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_9[] = { 0xF6 };$/;"	v	file:
s_9	libstemmer/src_c/stem_ISO_8859_1_french.c	/^static const symbol s_9[] = { 'u' };$/;"	v	file:
s_9	libstemmer/src_c/stem_ISO_8859_1_german.c	/^static const symbol s_9[] = { 'o' };$/;"	v	file:
s_9	libstemmer/src_c/stem_ISO_8859_1_italian.c	/^static const symbol s_9[] = { 'I' };$/;"	v	file:
s_9	libstemmer/src_c/stem_ISO_8859_1_porter.c	/^static const symbol s_9[] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_9	libstemmer/src_c/stem_ISO_8859_1_portuguese.c	/^static const symbol s_9[] = { 'e' };$/;"	v	file:
s_9	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_9[] = { 'i', 'r' };$/;"	v	file:
s_9	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9[] = { 'e' };$/;"	v	file:
s_9	libstemmer/src_c/stem_ISO_8859_2_romanian.c	/^static const symbol s_9[] = { 'a', 'b' };$/;"	v	file:
s_9	libstemmer/src_c/stem_KOI8_R_russian.c	/^static const symbol s_9[] = { 0xC9 };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_dutch.c	/^static const symbol s_9[] = { 'y' };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_9[] = { 'e' };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_9[] = { 0xC3, 0xB6 };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_french.c	/^static const symbol s_9[] = { 'u' };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_german.c	/^static const symbol s_9[] = { 'o' };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9[] = { 'e' };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_italian.c	/^static const symbol s_9[] = { 'I' };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_porter.c	/^static const symbol s_9[] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_portuguese.c	/^static const symbol s_9[] = { 'e' };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_romanian.c	/^static const symbol s_9[] = { 'a', 'b' };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_russian.c	/^static const symbol s_9[] = { 0xD0, 0xB8 };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_9[] = { 'i', 'r' };$/;"	v	file:
s_9	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_9[] = { 'n' };$/;"	v	file:
s_9_0	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_9_0[7] = { 's', 'u', 'c', 'c', 'e', 'e', 'd' };$/;"	v	file:
s_9_0	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_9_0[3] = { 'm', 'm', 'a' };$/;"	v	file:
s_9_0	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_9_0[1] = { 'a' };$/;"	v	file:
s_9_0	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_0[2] = { 0xE9, 'i' };$/;"	v	file:
s_9_0	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_9_0[7] = { 's', 'u', 'c', 'c', 'e', 'e', 'd' };$/;"	v	file:
s_9_0	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_9_0[3] = { 'm', 'm', 'a' };$/;"	v	file:
s_9_0	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_0[3] = { 0xC3, 0xA9, 'i' };$/;"	v	file:
s_9_0	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_9_0[1] = { 'a' };$/;"	v	file:
s_9_0	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_9_0[4] = { 'n', 'd', 'a', 'n' };$/;"	v	file:
s_9_1	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_9_1[7] = { 'p', 'r', 'o', 'c', 'e', 'e', 'd' };$/;"	v	file:
s_9_1	libstemmer/src_c/stem_ISO_8859_1_finnish.c	/^static const symbol s_9_1[4] = { 'i', 'm', 'm', 'a' };$/;"	v	file:
s_9_1	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_9_1[1] = { 'e' };$/;"	v	file:
s_9_1	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_1[3] = { 0xE1, 0xE9, 'i' };$/;"	v	file:
s_9_1	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_9_1[7] = { 'p', 'r', 'o', 'c', 'e', 'e', 'd' };$/;"	v	file:
s_9_1	libstemmer/src_c/stem_UTF_8_finnish.c	/^static const symbol s_9_1[4] = { 'i', 'm', 'm', 'a' };$/;"	v	file:
s_9_1	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_1[5] = { 0xC3, 0xA1, 0xC3, 0xA9, 'i' };$/;"	v	file:
s_9_1	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_9_1[1] = { 'e' };$/;"	v	file:
s_9_1	libstemmer/src_c/stem_UTF_8_turkish.c	/^static const symbol s_9_1[4] = { 'n', 'd', 'e', 'n' };$/;"	v	file:
s_9_10	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_10[3] = { 0xF6, 'k', 0xE9 };$/;"	v	file:
s_9_10	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_10[5] = { 0xC3, 0xB6, 'k', 0xC3, 0xA9 };$/;"	v	file:
s_9_11	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_11[2] = { 0xE9, 0xE9 };$/;"	v	file:
s_9_11	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_11[4] = { 0xC3, 0xA9, 0xC3, 0xA9 };$/;"	v	file:
s_9_2	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_9_2[6] = { 'e', 'x', 'c', 'e', 'e', 'd' };$/;"	v	file:
s_9_2	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_9_2[1] = { 'o' };$/;"	v	file:
s_9_2	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_2[3] = { 0xE9, 0xE9, 'i' };$/;"	v	file:
s_9_2	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_9_2[6] = { 'e', 'x', 'c', 'e', 'e', 'd' };$/;"	v	file:
s_9_2	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_2[5] = { 0xC3, 0xA9, 0xC3, 0xA9, 'i' };$/;"	v	file:
s_9_2	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_9_2[1] = { 'o' };$/;"	v	file:
s_9_3	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_9_3[7] = { 'c', 'a', 'n', 'n', 'i', 'n', 'g' };$/;"	v	file:
s_9_3	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_9_3[2] = { 'o', 's' };$/;"	v	file:
s_9_3	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_3[1] = { 0xE9 };$/;"	v	file:
s_9_3	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_9_3[7] = { 'c', 'a', 'n', 'n', 'i', 'n', 'g' };$/;"	v	file:
s_9_3	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_3[2] = { 0xC3, 0xA9 };$/;"	v	file:
s_9_3	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_9_3[2] = { 'o', 's' };$/;"	v	file:
s_9_4	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_9_4[6] = { 'i', 'n', 'n', 'i', 'n', 'g' };$/;"	v	file:
s_9_4	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_9_4[1] = { 0xE1 };$/;"	v	file:
s_9_4	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_4[2] = { 'k', 0xE9 };$/;"	v	file:
s_9_4	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_9_4[6] = { 'i', 'n', 'n', 'i', 'n', 'g' };$/;"	v	file:
s_9_4	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_4[3] = { 'k', 0xC3, 0xA9 };$/;"	v	file:
s_9_4	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_9_4[2] = { 0xC3, 0xA1 };$/;"	v	file:
s_9_5	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_9_5[7] = { 'e', 'a', 'r', 'r', 'i', 'n', 'g' };$/;"	v	file:
s_9_5	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_9_5[1] = { 0xE9 };$/;"	v	file:
s_9_5	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_5[3] = { 'a', 'k', 0xE9 };$/;"	v	file:
s_9_5	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_9_5[7] = { 'e', 'a', 'r', 'r', 'i', 'n', 'g' };$/;"	v	file:
s_9_5	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_5[4] = { 'a', 'k', 0xC3, 0xA9 };$/;"	v	file:
s_9_5	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_9_5[2] = { 0xC3, 0xA9 };$/;"	v	file:
s_9_6	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_9_6[7] = { 'h', 'e', 'r', 'r', 'i', 'n', 'g' };$/;"	v	file:
s_9_6	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_9_6[1] = { 0xED };$/;"	v	file:
s_9_6	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_6[3] = { 'e', 'k', 0xE9 };$/;"	v	file:
s_9_6	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_9_6[7] = { 'h', 'e', 'r', 'r', 'i', 'n', 'g' };$/;"	v	file:
s_9_6	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_6[4] = { 'e', 'k', 0xC3, 0xA9 };$/;"	v	file:
s_9_6	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_9_6[2] = { 0xC3, 0xAD };$/;"	v	file:
s_9_7	libstemmer/src_c/stem_ISO_8859_1_english.c	/^static const symbol s_9_7[6] = { 'o', 'u', 't', 'i', 'n', 'g' };$/;"	v	file:
s_9_7	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^static const symbol s_9_7[1] = { 0xF3 };$/;"	v	file:
s_9_7	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_7[3] = { 'o', 'k', 0xE9 };$/;"	v	file:
s_9_7	libstemmer/src_c/stem_UTF_8_english.c	/^static const symbol s_9_7[6] = { 'o', 'u', 't', 'i', 'n', 'g' };$/;"	v	file:
s_9_7	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_7[4] = { 'o', 'k', 0xC3, 0xA9 };$/;"	v	file:
s_9_7	libstemmer/src_c/stem_UTF_8_spanish.c	/^static const symbol s_9_7[2] = { 0xC3, 0xB3 };$/;"	v	file:
s_9_8	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_8[3] = { 0xE1, 'k', 0xE9 };$/;"	v	file:
s_9_8	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_8[5] = { 0xC3, 0xA1, 'k', 0xC3, 0xA9 };$/;"	v	file:
s_9_9	libstemmer/src_c/stem_ISO_8859_2_hungarian.c	/^static const symbol s_9_9[3] = { 0xE9, 'k', 0xE9 };$/;"	v	file:
s_9_9	libstemmer/src_c/stem_UTF_8_hungarian.c	/^static const symbol s_9_9[5] = { 0xC3, 0xA9, 'k', 0xC3, 0xA9 };$/;"	v	file:
s_size	libstemmer/runtime/header.h	/^{   int s_size;     \/* number of chars in string *\/$/;"	m	struct:among
safe_dump	madpack/yaml/__init__.py	/^def safe_dump(data, stream=None, **kwds):$/;"	f
safe_dump_all	madpack/yaml/__init__.py	/^def safe_dump_all(documents, stream=None, **kwds):$/;"	f
safe_load	madpack/yaml/__init__.py	/^def safe_load(stream):$/;"	f
safe_load_all	madpack/yaml/__init__.py	/^def safe_load_all(stream):$/;"	f
sample	modules/recursive_partitioning/ConSplits.hpp	/^    Matrix_type sample;$/;"	m	class:madlib::modules::recursive_partitioning::ConSplitsSample
sample	modules/sample/WeightedSample_impl.hpp	/^namespace sample {$/;"	n	namespace:madlib::modules
sample	modules/sample/WeightedSample_proto.hpp	/^    typename DynamicStructType<T, isMutable>::type sample;$/;"	m	class:madlib::modules::sample::WeightedSampleAccumulator
sample	modules/sample/WeightedSample_proto.hpp	/^namespace sample {$/;"	n	namespace:madlib::modules
sample	modules/sample/random_process.cpp	/^namespace sample {$/;"	n	namespace:madlib::modules	file:
sample	modules/sample/weighted_sample.cpp	/^namespace sample {$/;"	n	namespace:madlib::modules	file:
save_and_drop	madpack/upgrade_util.py	/^    def save_and_drop(self):$/;"	m	class:ViewDependency
save_possible_simple_key	madpack/yaml/scanner.py	/^    def save_possible_simple_key(self):$/;"	m	class:Scanner
save_state	modules/crf/linear_crf.cpp	/^void LBFGS::save_state(LinCrfLBFGSTransitionState<MutableArrayHandle<double> > &state) {$/;"	f	class:madlib::modules::crf::LBFGS
sb_getenc	libstemmer/libstemmer/libstemmer.c	/^sb_getenc(const char * charenc)$/;"	f	file:
sb_stemmer	libstemmer/libstemmer/libstemmer.c	/^struct sb_stemmer {$/;"	s	file:
sb_stemmer_delete	libstemmer/libstemmer/libstemmer.c	/^sb_stemmer_delete(struct sb_stemmer * stemmer)$/;"	f
sb_stemmer_length	libstemmer/libstemmer/libstemmer.c	/^sb_stemmer_length(struct sb_stemmer * stemmer)$/;"	f
sb_stemmer_list	libstemmer/libstemmer/libstemmer.c	/^sb_stemmer_list(void)$/;"	f
sb_stemmer_new	libstemmer/libstemmer/libstemmer.c	/^sb_stemmer_new(const char * algorithm, const char * charenc)$/;"	f
sb_stemmer_stem	libstemmer/libstemmer/libstemmer.c	/^sb_stemmer_stem(struct sb_stemmer * stemmer, const sb_symbol * word, int size)$/;"	f
sb_symbol	libstemmer/include/libstemmer.h	/^typedef unsigned char sb_symbol;$/;"	t
scaleFactor	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToDouble scaleFactor;$/;"	m	struct:madlib::modules::convex::LMFIGDState::TaskState
scaling	modules/convex/task/l2.hpp	/^L2<Model, Hessian>::scaling($/;"	f	class:madlib::modules::convex::L2
scan	madpack/yaml/__init__.py	/^def scan(stream, Loader=Loader):$/;"	f
scan_anchor	madpack/yaml/scanner.py	/^    def scan_anchor(self, TokenClass):$/;"	m	class:Scanner
scan_block_scalar	madpack/yaml/scanner.py	/^    def scan_block_scalar(self, style):$/;"	m	class:Scanner
scan_block_scalar_breaks	madpack/yaml/scanner.py	/^    def scan_block_scalar_breaks(self, indent):$/;"	m	class:Scanner
scan_block_scalar_ignored_line	madpack/yaml/scanner.py	/^    def scan_block_scalar_ignored_line(self, start_mark):$/;"	m	class:Scanner
scan_block_scalar_indentation	madpack/yaml/scanner.py	/^    def scan_block_scalar_indentation(self):$/;"	m	class:Scanner
scan_block_scalar_indicators	madpack/yaml/scanner.py	/^    def scan_block_scalar_indicators(self, start_mark):$/;"	m	class:Scanner
scan_directive	madpack/yaml/scanner.py	/^    def scan_directive(self):$/;"	m	class:Scanner
scan_directive_ignored_line	madpack/yaml/scanner.py	/^    def scan_directive_ignored_line(self, start_mark):$/;"	m	class:Scanner
scan_directive_name	madpack/yaml/scanner.py	/^    def scan_directive_name(self, start_mark):$/;"	m	class:Scanner
scan_flow_scalar	madpack/yaml/scanner.py	/^    def scan_flow_scalar(self, style):$/;"	m	class:Scanner
scan_flow_scalar_breaks	madpack/yaml/scanner.py	/^    def scan_flow_scalar_breaks(self, double, start_mark):$/;"	m	class:Scanner
scan_flow_scalar_non_spaces	madpack/yaml/scanner.py	/^    def scan_flow_scalar_non_spaces(self, double, start_mark):$/;"	m	class:Scanner
scan_flow_scalar_spaces	madpack/yaml/scanner.py	/^    def scan_flow_scalar_spaces(self, double, start_mark):$/;"	m	class:Scanner
scan_line_break	madpack/yaml/scanner.py	/^    def scan_line_break(self):$/;"	m	class:Scanner
scan_plain	madpack/yaml/scanner.py	/^    def scan_plain(self):$/;"	m	class:Scanner
scan_plain_spaces	madpack/yaml/scanner.py	/^    def scan_plain_spaces(self, indent, start_mark):$/;"	m	class:Scanner
scan_tag	madpack/yaml/scanner.py	/^    def scan_tag(self):$/;"	m	class:Scanner
scan_tag_directive_handle	madpack/yaml/scanner.py	/^    def scan_tag_directive_handle(self, start_mark):$/;"	m	class:Scanner
scan_tag_directive_prefix	madpack/yaml/scanner.py	/^    def scan_tag_directive_prefix(self, start_mark):$/;"	m	class:Scanner
scan_tag_directive_value	madpack/yaml/scanner.py	/^    def scan_tag_directive_value(self, start_mark):$/;"	m	class:Scanner
scan_tag_handle	madpack/yaml/scanner.py	/^    def scan_tag_handle(self, name, start_mark):$/;"	m	class:Scanner
scan_tag_uri	madpack/yaml/scanner.py	/^    def scan_tag_uri(self, name, start_mark):$/;"	m	class:Scanner
scan_to_next_token	madpack/yaml/scanner.py	/^    def scan_to_next_token(self):$/;"	m	class:Scanner
scan_uri_escapes	madpack/yaml/scanner.py	/^    def scan_uri_escapes(self, name, start_mark):$/;"	m	class:Scanner
scan_yaml_directive_number	madpack/yaml/scanner.py	/^    def scan_yaml_directive_number(self, start_mark):$/;"	m	class:Scanner
scan_yaml_directive_value	madpack/yaml/scanner.py	/^    def scan_yaml_directive_value(self, start_mark):$/;"	m	class:Scanner
search	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::search(MappedIntegerVector cat_features,$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
secdef	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    bool secdef;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
seed	ports/postgres/dbconnector/NativeRandomNumberGenerator_impl.hpp	/^NativeRandomNumberGenerator::seed(result_type inSeed) {$/;"	f	class:madlib::dbconnector::postgres::NativeRandomNumberGenerator
seek	dbal/ByteStreamHandleBuf_impl.hpp	/^ByteStreamHandleBuf<Storage, CharType, IsMutable>::seek($/;"	f	class:madlib::dbal::ByteStreamHandleBuf
seek	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::seek(size_t inPos) {$/;"	f	class:madlib::dbal::ByteStream
seek	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::seek(std::ptrdiff_t inOffset,$/;"	f	class:madlib::dbal::ByteStream
serialize	madpack/yaml/__init__.py	/^def serialize(node, stream=None, Dumper=Dumper, **kwds):$/;"	f
serialize	madpack/yaml/serializer.py	/^    def serialize(self, node):$/;"	m	class:Serializer
serialize_all	madpack/yaml/__init__.py	/^def serialize_all(nodes, stream=None, Dumper=Dumper,$/;"	f
serialize_node	madpack/yaml/serializer.py	/^    def serialize_node(self, node, parent, index):$/;"	m	class:Serializer
set	madpack/argparse.py	/^    from sets import Set as set$/;"	i
set	madpack/yaml/constructor.py	/^    from sets import Set as set$/;"	i
set	madpack/yaml/representer.py	/^    from sets import Set as set$/;"	i
setAndTestPythonVesion	bin/madpack	/^setAndTestPythonVesion() {$/;"	f
setFunctionCallOptions	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::setFunctionCallOptions(uint32_t inFlags) {$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle
setSize	dbal/DynamicStruct_impl.hpp	/^    DynamicStructRootContainer<Storage, TypeTraits>, Mutable>::setSize($/;"	f	class:madlib::dbal::DynamicStructBase
setSize	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, Mutable>::setSize(size_t inSize) {$/;"	f	class:madlib::dbal::DynamicStruct
setSize	dbal/DynamicStruct_impl.hpp	/^DynamicStructBase<Derived, Container, Mutable>::setSize($/;"	f	class:madlib::dbal::DynamicStructBase
setStorage	dbal/ByteStreamHandleBuf_impl.hpp	/^ByteStreamHandleBuf<Storage, CharType, IsMutable>::setStorage($/;"	f	class:madlib::dbal::ByteStreamHandleBuf
setSystemInformationInFmgrInfo	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^setSystemInformationInFmgrInfo(FmgrInfo* inFmgrInfo,$/;"	f	namespace:madlib::dbconnector::postgres::__anon32
setUp	madpack/upgrade_util.py	/^    def setUp(self):$/;"	m	class:TestChangeHandler
setUp	madpack/utilities.py	/^    def setUp(self):$/;"	m	class:RevTest
setUserFuncContext	ports/postgres/dbconnector/AnyType_impl.hpp	/^inline void AnyType::setUserFuncContext(void * user_fctx){$/;"	f	class:madlib::dbconnector::postgres::AnyType
setZero	modules/convex/type/model.hpp	/^    void setZero(){$/;"	f	struct:madlib::modules::convex::MLPModel
set_defaults	madpack/argparse.py	/^    def set_defaults(self, **kwargs):$/;"	m	class:_ActionsContainer
set_python_instance_state	madpack/yaml/constructor.py	/^    def set_python_instance_state(self, instance, state):$/;"	m	class:Constructor
shapeToExtents	utils/shapeToExtents.hpp	/^shapeToExtents(const boost::multi_array_types::size_type *inSizeList) {$/;"	f	namespace:madlib::utils
shouldSplit	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::shouldSplit(const uint64_t &total_count,$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
shutil	madpack/madpack.py	/^import shutil$/;"	i
sigma	modules/regress/clustered_errors.cpp	/^inline double sigma(double x) {$/;"	f	namespace:madlib::modules::regress
sigma	modules/regress/logistic.cpp	/^inline double sigma(double x) {$/;"	f	namespace:madlib::modules::regress
sigma	modules/regress/multilogistic.cpp	/^inline double sigma(double x) {$/;"	f	namespace:madlib::modules::regress
sigmoid	modules/convex/task/mlp.hpp	/^    static double sigmoid(const double &xi) {$/;"	f	class:madlib::modules::convex::MLP
sigmoidDerivative	modules/convex/task/mlp.hpp	/^    static double sigmoidDerivative(const double &xi) {$/;"	f	class:madlib::modules::convex::MLP
sign	modules/elastic_net/elastic_net_optimizer_igd.hpp	/^inline double Igd<Model>::sign (const double & x)$/;"	f	class:madlib::modules::elastic_net::Igd
size	dbal/ByteStreamHandleBuf_impl.hpp	/^ByteStreamHandleBuf<Storage, CharType, IsMutable>::size() const {$/;"	f	class:madlib::dbal::ByteStreamHandleBuf
size	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::size() const {$/;"	f	class:madlib::dbal::ByteStream
size	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, IsMutable>::size() const {$/;"	f	class:madlib::dbal::DynamicStruct
size	modules/linalg/matrix_ops.cpp	/^    int32_t size;$/;"	m	struct:madlib::modules::linalg::__sr_ctx1	file:
size	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^ArrayHandle<T>::size() const {$/;"	f	class:madlib::dbconnector::postgres::ArrayHandle
size	ports/postgres/dbconnector/ByteString_impl.hpp	/^ByteString::size() const {$/;"	f	class:madlib::dbconnector::postgres::ByteString
sizeOfDim	ports/postgres/dbconnector/ArrayHandle_impl.hpp	/^ArrayHandle<T>::sizeOfDim(size_t inDim) const {$/;"	f	class:madlib::dbconnector::postgres::ArrayHandle
size_type	utils/MallocAllocator.hpp	/^    typedef std::size_t size_type;$/;"	t	class:madlib::utils::MallocAllocator
size_type	utils/shapeToExtents.hpp	/^    typedef boost::multi_array_types::size_type size_type;$/;"	t	struct:madlib::utils::internal_shapeToExtents
skip_utf8	libstemmer/runtime/utilities.c	/^extern int skip_utf8(const symbol * p, int c, int lb, int l, int n) {$/;"	f
sleep	madpack/madpack.py	/^            from time import sleep$/;"	i
slice_check	libstemmer/runtime/utilities.c	/^static int slice_check(struct SN_env * z) {$/;"	f	file:
slice_del	libstemmer/runtime/utilities.c	/^extern int slice_del(struct SN_env * z) {$/;"	f
slice_from_s	libstemmer/runtime/utilities.c	/^extern int slice_from_s(struct SN_env * z, int s_size, const symbol * s) {$/;"	f
slice_from_v	libstemmer/runtime/utilities.c	/^extern int slice_from_v(struct SN_env * z, const symbol * p) {$/;"	f
slice_to	libstemmer/runtime/utilities.c	/^extern symbol * slice_to(struct SN_env * z, symbol * p) {$/;"	f
snowball_headers	libstemmer/mkinc.mak	/^snowball_headers= \\$/;"	m
snowball_sources	libstemmer/mkinc.mak	/^snowball_sources= \\$/;"	m
solution	modules/linear_systems/dense_linear_systems_states.hpp	/^    ColumnVector_type solution;$/;"	m	class:madlib::modules::linear_systems::ResidualState
solution	modules/linear_systems/sparse_linear_systems_states.hpp	/^    ColumnVector_type solution;$/;"	m	class:madlib::modules::linear_systems::ResidualState
sorted	madpack/argparse.py	/^    def sorted(iterable, reverse=False):$/;"	f
sp	madpack/create_changelist.py	/^                    sp = line.split(' | ')$/;"	v
sp	madpack/create_changelist.py	/^                    sp = line.split('|')$/;"	v
spanish_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^extern void spanish_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
spanish_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^extern struct SN_env * spanish_ISO_8859_1_create_env(void) { return SN_create_env(0, 3, 0); }$/;"	f
spanish_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_spanish.c	/^extern int spanish_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
spanish_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_spanish.c	/^extern void spanish_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
spanish_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_spanish.c	/^extern struct SN_env * spanish_UTF_8_create_env(void) { return SN_create_env(0, 3, 0); }$/;"	f
spanish_UTF_8_stem	libstemmer/src_c/stem_UTF_8_spanish.c	/^extern int spanish_UTF_8_stem(struct SN_env * z) {$/;"	f
sparse_dot	modules/elastic_net/share/shared_utils.hpp	/^inline double sparse_dot (CVector& coef, CVector& x)$/;"	f	namespace:madlib::modules::elastic_net::__anon18
sparse_dot	modules/elastic_net/share/shared_utils.hpp	/^inline double sparse_dot (CVector& coef, MappedColumnVector& x)$/;"	f	namespace:madlib::modules::elastic_net::__anon18
sparse_dot	modules/elastic_net/share/shared_utils.hpp	/^inline double sparse_dot (ColumnVector& coef, CVector& x)$/;"	f	namespace:madlib::modules::elastic_net::__anon18
sparse_dot	modules/elastic_net/share/shared_utils.hpp	/^inline double sparse_dot (ColumnVector& coef, ColumnVector& x)$/;"	f	namespace:madlib::modules::elastic_net::__anon18
sparse_dot	modules/elastic_net/share/shared_utils.hpp	/^inline double sparse_dot (MappedColumnVector& coef, MappedColumnVector& x)$/;"	f	namespace:madlib::modules::elastic_net::__anon18
sq	modules/crf/linear_crf.cpp	/^    double stp1, ftol, stp, sq, yr, beta;$/;"	m	class:madlib::modules::crf::LBFGS	file:
squaredDistNorm2	modules/linalg/metric.cpp	/^squaredDistNorm2(const MappedColumnVector& inX, const MappedColumnVector& inY) {$/;"	f	namespace:madlib::modules::linalg
sr_ctx	modules/lda/lda.cpp	/^} sr_ctx;$/;"	t	namespace:madlib::modules::lda	typeref:struct:madlib::modules::lda::__sr_ctx	file:
sr_ctx	modules/linalg/svd.cpp	/^} sr_ctx;$/;"	t	namespace:madlib::modules::linalg	typeref:struct:madlib::modules::linalg::__sr_ctx	file:
sr_ctx	modules/regress/multilogistic.cpp	/^} sr_ctx;$/;"	t	namespace:madlib::modules::regress	typeref:struct:madlib::modules::regress::__sr_ctx	file:
sr_ctx1	modules/linalg/matrix_ops.cpp	/^} sr_ctx1;$/;"	t	namespace:madlib::modules::linalg	typeref:struct:madlib::modules::linalg::__sr_ctx1	file:
sr_ctx2	modules/linalg/matrix_ops.cpp	/^} sr_ctx2;$/;"	t	namespace:madlib::modules::linalg	typeref:struct:madlib::modules::linalg::__sr_ctx2	file:
stage1	modules/crf/linear_crf.cpp	/^    bool brackt, stage1, finish;$/;"	m	class:madlib::modules::crf::LBFGS	file:
stale_possible_simple_keys	madpack/yaml/scanner.py	/^    def stale_possible_simple_keys(self):$/;"	m	class:Scanner
start_section	madpack/argparse.py	/^    def start_section(self, heading):$/;"	m	class:HelpFormatter
statCount	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::statCount(const ColumnVector &stats) const{$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
statPredict	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::statPredict(const ColumnVector &stats) const {$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
statWeightedCount	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::statWeightedCount(const ColumnVector &stats) const{$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
stateSize	modules/linalg/matrix_decomp.cpp	/^    static inline size_t stateSize(uint64_t inNumRows, uint64_t inNumCols) {$/;"	f	class:madlib::modules::linalg::MatrixComposeState	file:
stateToResult	modules/crf/linear_crf.cpp	/^AnyType stateToResult($/;"	f	namespace:madlib::modules::crf
stateToResult	modules/regress/logistic.cpp	/^AnyType stateToResult($/;"	f	namespace:madlib::modules::regress
stateToResult	modules/stats/coxph_improved.cpp	/^AnyType stateToResult($/;"	f	namespace:madlib::modules::stats
state_type	modules/convex/algo/gradient.hpp	/^    typedef State state_type;$/;"	t	class:madlib::modules::convex::Gradient
state_type	modules/convex/algo/gradient_norm.hpp	/^    typedef State state_type;$/;"	t	class:madlib::modules::convex::Gradient
state_type	modules/convex/algo/igd.hpp	/^    typedef State state_type;$/;"	t	class:madlib::modules::convex::IGD
state_type	modules/convex/algo/loss.hpp	/^    typedef State state_type;$/;"	t	class:madlib::modules::convex::Loss
state_type	modules/convex/algo/newton.hpp	/^    typedef State state_type;$/;"	t	class:madlib::modules::convex::Newton
stats	modules/stats/CoxPHState.hpp	/^namespace stats {$/;"	n	namespace:madlib::modules
stats	modules/stats/chi_squared_test.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/clustered_variance_coxph.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/correlation.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/cox_prop_hazards.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/coxph_improved.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/distribution.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/kolmogorov_smirnov_test.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/mann_whitney_test.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/marginal_cox.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/one_way_anova.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/robust_variance_coxph.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/t_test.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats	modules/stats/wilcoxon_signed_rank_test.cpp	/^namespace stats {$/;"	n	namespace:madlib::modules	file:
stats_lookup	modules/recursive_partitioning/DT_proto.hpp	/^    IntegerVector_type stats_lookup;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
stats_per_split	modules/recursive_partitioning/DT_proto.hpp	/^    uint16_type stats_per_split;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
status	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 status;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
status	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 status;$/;"	m	class:madlib::modules::regress::LogRegrIGDTransitionState	file:
status	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 status;$/;"	m	class:madlib::modules::regress::LogRegrIRLSTransitionState	file:
std	modules/convex/utils_regularization.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap std;$/;"	m	class:madlib::modules::convex::ScalesState	file:
std	modules/sample/WeightedSample_impl.hpp	/^namespace std {$/;"	n
std	ports/postgres/dbconnector/dbconnector.hpp	/^namespace std {$/;"	n
std	utils/libstdcxx-compatibility.cpp	/^namespace std {$/;"	n	file:
stdErr	modules/regress/LinearRegression_proto.hpp	/^    MutableNativeColumnVector stdErr;$/;"	m	class:madlib::modules::regress::LinearRegression
stdErr	modules/regress/LinearRegression_proto.hpp	/^    MutableNativeColumnVector stdErr;$/;"	m	class:madlib::modules::regress::RobustLinearRegression
std_err	modules/glm/GLM_proto.hpp	/^    MutableNativeColumnVector std_err;$/;"	m	class:madlib::modules::glm::GLMResult
std_err	modules/glm/MultiResponseGLM_proto.hpp	/^    MutableNativeMatrix std_err;$/;"	m	class:madlib::modules::glm::MultiResponseGLMResult
std_err_alpha	modules/glm/Ordinal_proto.hpp	/^    MutableNativeColumnVector std_err_alpha;$/;"	m	class:madlib::modules::glm::OrdinalResult
std_err_beta	modules/glm/Ordinal_proto.hpp	/^    MutableNativeColumnVector std_err_beta;$/;"	m	class:madlib::modules::glm::OrdinalResult
stem	libstemmer/libstemmer/libstemmer.c	/^    int (*stem)(struct SN_env *);$/;"	m	struct:sb_stemmer	file:
stem	libstemmer/libstemmer/modules.h	/^  int (*stem)(struct SN_env *);$/;"	m	struct:stemmer_modules
stemmer_encoding	libstemmer/libstemmer/modules.h	/^struct stemmer_encoding {$/;"	s
stemmer_encoding_t	libstemmer/libstemmer/modules.h	/^} stemmer_encoding_t;$/;"	t	typeref:enum:__anon11
stemmer_modules	libstemmer/libstemmer/modules.h	/^struct stemmer_modules {$/;"	s
step_decay	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble step_decay; \/\/ decay of step size$/;"	m	class:madlib::modules::elastic_net::IgdState
stepsize	modules/convex/type/state.hpp	/^        numeric_type stepsize;$/;"	m	struct:madlib::modules::convex::MLPIGDState::TaskState
stepsize	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToDouble stepsize;$/;"	m	struct:madlib::modules::convex::GLMCGState::TaskState
stepsize	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToDouble stepsize;$/;"	m	struct:madlib::modules::convex::GLMIGDState::TaskState
stepsize	modules/convex/type/state.hpp	/^        typename HandleTraits<Handle>::ReferenceToDouble stepsize;$/;"	m	struct:madlib::modules::convex::LMFIGDState::TaskState
stepsize	modules/convex/type/state.hpp	/^    numeric_type stepsize;$/;"	m	class:madlib::modules::convex::MLPMiniBatchState
stepsize	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble stepsize;$/;"	m	class:madlib::modules::elastic_net::FistaState
stepsize	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble stepsize;$/;"	m	class:madlib::modules::elastic_net::IgdState
stepsize	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble stepsize;$/;"	m	class:madlib::modules::regress::LogRegrIGDTransitionState	file:
stepsize_sum	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble stepsize_sum; \/\/ sum of step size so far$/;"	m	class:madlib::modules::elastic_net::FistaState
stmax	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
stmin	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
storage	dbal/ByteStreamHandleBuf_impl.hpp	/^ByteStreamHandleBuf<Storage, CharType, IsMutable>::storage() const {$/;"	f	class:madlib::dbal::ByteStreamHandleBuf
storage	dbal/ByteStreamHandleBuf_impl.hpp	/^ByteStreamHandleBuf<Storage, CharType, IsMutable>::storage() {$/;"	f	class:madlib::dbal::ByteStreamHandleBuf
storage	dbal/DynamicStruct_impl.hpp	/^    ::storage() const {$/;"	f	class:madlib::dbal::DynamicStructBase
storage	dbal/DynamicStruct_impl.hpp	/^DynamicStruct<Derived, Container, IsMutable>::storage() {$/;"	f	class:madlib::dbal::DynamicStruct
stp	modules/crf/linear_crf.cpp	/^    double stp1, ftol, stp, sq, yr, beta;$/;"	m	class:madlib::modules::crf::LBFGS	file:
stp1	modules/crf/linear_crf.cpp	/^    double stp1, ftol, stp, sq, yr, beta;$/;"	m	class:madlib::modules::crf::LBFGS	file:
streambuf	dbal/DynamicStruct_impl.hpp	/^DynamicStructRootContainer<Storage, TypeTraits>::streambuf() const {$/;"	f	class:madlib::dbal::DynamicStructRootContainer
streambuf	dbal/DynamicStruct_impl.hpp	/^DynamicStructRootContainer<Storage, TypeTraits>::streambuf() {$/;"	f	class:madlib::dbal::DynamicStructRootContainer
students_t	modules/prob/student.hpp	/^    students_t;$/;"	t	namespace:madlib::modules::prob
stx	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
sty	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
subprocess	madpack/configyml.py	/^import subprocess$/;"	i
subprocess	madpack/madpack.py	/^import subprocess$/;"	i
subprocess	madpack/utilities.py	/^import subprocess$/;"	i
substring_i	libstemmer/runtime/header.h	/^    int substring_i;\/* index to longest matching substring *\/$/;"	m	struct:among
sum	modules/stats/one_way_anova.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap sum;$/;"	m	class:madlib::modules::stats::OWATransitionState	file:
sumOfVectors	modules/linalg/average.cpp	/^        sumOfVectors;$/;"	m	class:madlib::modules::linalg::AvgVectorState	file:
sumSquaredDeviations	modules/stats/chi_squared_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble sumSquaredDeviations;$/;"	m	class:madlib::modules::stats::Chi2TestTransitionState	file:
sum_expect	modules/stats/chi_squared_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble sum_expect;$/;"	m	class:madlib::modules::stats::Chi2TestTransitionState	file:
sum_obs	modules/stats/chi_squared_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble sum_obs;$/;"	m	class:madlib::modules::stats::Chi2TestTransitionState	file:
sum_obs_square_over_expect	modules/stats/chi_squared_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble sum_obs_square_over_expect;$/;"	m	class:madlib::modules::stats::Chi2TestTransitionState	file:
sum_risk	modules/recursive_partitioning/decision_tree.cpp	/^    double sum_risk;$/;"	m	struct:madlib::modules::recursive_partitioning::SubTreeInfo	file:
sum_x	modules/stats/cox_prop_hazards.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap sum_x;$/;"	m	class:madlib::modules::stats::ArrayElemCorrState	file:
sum_xx	modules/stats/cox_prop_hazards.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap sum_xx;$/;"	m	class:madlib::modules::stats::ArrayElemCorrState	file:
sum_xy	modules/stats/cox_prop_hazards.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap sum_xy;$/;"	m	class:madlib::modules::stats::ArrayElemCorrState	file:
sum_y	modules/stats/cox_prop_hazards.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble sum_y;$/;"	m	class:madlib::modules::stats::ArrayElemCorrState	file:
sum_yy	modules/stats/cox_prop_hazards.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble sum_yy;$/;"	m	class:madlib::modules::stats::ArrayElemCorrState	file:
support	modules/prob/kolmogorov.hpp	/^support(const kolmogorov_distribution<RealType, Policy>& \/*dist*\/) {$/;"	f	namespace:madlib::modules::prob
surr_agreement	modules/recursive_partitioning/DT_proto.hpp	/^    IntegerVector_type surr_agreement;$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
surr_display	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::surr_display($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
surr_indices	modules/recursive_partitioning/DT_proto.hpp	/^    IntegerVector_type surr_indices;$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
surr_status	modules/recursive_partitioning/DT_proto.hpp	/^    IntegerVector_type surr_status;$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
surr_thresholds	modules/recursive_partitioning/DT_proto.hpp	/^    ColumnVector_type surr_thresholds;   \/\/ used as integer if classification$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
surr_tuple_type	modules/recursive_partitioning/DT_proto.hpp	/^                       > surr_tuple_type;$/;"	t	class:madlib::modules::recursive_partitioning::TreeAccumulator
swedish_ISO_8859_1_close_env	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^extern void swedish_ISO_8859_1_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
swedish_ISO_8859_1_create_env	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^extern struct SN_env * swedish_ISO_8859_1_create_env(void) { return SN_create_env(0, 2, 0); }$/;"	f
swedish_ISO_8859_1_stem	libstemmer/src_c/stem_ISO_8859_1_swedish.c	/^extern int swedish_ISO_8859_1_stem(struct SN_env * z) {$/;"	f
swedish_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_swedish.c	/^extern void swedish_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
swedish_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_swedish.c	/^extern struct SN_env * swedish_UTF_8_create_env(void) { return SN_create_env(0, 2, 0); }$/;"	f
swedish_UTF_8_stem	libstemmer/src_c/stem_UTF_8_swedish.c	/^extern int swedish_UTF_8_stem(struct SN_env * z) {$/;"	f
symbol	libstemmer/runtime/api.h	/^typedef unsigned char symbol;$/;"	t
sync	dbal/OutputStreamBufferBase_impl.hpp	/^OutputStreamBufferBase<Derived, C, Allocator>::sync() {$/;"	f	class:madlib::dbal::OutputStreamBufferBase
sys	madpack/create_changelist.py	/^import sys$/;"	i
sys	madpack/madpack.py	/^import sys$/;"	i
sys	madpack/sort-module.py	/^import sys$/;"	i
sys	madpack/utilities.py	/^import sys$/;"	i
sys	madpack/yaml/constructor.py	/^import binascii, re, sys, types$/;"	i
sys	madpack/yaml/representer.py	/^import sys, copy_reg, types$/;"	i
tStats	modules/regress/LinearRegression_proto.hpp	/^    MutableNativeColumnVector tStats;$/;"	m	class:madlib::modules::regress::LinearRegression
tStats	modules/regress/LinearRegression_proto.hpp	/^    MutableNativeColumnVector tStats;$/;"	m	class:madlib::modules::regress::RobustLinearRegression
tStatsToResult	modules/stats/t_test.cpp	/^tStatsToResult(double inT, double inDegreeOfFreedom) {$/;"	f	namespace:madlib::modules::stats::__anon20
take_action	madpack/argparse.py	/^        def take_action(action, argument_strings, option_string=None):$/;"	f	function:ArgumentParser._parse_known_args
tanh	modules/convex/task/mlp.hpp	/^    static double tanh(const double &xi) {$/;"	f	class:madlib::modules::convex::MLP
tanhDerivative	modules/convex/task/mlp.hpp	/^    static double tanhDerivative(const double &xi) {$/;"	f	class:madlib::modules::convex::MLP
task	modules/convex/type/state.hpp	/^    } task;$/;"	m	class:madlib::modules::convex::GLMCGState	typeref:struct:madlib::modules::convex::GLMCGState::TaskState
task	modules/convex/type/state.hpp	/^    } task;$/;"	m	class:madlib::modules::convex::GLMIGDState	typeref:struct:madlib::modules::convex::GLMIGDState::TaskState
task	modules/convex/type/state.hpp	/^    } task;$/;"	m	class:madlib::modules::convex::GLMNewtonState	typeref:struct:madlib::modules::convex::GLMNewtonState::TaskState
task	modules/convex/type/state.hpp	/^    } task;$/;"	m	class:madlib::modules::convex::LMFIGDState	typeref:struct:madlib::modules::convex::LMFIGDState::TaskState
task	modules/convex/type/state.hpp	/^    } task;$/;"	m	class:madlib::modules::convex::MLPIGDState	typeref:struct:madlib::modules::convex::MLPIGDState::TaskState
tdeath	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble tdeath;$/;"	m	class:madlib::modules::stats::CoxPHState
tearDown	madpack/upgrade_util.py	/^    def tearDown(self):$/;"	m	class:TestChangeHandler
tearDown	madpack/utilities.py	/^    def tearDown(self):$/;"	m	class:RevTest
tell	dbal/ByteStreamHandleBuf_impl.hpp	/^ByteStreamHandleBuf<Storage, CharType, IsMutable>::tell() const {$/;"	f	class:madlib::dbal::ByteStreamHandleBuf
tell	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::tell() const {$/;"	f	class:madlib::dbal::ByteStream
tempfile	madpack/madpack.py	/^import tempfile$/;"	i
termToler	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble termToler;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
terminated	modules/glm/GLM_proto.hpp	/^    bool_type terminated;$/;"	m	class:madlib::modules::glm::GLMAccumulator
terminated	modules/glm/MultiResponseGLM_proto.hpp	/^    bool_type terminated;$/;"	m	class:madlib::modules::glm::MultiResponseGLMAccumulator
terminated	modules/glm/Ordinal_proto.hpp	/^    bool_type terminated;$/;"	m	class:madlib::modules::glm::OrdinalAccumulator
terminated	modules/recursive_partitioning/DT_proto.hpp	/^    bool_type terminated;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
test_get_rev_num	madpack/utilities.py	/^    def test_get_rev_num(self):$/;"	m	class:RevTest
test_invalid_path	madpack/upgrade_util.py	/^    def test_invalid_path(self):$/;"	m	class:TestChangeHandler
test_is_rev_gte	madpack/utilities.py	/^    def test_is_rev_gte(self):$/;"	m	class:RevTest
test_statistic	modules/regress/LinearRegression_proto.hpp	/^    double test_statistic;$/;"	m	class:madlib::modules::regress::HeteroLinearRegression
test_valid_path	madpack/upgrade_util.py	/^    def test_valid_path(self):$/;"	m	class:TestChangeHandler
theta	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap theta; \/\/ used for mirror truncation$/;"	m	class:madlib::modules::elastic_net::IgdState
this	madpack/madpack.py	/^this = os.path.basename(sys.argv[0])    # name of this script$/;"	v
this	madpack/utilities.py	/^this = os.path.basename(sys.argv[0])    # name of this script$/;"	v
threshold	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble threshold; \/\/ used for remove tiny values$/;"	m	class:madlib::modules::elastic_net::IgdState
tie12	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap tie12;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
tie13	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap tie13;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
tie22	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap tie22;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
tie23	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap tie23;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
tie33	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble tie33;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
timestamp_regexp	madpack/yaml/constructor.py	/^    timestamp_regexp = re.compile($/;"	v	class:SafeConstructor
tk	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble tk;$/;"	m	class:madlib::modules::elastic_net::FistaState
tmpdir	madpack/madpack.py	/^tmpdir = None$/;"	v
toSysInfo	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    static SystemInformation* toSysInfo(const value_type&) {$/;"	f	struct:madlib::dbconnector::postgres::TypeTraitsBase
to_yaml	madpack/yaml/__init__.py	/^    def to_yaml(cls, dumper, data):$/;"	m	class:YAMLObject
to_yaml	madpack/yaml/__init__.py	/^    to_yaml = classmethod(to_yaml)$/;"	v	class:YAMLObject
topsort	madpack/configyml.py	/^def topsort(depdict):$/;"	f
topsort_modules	madpack/configyml.py	/^def topsort_modules(conf):$/;"	f
totalRows	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 totalRows;$/;"	m	class:madlib::modules::elastic_net::FistaState
totalRows	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt64 totalRows;$/;"	m	class:madlib::modules::elastic_net::IgdState
total_n_cat_levels	modules/recursive_partitioning/DT_proto.hpp	/^    uint32_type total_n_cat_levels;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
traceback	madpack/madpack.py	/^import traceback$/;"	i
training_data_vcov	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap training_data_vcov;$/;"	m	class:madlib::modules::regress::MarginsLinregrInteractionState	file:
training_data_vcov	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap training_data_vcov;$/;"	m	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
training_data_vcov	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap training_data_vcov;$/;"	m	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
training_data_vcov	modules/stats/marginal_cox.cpp	/^    typename HandleTraits<Handle>::MatrixTransparentHandleMap training_data_vcov;$/;"	m	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
traits_type	dbal/OutputStreamBufferBase_proto.hpp	/^    typedef typename Base::traits_type traits_type;$/;"	t	class:madlib::dbal::OutputStreamBufferBase
trans	dbal/EigenIntegration/EigenIntegration.hpp	/^static trans(const Eigen::MatrixBase<Derived>& mat) {$/;"	f	namespace:madlib::dbal::eigen_integration
transition	modules/convex/algo/gradient.hpp	/^Gradient<State, ConstState, Task>::transition(state_type &state,$/;"	f	class:madlib::modules::convex::Gradient
transition	modules/convex/algo/gradient_norm.hpp	/^Gradient<State, ConstState, Task>::transition(state_type &state,$/;"	f	class:madlib::modules::convex::Gradient
transition	modules/convex/algo/igd.hpp	/^IGD<State, ConstState, Task>::transition(state_type &state,$/;"	f	class:madlib::modules::convex::IGD
transition	modules/convex/algo/loss.hpp	/^Loss<State, ConstState, Task>::transition(state_type &state,$/;"	f	class:madlib::modules::convex::Loss
transition	modules/convex/algo/newton.hpp	/^Newton<State, ConstState, Task>::transition(state_type &state,$/;"	f	class:madlib::modules::convex::Newton
transitionInMiniBatch	modules/convex/algo/igd.hpp	/^ IGD<State, ConstState, Task>::transitionInMiniBatch($/;"	f	class:madlib::modules::convex::IGD
transverse_tree	modules/recursive_partitioning/decision_tree.cpp	/^void transverse_tree(Tree &dt, MutableNativeMatrix &frame,$/;"	f	namespace:madlib::modules::recursive_partitioning
transverse_tree_thresh	modules/recursive_partitioning/decision_tree.cpp	/^transverse_tree_thresh(const Tree &dt, MutableNativeMatrix &thresh,$/;"	f	namespace:madlib::modules::recursive_partitioning
tree_depth	modules/recursive_partitioning/DT_proto.hpp	/^    uint16_type tree_depth; \/\/ 1 for root-only tree$/;"	m	class:madlib::modules::recursive_partitioning::DecisionTree
tree_type	modules/recursive_partitioning/DT_proto.hpp	/^    typedef DTree tree_type;$/;"	t	class:madlib::modules::recursive_partitioning::TreeAccumulator
triangularView	dbal/EigenIntegration/EigenIntegration.hpp	/^static triangularView(Eigen::MatrixBase<Derived>& mat) {$/;"	f	namespace:madlib::dbal::eigen_integration
trueChild	modules/recursive_partitioning/DT_proto.hpp	/^    Index trueChild(Index current) const { return 2 * current + 1; }$/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
tsa	modules/tsa/arima.cpp	/^namespace tsa {$/;"	n	namespace:madlib::modules	file:
tupdesc	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    TupleDesc tupdesc;$/;"	m	struct:madlib::dbconnector::postgres::FunctionInformation
tupdesc	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    TupleDesc tupdesc;$/;"	m	struct:madlib::dbconnector::postgres::TypeInformation
tuple_type	modules/convex/algo/gradient.hpp	/^    typedef typename Task::tuple_type tuple_type;$/;"	t	class:madlib::modules::convex::Gradient
tuple_type	modules/convex/algo/gradient_norm.hpp	/^    typedef typename Task::tuple_type tuple_type;$/;"	t	class:madlib::modules::convex::Gradient
tuple_type	modules/convex/algo/igd.hpp	/^    typedef typename Task::tuple_type tuple_type;$/;"	t	class:madlib::modules::convex::IGD
tuple_type	modules/convex/algo/loss.hpp	/^    typedef typename Task::tuple_type tuple_type;$/;"	t	class:madlib::modules::convex::Loss
tuple_type	modules/convex/algo/newton.hpp	/^    typedef typename Task::tuple_type tuple_type;$/;"	t	class:madlib::modules::convex::Newton
tuple_type	modules/convex/task/linear_svm.hpp	/^    typedef Tuple tuple_type;$/;"	t	class:madlib::modules::convex::LinearSVM
tuple_type	modules/convex/task/lmf.hpp	/^    typedef Tuple tuple_type;$/;"	t	class:madlib::modules::convex::LMF
tuple_type	modules/convex/task/mlp.hpp	/^    typedef Tuple tuple_type;$/;"	t	class:madlib::modules::convex::MLP
tuple_type	modules/convex/task/ols.hpp	/^    typedef Tuple tuple_type;$/;"	t	class:madlib::modules::convex::OLS
tuple_type	modules/glm/GLM_proto.hpp	/^    typedef std::tuple<MappedColumnVector,double> tuple_type;$/;"	t	class:madlib::modules::glm::GLMAccumulator
tuple_type	modules/glm/MultiResponseGLM_proto.hpp	/^    typedef std::tuple<MappedColumnVector,double> tuple_type;$/;"	t	class:madlib::modules::glm::MultiResponseGLMAccumulator
tuple_type	modules/glm/Ordinal_proto.hpp	/^    typedef std::tuple<MappedColumnVector,double> tuple_type;$/;"	t	class:madlib::modules::glm::OrdinalAccumulator
tuple_type	modules/recursive_partitioning/DT_proto.hpp	/^                      > tuple_type;$/;"	t	class:madlib::modules::recursive_partitioning::TreeAccumulator
tuple_type	modules/regress/LinearRegression_proto.hpp	/^    typedef std::tuple<MappedColumnVector, double, MappedColumnVector> tuple_type;$/;"	t	class:madlib::modules::regress::RobustLinearRegressionAccumulator
tuple_type	modules/regress/LinearRegression_proto.hpp	/^    typedef std::tuple<MappedColumnVector, double> tuple_type;$/;"	t	class:madlib::modules::regress::LinearRegressionAccumulator
tuple_type	modules/sample/WeightedSample_proto.hpp	/^    typedef std::tuple<T, double> tuple_type;$/;"	t	class:madlib::modules::sample::WeightedSampleAccumulator
turkish_UTF_8_close_env	libstemmer/src_c/stem_UTF_8_turkish.c	/^extern void turkish_UTF_8_close_env(struct SN_env * z) { SN_close_env(z, 0); }$/;"	f
turkish_UTF_8_create_env	libstemmer/src_c/stem_UTF_8_turkish.c	/^extern struct SN_env * turkish_UTF_8_create_env(void) { return SN_create_env(0, 1, 1); }$/;"	f
turkish_UTF_8_stem	libstemmer/src_c/stem_UTF_8_turkish.c	/^extern int turkish_UTF_8_stem(struct SN_env * z) {$/;"	f
typalign	modules/assoc_rules/assoc_rules.cpp	/^    char     typalign;$/;"	m	struct:madlib::modules::assoc_rules::perm_fctx	file:
typbyval	modules/assoc_rules/assoc_rules.cpp	/^    bool     typbyval;$/;"	m	struct:madlib::modules::assoc_rules::perm_fctx	file:
type	dbal/DynamicStruct_impl.hpp	/^        TransparentHandle<double, IsMutable> > type;$/;"	t	struct:madlib::dbal::DynamicStructType
type	dbal/DynamicStruct_impl.hpp	/^        TransparentHandle<int, IsMutable> > type;$/;"	t	struct:madlib::dbal::DynamicStructType
type	dbal/DynamicStruct_impl.hpp	/^    typedef Ref<T, IsMutable> type;$/;"	t	struct:madlib::dbal::DynamicStructType
type	ports/postgres/dbconnector/EigenIntegration_proto.hpp	/^        type;$/;"	t	struct:madlib::dbal::DynamicStructType
type	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    char type;$/;"	m	struct:madlib::dbconnector::postgres::TypeInformation
type	utils/shapeToExtents.hpp	/^    typedef boost::detail::multi_array::extent_gen<1> type;$/;"	t	struct:madlib::utils::internal_shapeToExtents
type	utils/shapeToExtents.hpp	/^    typedef boost::detail::multi_array::extent_gen<Dim + 1> type;$/;"	t	struct:madlib::utils::internal_shapeToExtents
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::ArrayType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon57
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::ArrayType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon60
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::ArrayType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon63
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::ArrayType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon66
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::ArrayType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon70
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::ArrayType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon74
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::ArrayType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon78
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::ArrayType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon82
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::ArrayType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon85
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::ArrayType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon88
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::ArrayType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraits::__anon91
typeClass	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    enum { typeClass = dbal::SimpleType };$/;"	e	enum:madlib::dbconnector::postgres::TypeTraitsBase::__anon36
typeInformation	ports/postgres/dbconnector/SystemInformation_impl.hpp	/^SystemInformation::typeInformation(Oid inTypeID) {$/;"	f	class:madlib::dbconnector::postgres::SystemInformation
typeName	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    static const char* typeName() {$/;"	f	struct:madlib::dbconnector::postgres::TypeTraitsBase
type_is_array	ports/greenplum/dbconnector/Compatibility.hpp	37;"	d
type_is_array	ports/postgres/dbconnector/Compatibility.hpp	54;"	d
types	madpack/yaml/constructor.py	/^import binascii, re, sys, types$/;"	i
types	madpack/yaml/representer.py	/^import sys, copy_reg, types$/;"	i
types	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    HTAB *types;$/;"	m	struct:madlib::dbconnector::postgres::SystemInformation
typlen	modules/assoc_rules/assoc_rules.cpp	/^    int16    typlen;$/;"	m	struct:madlib::modules::assoc_rules::perm_fctx	file:
u	modules/convex/type/model.hpp	/^    std::vector<MutableMappedMatrix> u;$/;"	m	struct:madlib::modules::convex::MLPModel
uda	madpack/upgrade_util.py	/^    def uda(self):$/;"	m	class:ChangeHandler
uda_list	madpack/create_changelist.py	/^    uda_list=[]$/;"	v
udc	madpack/upgrade_util.py	/^    def udc(self):$/;"	m	class:ChangeHandler
udf	madpack/upgrade_util.py	/^    def udf(self):$/;"	m	class:ChangeHandler
udf_list	madpack/create_changelist.py	/^    udf_list=[]$/;"	v
udo	madpack/upgrade_util.py	/^    def udo(self):$/;"	m	class:ChangeHandler
udoc	madpack/upgrade_util.py	/^    def udoc(self):$/;"	m	class:ChangeHandler
udt	madpack/upgrade_util.py	/^    def udt(self):$/;"	m	class:ChangeHandler
udt_list	madpack/create_changelist.py	/^    udt_list=[]$/;"	v
unaligned	ports/postgres/dbconnector/Allocator_impl.hpp	/^Allocator::unaligned(void *inPtr) const {$/;"	f	class:madlib::dbconnector::postgres::Allocator
unescape	madpack/madpack.py	/^def unescape(string):$/;"	f
unittest	madpack/upgrade_util.py	/^import unittest$/;"	i
unittest	madpack/utilities.py	/^import unittest$/;"	i
unless	libstemmer/runtime/utilities.c	8;"	d	file:
unsetFunctionCallOptions	ports/postgres/dbconnector/FunctionHandle_impl.hpp	/^FunctionHandle::unsetFunctionCallOptions(uint32_t inFlags) {$/;"	f	class:madlib::dbconnector::postgres::FunctionHandle
unwind_indent	madpack/yaml/scanner.py	/^    def unwind_indent(self, column):$/;"	m	class:Scanner
update	madpack/yaml/reader.py	/^    def update(self, length):$/;"	m	class:Reader
updateCorrectedSumOfSquares	modules/stats/one_way_anova.cpp	/^updateCorrectedSumOfSquares(double &ioLeftWeight, double &ioLeftSum,$/;"	f	namespace:madlib::modules::stats
updateCorrectedSumOfSquares	modules/stats/t_test.cpp	/^updateCorrectedSumOfSquares(double &ioLeftWeight, double &ioLeftSum,$/;"	f	namespace:madlib::modules::stats
updateNodeStats	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::updateNodeStats(bool is_regression,$/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
updatePrimarySplit	modules/recursive_partitioning/DT_impl.hpp	/^DecisionTree<Container>::updatePrimarySplit($/;"	f	class:madlib::modules::recursive_partitioning::DecisionTree
updateStats	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::updateStats(bool is_regression,$/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
updateSumSquaredDeviations	modules/stats/chi_squared_test.cpp	/^updateSumSquaredDeviations(double &ioLeftNumRows, double &ioLeftSumExp,$/;"	f	namespace:madlib::modules::stats
updateSurrStats	modules/recursive_partitioning/DT_impl.hpp	/^TreeAccumulator<Container, DTree>::updateSurrStats($/;"	f	class:madlib::modules::recursive_partitioning::TreeAccumulator
update_b_intercept	modules/elastic_net/elastic_net_binomial_fista.cpp	/^inline void BinomialFista::update_b_intercept (FistaState<MutableArrayHandle<double> >& state)$/;"	f	class:madlib::modules::elastic_net::BinomialFista
update_b_intercept	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^inline void GaussianFista::update_b_intercept (FistaState<MutableArrayHandle<double> >& state)$/;"	f	class:madlib::modules::elastic_net::GaussianFista
update_intercept	modules/elastic_net/elastic_net_binomial_igd.cpp	/^inline void BinomialIgd::update_intercept (IgdState<MutableArrayHandle<double> >& state,$/;"	f	class:madlib::modules::elastic_net::BinomialIgd
update_intercept	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^inline void GaussianIgd::update_intercept ($/;"	f	class:madlib::modules::elastic_net::GaussianIgd
update_intercept_final	modules/elastic_net/elastic_net_binomial_igd.cpp	/^inline void BinomialIgd::update_intercept_final (IgdState<MutableArrayHandle<double> >& state)$/;"	f	class:madlib::modules::elastic_net::BinomialIgd
update_intercept_final	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^inline void GaussianIgd::update_intercept_final ($/;"	f	class:madlib::modules::elastic_net::GaussianIgd
update_loglikelihood	modules/elastic_net/elastic_net_binomial_fista.cpp	/^inline void BinomialFista::update_loglikelihood($/;"	f	class:madlib::modules::elastic_net::BinomialFista
update_loglikelihood	modules/elastic_net/elastic_net_binomial_igd.cpp	/^inline void BinomialIgd::update_loglikelihood($/;"	f	class:madlib::modules::elastic_net::BinomialIgd
update_loglikelihood	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^inline void GaussianFista::update_loglikelihood ($/;"	f	class:madlib::modules::elastic_net::GaussianFista
update_loglikelihood	modules/elastic_net/elastic_net_gaussian_igd.cpp	/^inline void GaussianIgd::update_loglikelihood ($/;"	f	class:madlib::modules::elastic_net::GaussianIgd
update_prez	modules/tsa/arima.cpp	/^static double * update_prez(double * prez, int q, double z)$/;"	f	namespace:madlib::modules::tsa
update_raw	madpack/yaml/reader.py	/^    def update_raw(self, size=1024):$/;"	m	class:Reader
update_y_intercept	modules/elastic_net/elastic_net_binomial_fista.cpp	/^inline void BinomialFista::update_y_intercept (FistaState<MutableArrayHandle<double> >& state,$/;"	f	class:madlib::modules::elastic_net::BinomialFista
update_y_intercept	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^inline void GaussianFista::update_y_intercept (FistaState<MutableArrayHandle<double> >& state,$/;"	f	class:madlib::modules::elastic_net::GaussianFista
update_y_intercept_final	modules/elastic_net/elastic_net_binomial_fista.cpp	/^inline void BinomialFista::update_y_intercept_final(FistaState<MutableArrayHandle<double> >& state)$/;"	f	class:madlib::modules::elastic_net::BinomialFista
update_y_intercept_final	modules/elastic_net/elastic_net_gaussian_fista.cpp	/^inline void GaussianFista::update_y_intercept_final ($/;"	f	class:madlib::modules::elastic_net::GaussianFista
use_active_set	modules/elastic_net/state/fista.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 use_active_set; \/\/ whether to use active set method$/;"	m	class:madlib::modules::elastic_net::FistaState
user_domain_error	dbal/BoostIntegration/MathToolkit_impl.hpp	/^user_domain_error(const char*, const char* inMessage, const T& inVal) {$/;"	f	namespace:boost::math::policies
user_fctx	ports/postgres/dbconnector/SystemInformation_proto.hpp	/^    void *user_fctx;$/;"	m	struct:madlib::dbconnector::postgres::SystemInformation
utf_16_be_decode	madpack/yaml/reader.py	/^    def utf_16_be_decode(data, errors, finish=False):$/;"	f
utf_16_be_decode	madpack/yaml/reader.py	/^    from codecs import utf_8_decode, utf_16_le_decode, utf_16_be_decode$/;"	i
utf_16_le_decode	madpack/yaml/reader.py	/^    def utf_16_le_decode(data, errors, finish=False):$/;"	f
utf_16_le_decode	madpack/yaml/reader.py	/^    from codecs import utf_8_decode, utf_16_le_decode, utf_16_be_decode$/;"	i
utf_8_decode	madpack/yaml/reader.py	/^    def utf_8_decode(data, errors, finish=False):$/;"	f
utf_8_decode	madpack/yaml/reader.py	/^    from codecs import utf_8_decode, utf_16_le_decode, utf_16_be_decode$/;"	i
utilities	modules/utilities/path.cpp	/^namespace utilities {$/;"	n	namespace:madlib::modules	file:
utils	utils/MallocAllocator.hpp	/^namespace utils {$/;"	n	namespace:madlib
utils	utils/Math.hpp	/^namespace utils {$/;"	n	namespace:madlib
utils	utils/Reference.hpp	/^namespace utils {$/;"	n	namespace:madlib
utils	utils/memory.hpp	/^namespace utils {$/;"	n	namespace:madlib
utils	utils/shapeToExtents.hpp	/^namespace utils {$/;"	n	namespace:madlib
uu	madpack/madpack.py	/^import upgrade_util as uu$/;"	i
v	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap v;$/;"	m	class:madlib::modules::linear_systems::SparseDirectLinearSystemTransitionState	file:
v	modules/linear_systems/sparse_linear_systems.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap v;$/;"	m	class:madlib::modules::linear_systems::SparseInMemIterativeLinearSystemTransitionState	file:
val_type	dbal/Reference_proto.hpp	/^    typedef T val_type;$/;"	t	class:madlib::dbal::Ref
val_type	dbal/Reference_proto.hpp	/^    typedef const T val_type;$/;"	t	class:madlib::dbal::Ref
val_type	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^    typedef T val_type;$/;"	t	class:madlib::dbconnector::postgres::TransparentHandle
val_type	ports/postgres/dbconnector/TransparentHandle_proto.hpp	/^    typedef const T val_type;$/;"	t	class:madlib::dbconnector::postgres::TransparentHandle
validate_label	modules/crf/linear_crf.cpp	/^void validate_label(int label_id, int num_labels)$/;"	f	namespace:madlib::modules::crf
value_type	modules/prob/kolmogorov.hpp	/^    typedef RealType value_type;$/;"	t	class:madlib::modules::prob::kolmogorov_distribution
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^        ArrayHandle<double> > value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^        ArrayHandle<int> > value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^        MutableArrayHandle<double> > value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^        MutableArrayHandle<int> > value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef ArrayHandle<double> value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef ArrayHandle<text*> value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef Eigen::Block<XprType, BlockRows, 1, InnerPanel> value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel> value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef Eigen::MatrixBase<Derived> value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef FunctionHandle value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef MutableArrayHandle<double> value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef T value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraitsBase
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef char* value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef dbal::eigen_integration::ColumnVector value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef dbal::eigen_integration::IntegerVector value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef dbal::eigen_integration::Matrix value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef dbal::eigen_integration::SparseColumnVector value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef float value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef std::string value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	ports/postgres/dbconnector/TypeTraits_impl.hpp	/^    typedef typename Base::value_type value_type;$/;"	t	struct:madlib::dbconnector::postgres::TypeTraits
value_type	utils/MallocAllocator.hpp	/^    typedef T value_type;$/;"	t	class:madlib::utils::MallocAllocator
value_type	utils/MallocAllocator.hpp	/^    typedef void value_type;$/;"	t	class:madlib::utils::MallocAllocator
variance	modules/glm/family.hpp	/^    static double variance(const double &) { return 1.; }$/;"	f	class:madlib::modules::glm::Gaussian
variance	modules/glm/family.hpp	/^    static double variance(const double &mu) { return mu * (1 - mu); }$/;"	f	class:madlib::modules::glm::Binomial
variance	modules/glm/family.hpp	/^    static double variance(const double &mu) { return mu*mu*mu; }$/;"	f	class:madlib::modules::glm::InverseGaussian
variance	modules/glm/family.hpp	/^    static double variance(const double &mu) { return mu*mu; }$/;"	f	class:madlib::modules::glm::Gamma
variance	modules/glm/family.hpp	/^    static double variance(const double &mu) { return mu; }$/;"	f	class:madlib::modules::glm::Poisson
variance	modules/glm/family.hpp	/^    static void variance(const ColumnVector &mu, Matrix &mVar) {$/;"	f	class:madlib::modules::glm::Multinomial
vcov	modules/glm/GLM_proto.hpp	/^    Matrix_type vcov;$/;"	m	class:madlib::modules::glm::GLMAccumulator
vcov	modules/glm/MultiResponseGLM_proto.hpp	/^    Matrix_type vcov;$/;"	m	class:madlib::modules::glm::MultiResponseGLMAccumulator
vcov	modules/glm/Ordinal_proto.hpp	/^    Matrix_type vcov;$/;"	m	class:madlib::modules::glm::OrdinalAccumulator
vcov	modules/regress/LinearRegression_proto.hpp	/^    MutableNativeMatrix vcov;$/;"	m	class:madlib::modules::regress::LinearRegression
vec	modules/linalg/svd.cpp	/^    ColumnVector vec;$/;"	m	struct:madlib::modules::linalg::__sr_ctx	file:
velocity	modules/convex/type/model.hpp	/^    std::vector<MutableMappedMatrix> velocity;$/;"	m	struct:madlib::modules::convex::MLPModel
verbose	madpack/madpack.py	/^verbose = None      # Verbose flag$/;"	v
w	modules/crf/linear_crf.cpp	/^    ColumnVector w;\/\/$/;"	m	class:madlib::modules::crf::LBFGS	file:
warning	ports/postgres/dbconnector/dbconnector.hpp	/^inline void warning(std::string msg){$/;"	f	namespace:madlib
warnings	madpack/argparse.py	/^            import warnings$/;"	i
warnings	madpack/argparse.py	/^        import warnings$/;"	i
warnings	madpack/argparse.py	/^    import warnings$/;"	i
weight	modules/convex/type/tuple.hpp	/^    double weight;$/;"	m	struct:madlib::modules::convex::ExampleTuple
weight_sum	modules/sample/WeightedSample_proto.hpp	/^    double_type weight_sum;$/;"	m	class:madlib::modules::sample::WeightedSampleAccumulator
weights_as_rows	modules/recursive_partitioning/DT_proto.hpp	/^    bool_type weights_as_rows;$/;"	m	class:madlib::modules::recursive_partitioning::TreeAccumulator
width	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
width	modules/sample/WeightedSample_proto.hpp	/^    typename DynamicStructType<uint32_t, IsMutable>::type width;$/;"	m	struct:madlib::modules::sample::WeightedSampleHeader
width1	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
widthOfA	modules/linear_systems/dense_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 widthOfA;$/;"	m	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState	file:
widthOfA	modules/linear_systems/dense_linear_systems_states.hpp	/^    uint16_type widthOfA;$/;"	m	class:madlib::modules::linear_systems::ResidualState
widthOfA	modules/linear_systems/sparse_linear_systems_states.hpp	/^    uint16_type widthOfA;$/;"	m	class:madlib::modules::linear_systems::ResidualState
widthOfX	modules/regress/LinearRegression_proto.hpp	/^    uint16_type widthOfX;$/;"	m	class:madlib::modules::regress::HeteroLinearRegressionAccumulator
widthOfX	modules/regress/LinearRegression_proto.hpp	/^    uint16_type widthOfX;$/;"	m	class:madlib::modules::regress::LinearRegressionAccumulator
widthOfX	modules/regress/LinearRegression_proto.hpp	/^    uint16_type widthOfX;$/;"	m	class:madlib::modules::regress::RobustLinearRegressionAccumulator
widthOfX	modules/regress/clustered_errors_state.hpp	/^    uint16_type widthOfX;$/;"	m	class:madlib::modules::regress::ClusteredState
widthOfX	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::regress::LogRegrCGTransitionState	file:
widthOfX	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::regress::LogRegrIGDTransitionState	file:
widthOfX	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::regress::LogRegrIRLSTransitionState	file:
widthOfX	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::regress::MarginalLogRegrTransitionState	file:
widthOfX	modules/regress/logistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::regress::RobustLogRegrTransitionState	file:
widthOfX	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;       \/\/ N$/;"	m	class:madlib::modules::regress::MarginsMLogregrInteractionState	file:
widthOfX	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::regress::MarginsLinregrInteractionState	file:
widthOfX	modules/regress/marginal.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::regress::MarginsLogregrInteractionState	file:
widthOfX	modules/regress/mlogr_margins.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::regress::mlogregrMarginalTransitionState	file:
widthOfX	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::regress::MLogRegrIRLSTransitionState	file:
widthOfX	modules/regress/multilogistic.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::regress::MLogRegrRobustTransitionState	file:
widthOfX	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::stats::CoxPHState
widthOfX	modules/stats/clustered_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::stats::CLABTransitionState	file:
widthOfX	modules/stats/cox_prop_hazards.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::stats::ArrayElemCorrState	file:
widthOfX	modules/stats/marginal_cox.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::stats::MarginsCoxPropHazardState	file:
widthOfX	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
widthOfX	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt16 widthOfX;$/;"	m	class:madlib::modules::stats::RBHSTransitionState	file:
widthOfb	modules/linear_systems/dense_linear_systems.cpp	/^    typename HandleTraits<Handle>::ReferenceToUInt32 widthOfb;$/;"	m	class:madlib::modules::linear_systems::DenseDirectLinearSystemTransitionState	file:
write_double_quoted	madpack/yaml/emitter.py	/^    def write_double_quoted(self, text, split=True):$/;"	m	class:Emitter
write_folded	madpack/yaml/emitter.py	/^    def write_folded(self, text):$/;"	m	class:Emitter
write_indent	madpack/yaml/emitter.py	/^    def write_indent(self):$/;"	m	class:Emitter
write_indicator	madpack/yaml/emitter.py	/^    def write_indicator(self, indicator, need_whitespace,$/;"	m	class:Emitter
write_line_break	madpack/yaml/emitter.py	/^    def write_line_break(self, data=None):$/;"	m	class:Emitter
write_literal	madpack/yaml/emitter.py	/^    def write_literal(self, text):$/;"	m	class:Emitter
write_plain	madpack/yaml/emitter.py	/^    def write_plain(self, text, split=True):$/;"	m	class:Emitter
write_single_quoted	madpack/yaml/emitter.py	/^    def write_single_quoted(self, text, split=True):$/;"	m	class:Emitter
write_stream_end	madpack/yaml/emitter.py	/^    def write_stream_end(self):$/;"	m	class:Emitter
write_stream_start	madpack/yaml/emitter.py	/^    def write_stream_start(self):$/;"	m	class:Emitter
write_tag_directive	madpack/yaml/emitter.py	/^    def write_tag_directive(self, handle_text, prefix_text):$/;"	m	class:Emitter
write_version_directive	madpack/yaml/emitter.py	/^    def write_version_directive(self, version_text):$/;"	m	class:Emitter
ws	modules/crf/linear_crf.cpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap ws;$/;"	m	class:madlib::modules::crf::LinCrfLBFGSTransitionState	file:
x	modules/crf/linear_crf.cpp	/^    ColumnVector x;\/\/ solution vector$/;"	m	class:madlib::modules::crf::LBFGS	file:
x_sum	modules/stats/t_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble x_sum;$/;"	m	class:madlib::modules::stats::TTestTransitionState	file:
xmean	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap xmean;$/;"	m	class:madlib::modules::elastic_net::IgdState
xtrapf	modules/crf/linear_crf.cpp	/^    double dg, dgm, dginit, dgtest, dgx, dgxm, dgy, dgym, finit, ftest1, fm, fx, fxm, fy, fym, p5, p66, stx, sty, stmin, stmax, width, width1, xtrapf;$/;"	m	class:madlib::modules::crf::LBFGS	file:
y_previous	modules/stats/CoxPHState.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble y_previous;$/;"	m	class:madlib::modules::stats::CoxPHState
y_previous	modules/stats/robust_variance_coxph.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble y_previous;$/;"	m	class:madlib::modules::stats::RBCoxPHTransitionState	file:
y_square_sum	modules/regress/LinearRegression_proto.hpp	/^    double_type y_square_sum;$/;"	m	class:madlib::modules::regress::LinearRegressionAccumulator
y_sum	modules/regress/LinearRegression_proto.hpp	/^    double_type y_sum;$/;"	m	class:madlib::modules::regress::LinearRegressionAccumulator
y_sum	modules/stats/t_test.cpp	/^    typename HandleTraits<Handle>::ReferenceToDouble y_sum;$/;"	m	class:madlib::modules::stats::TTestTransitionState	file:
yaml	madpack/configyml.py	/^import yaml$/;"	i
yaml	madpack/upgrade_util.py	/^import yaml$/;"	i
yaml_constructors	madpack/yaml/constructor.py	/^    yaml_constructors = {}$/;"	v	class:BaseConstructor
yaml_dumper	madpack/yaml/__init__.py	/^    yaml_dumper = Dumper$/;"	v	class:YAMLObject
yaml_flow_style	madpack/yaml/__init__.py	/^    yaml_flow_style = None$/;"	v	class:YAMLObject
yaml_implicit_resolvers	madpack/yaml/resolver.py	/^    yaml_implicit_resolvers = {}$/;"	v	class:BaseResolver
yaml_loader	madpack/yaml/__init__.py	/^    yaml_loader = Loader$/;"	v	class:YAMLObject
yaml_multi_constructors	madpack/yaml/constructor.py	/^    yaml_multi_constructors = {}$/;"	v	class:BaseConstructor
yaml_multi_representers	madpack/yaml/representer.py	/^    yaml_multi_representers = {}$/;"	v	class:BaseRepresenter
yaml_path_resolvers	madpack/yaml/resolver.py	/^    yaml_path_resolvers = {}$/;"	v	class:BaseResolver
yaml_representers	madpack/yaml/representer.py	/^    yaml_representers = {}$/;"	v	class:BaseRepresenter
yaml_tag	madpack/yaml/__init__.py	/^    yaml_tag = None$/;"	v	class:YAMLObject
ymean	modules/elastic_net/state/igd.hpp	/^    typename HandleTraits<Handle>::ReferenceToDouble ymean;$/;"	m	class:madlib::modules::elastic_net::IgdState
yr	modules/crf/linear_crf.cpp	/^    double stp1, ftol, stp, sq, yr, beta;$/;"	m	class:madlib::modules::crf::LBFGS	file:
z_stats	modules/glm/GLM_proto.hpp	/^    MutableNativeColumnVector z_stats;$/;"	m	class:madlib::modules::glm::GLMResult
z_stats	modules/glm/MultiResponseGLM_proto.hpp	/^    MutableNativeMatrix z_stats;$/;"	m	class:madlib::modules::glm::MultiResponseGLMResult
z_stats_alpha	modules/glm/Ordinal_proto.hpp	/^    MutableNativeColumnVector z_stats_alpha;$/;"	m	class:madlib::modules::glm::OrdinalResult
z_stats_beta	modules/glm/Ordinal_proto.hpp	/^    MutableNativeColumnVector z_stats_beta;$/;"	m	class:madlib::modules::glm::OrdinalResult
~DryRun	dbal/ByteStream_impl.hpp	/^ByteStream<StreamBuf, TypeTraits, IsMutable>::DryRun::~DryRun() {$/;"	f	class:madlib::dbal::ByteStream::DryRun
~ExampleTuple	modules/convex/type/tuple.hpp	/^    ~ExampleTuple() { }$/;"	f	struct:madlib::modules::convex::ExampleTuple
~LazyConversionToDatumOverride	ports/postgres/dbconnector/AnyType_impl.hpp	/^AnyType::LazyConversionToDatumOverride::~LazyConversionToDatumOverride() {$/;"	f	class:madlib::dbconnector::postgres::AnyType::LazyConversionToDatumOverride
~MallocAllocator	utils/MallocAllocator.hpp	/^    ~MallocAllocator() throw () { }$/;"	f	class:madlib::utils::MallocAllocator
~OutputStreamBufferBase	dbal/OutputStreamBufferBase_impl.hpp	/^OutputStreamBufferBase<Derived, C, Allocator>::~OutputStreamBufferBase() {$/;"	f	class:madlib::dbal::OutputStreamBufferBase
